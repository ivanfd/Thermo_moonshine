

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Dec 21 20:10:53 2020

Microchip MPLAB XC8 C Compiler v2.30 (Pro license) build 20200825195618 Og9s 
     1                           	processor	18F2320
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49                           	psect	pa_nodes0,global,class=CODE,delta=1
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F2320 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMRAM
    87  001674                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for _temperature_2
    91  001674  7FFF               	dw	32767
    92                           
    93                           ;initializer for _temperature_1
    94  001676  7FFF               	dw	32767
    95                           
    96                           ;initializer for _dq_num
    97  001678  01                 	db	1
    98                           
    99                           ;initializer for _sub_main
   100  001679  01                 	db	1
   101                           
   102                           ;initializer for _select
   103  00167A  01                 	db	1
   104                           
   105                           ;initializer for _minus_2
   106  00167B  2B                 	db	43
   107                           
   108                           ;initializer for _minus_1
   109  00167C  2B                 	db	43
   110                           
   111                           	psect	mediumconst
   112  001EA6                     __pmediumconst:
   113                           	callstack 0
   114  001EA6  00                 	db	0
   115  001EA7                     _HD44780_CYR:
   116                           	callstack 0
   117  001EA7  41                 	db	65
   118  001EA8  A0                 	db	160
   119  001EA9  42                 	db	66
   120  001EAA  A1                 	db	161
   121  001EAB  E0                 	db	224
   122  001EAC  45                 	db	69
   123  001EAD  A3                 	db	163
   124  001EAE  A4                 	db	164
   125  001EAF  A5                 	db	165
   126  001EB0  A6                 	db	166
   127  001EB1  4B                 	db	75
   128  001EB2  A7                 	db	167
   129  001EB3  4D                 	db	77
   130  001EB4  48                 	db	72
   131  001EB5  4F                 	db	79
   132  001EB6  A8                 	db	168
   133  001EB7  50                 	db	80
   134  001EB8  43                 	db	67
   135  001EB9  54                 	db	84
   136  001EBA  A9                 	db	169
   137  001EBB  AA                 	db	170
   138  001EBC  58                 	db	88
   139  001EBD  E1                 	db	225
   140  001EBE  AB                 	db	171
   141  001EBF  AC                 	db	172
   142  001EC0  E2                 	db	226
   143  001EC1  AD                 	db	173
   144  001EC2  AE                 	db	174
   145  001EC3  62                 	db	98
   146  001EC4  AF                 	db	175
   147  001EC5  B0                 	db	176
   148  001EC6  B1                 	db	177
   149  001EC7  61                 	db	97
   150  001EC8  B2                 	db	178
   151  001EC9  B3                 	db	179
   152  001ECA  B4                 	db	180
   153  001ECB  E3                 	db	227
   154  001ECC  65                 	db	101
   155  001ECD  B6                 	db	182
   156  001ECE  B7                 	db	183
   157  001ECF  B8                 	db	184
   158  001ED0  B9                 	db	185
   159  001ED1  BA                 	db	186
   160  001ED2  BB                 	db	187
   161  001ED3  BC                 	db	188
   162  001ED4  BD                 	db	189
   163  001ED5  6F                 	db	111
   164  001ED6  BE                 	db	190
   165  001ED7  70                 	db	112
   166  001ED8  63                 	db	99
   167  001ED9  BF                 	db	191
   168  001EDA  79                 	db	121
   169  001EDB  E4                 	db	228
   170  001EDC  78                 	db	120
   171  001EDD  E5                 	db	229
   172  001EDE  C0                 	db	192
   173  001EDF  C1                 	db	193
   174  001EE0  E6                 	db	230
   175  001EE1  C2                 	db	194
   176  001EE2  C3                 	db	195
   177  001EE3  C4                 	db	196
   178  001EE4  C5                 	db	197
   179  001EE5  C6                 	db	198
   180  001EE6  C7                 	db	199
   181  001EE7                     __end_of_HD44780_CYR:
   182                           	callstack 0
   183  001EE7                     _fract:
   184                           	callstack 0
   185  001EE7  00                 	db	0
   186  001EE8  01                 	db	1
   187  001EE9  01                 	db	1
   188  001EEA  02                 	db	2
   189  001EEB  02                 	db	2
   190  001EEC  03                 	db	3
   191  001EED  04                 	db	4
   192  001EEE  04                 	db	4
   193  001EEF  05                 	db	5
   194  001EF0  06                 	db	6
   195  001EF1  06                 	db	6
   196  001EF2  07                 	db	7
   197  001EF3  07                 	db	7
   198  001EF4  08                 	db	8
   199  001EF5  09                 	db	9
   200  001EF6  09                 	db	9
   201  001EF7                     __end_of_fract:
   202                           	callstack 0
   203  001EF7                     _symbol_4:
   204                           	callstack 0
   205  001EF7  06                 	db	6
   206  001EF8  09                 	db	9
   207  001EF9  09                 	db	9
   208  001EFA  06                 	db	6
   209  001EFB  00                 	db	0
   210  001EFC  00                 	db	0
   211  001EFD  00                 	db	0
   212  001EFE  00                 	db	0
   213  001EFF                     __end_of_symbol_4:
   214                           	callstack 0
   215  0000                     _EECON2	set	4007
   216  0000                     _EEDATA	set	4008
   217  0000                     _EEADR	set	4009
   218  0000                     _EECON1bits	set	4006
   219  0000                     _TRISAbits	set	3986
   220  0000                     _LATAbits	set	3977
   221  0000                     _T1CONbits	set	4045
   222  0000                     _PIR1bits	set	3998
   223  0000                     _RCONbits	set	4048
   224  0000                     _PIE1bits	set	3997
   225  0000                     _INTCON2bits	set	4081
   226  0000                     _INTCONbits	set	4082
   227  0000                     _TMR0L	set	4054
   228  0000                     _TMR0H	set	4055
   229  0000                     _T0CONbits	set	4053
   230  0000                     _IPR1bits	set	3999
   231  0000                     _TMR1L	set	4046
   232  0000                     _TMR1H	set	4047
   233  0000                     _T1CON	set	4045
   234  0000                     _PORTAbits	set	3968
   235  0000                     _ADCON1bits	set	4033
   236  0000                     _OSCCONbits	set	4051
   237  0000                     _TRISC	set	3988
   238  0000                     _LATC	set	3979
   239  0000                     _PORTC	set	3970
   240  0000                     _TRISB	set	3987
   241  0000                     _LATB	set	3978
   242  0000                     _TRISA	set	3986
   243  0000                     _LATA	set	3977
   244  0000                     _PORTA	set	3968
   245  0000                     _LATCbits	set	3979
   246  0000                     _PORTB	set	3969
   247  001EFF                     STR_10:
   248  001EFF  20                 	db	32
   249  001F00  CA                 	db	-54
   250  001F01  EE                 	db	-18
   251  001F02  E4                 	db	-28
   252  001F03  20                 	db	32
   253  001F04  EF                 	db	-17
   254  001F05  F0                 	db	-16
   255  001F06  EE                 	db	-18
   256  001F07  F7                 	db	-9
   257  001F08  E8                 	db	-24
   258  001F09  F2                 	db	-14
   259  001F0A  E0                 	db	-32
   260  001F0B  ED                 	db	-19
   261  001F0C  EE                 	db	-18
   262  001F0D  20                 	db	32
   263  001F0E  00                 	db	0
   264  001F0F                     STR_19:
   265  001F0F  D2                 	db	-46
   266  001F10  E5                 	db	-27
   267  001F11  EC                 	db	-20
   268  001F12  EF                 	db	-17
   269  001F13  20                 	db	32
   270  001F14  E4                 	db	-28
   271  001F15  F0                 	db	-16
   272  001F16  E1                 	db	-31
   273  001F17  3A                 	db	58	;':'
   274  001F18  20                 	db	32
   275  001F19  20                 	db	32
   276  001F1A  20                 	db	32
   277  001F1B  20                 	db	32
   278  001F1C  20                 	db	32
   279  001F1D  20                 	db	32
   280  001F1E  00                 	db	0
   281  001F1F                     STR_1:
   282  001F1F  2D                 	db	45
   283  001F20  2D                 	db	45
   284  001F21  2D                 	db	45
   285  001F22  D2                 	db	-46
   286  001F23  C5                 	db	-59
   287  001F24  D0                 	db	-48
   288  001F25  CC                 	db	-52
   289  001F26  CE                 	db	-50
   290  001F27  CC                 	db	-52
   291  001F28  C5                 	db	-59
   292  001F29  D2                 	db	-46
   293  001F2A  D0                 	db	-48
   294  001F2B  2D                 	db	45
   295  001F2C  2D                 	db	45
   296  001F2D  2D                 	db	45
   297  001F2E  00                 	db	0
   298  001F2F                     STR_2:
   299  001F2F  28                 	db	40
   300  001F30  63                 	db	99	;'c'
   301  001F31  29                 	db	41
   302  001F32  49                 	db	73	;'I'
   303  001F33  76                 	db	118	;'v'
   304  001F34  61                 	db	97	;'a'
   305  001F35  6E                 	db	110	;'n'
   306  001F36  5F                 	db	95	;'_'
   307  001F37  66                 	db	102	;'f'
   308  001F38  64                 	db	100	;'d'
   309  001F39  20                 	db	32
   310  001F3A  76                 	db	118	;'v'
   311  001F3B  31                 	db	49	;'1'
   312  001F3C  2E                 	db	46
   313  001F3D  30                 	db	48	;'0'
   314  001F3E  00                 	db	0
   315  001F3F                     STR_3:
   316  001F3F  C4                 	db	-60
   317  001F40  E0                 	db	-32
   318  001F41  F2                 	db	-14
   319  001F42  F7                 	db	-9
   320  001F43  E8                 	db	-24
   321  001F44  EA                 	db	-22
   322  001F45  20                 	db	32
   323  001F46  31                 	db	49	;'1'
   324  001F47  2C                 	db	44
   325  001F48  20                 	db	32
   326  001F49  E0                 	db	-32
   327  001F4A  E1                 	db	-31
   328  001F4B  EE                 	db	-18
   329  001F4C  20                 	db	32
   330  001F4D  32                 	db	50	;'2'
   331  001F4E  00                 	db	0
   332  001F4F                     STR_9:
   333  001F4F  20                 	db	32
   334  001F50  20                 	db	32
   335  001F51  31                 	db	49	;'1'
   336  001F52  20                 	db	32
   337  001F53  20                 	db	32
   338  001F54  20                 	db	32
   339  001F55  20                 	db	32
   340  001F56  20                 	db	32
   341  001F57  32                 	db	50	;'2'
   342  001F58  20                 	db	32
   343  001F59  20                 	db	32
   344  001F5A  20                 	db	32
   345  001F5B  31                 	db	49	;'1'
   346  001F5C  2D                 	db	45
   347  001F5D  32                 	db	50	;'2'
   348  001F5E  00                 	db	0
   349  001F5F                     STR_8:
   350  001F5F  CF                 	db	-49
   351  001F60  EE                 	db	-18
   352  001F61  F0                 	db	-16
   353  001F62  69                 	db	105	;'i'
   354  001F63  E3                 	db	-29
   355  001F64  20                 	db	32
   356  001F65  D1                 	db	-47
   357  001F66  E8                 	db	-24
   358  001F67  E3                 	db	-29
   359  001F68  ED                 	db	-19
   360  001F69  2E                 	db	46
   361  001F6A  20                 	db	32
   362  001F6B  4C                 	db	76	;'L'
   363  001F6C  65                 	db	101	;'e'
   364  001F6D  64                 	db	100	;'d'
   365  001F6E  00                 	db	0
   366  001F6F                     STR_13:
   367  001F6F  20                 	db	32
   368  001F70  CA                 	db	-54
   369  001F71  EE                 	db	-18
   370  001F72  EB                 	db	-21
   371  001F73  EE                 	db	-18
   372  001F74  ED                 	db	-19
   373  001F75  E0                 	db	-32
   374  001F76  20                 	db	32
   375  001F77  20                 	db	32
   376  001F78  20                 	db	32
   377  001F79  20                 	db	32
   378  001F7A  CA                 	db	-54
   379  001F7B  F3                 	db	-13
   380  001F7C  E1                 	db	-31
   381  001F7D  00                 	db	0
   382  001F7E                     STR_18:
   383  001F7E  D2                 	db	-46
   384  001F7F  E5                 	db	-27
   385  001F80  EC                 	db	-20
   386  001F81  EF                 	db	-17
   387  001F82  20                 	db	32
   388  001F83  CD                 	db	-51
   389  001F84  E8                 	db	-24
   390  001F85  E7                 	db	-25
   391  001F86  3A                 	db	58	;':'
   392  001F87  20                 	db	32
   393  001F88  20                 	db	32
   394  001F89  20                 	db	32
   395  001F8A  20                 	db	32
   396  001F8B  20                 	db	32
   397  001F8C  00                 	db	0
   398  001F8D                     STR_12:
   399  001F8D  CA                 	db	-54
   400  001F8E  EE                 	db	-18
   401  001F8F  EB                 	db	-21
   402  001F90  28                 	db	40
   403  001F91  31                 	db	49	;'1'
   404  001F92  29                 	db	41
   405  001F93  2F                 	db	47
   406  001F94  CA                 	db	-54
   407  001F95  F3                 	db	-13
   408  001F96  E1                 	db	-31
   409  001F97  28                 	db	40
   410  001F98  32                 	db	50	;'2'
   411  001F99  29                 	db	41
   412  001F9A  3A                 	db	58	;':'
   413  001F9B  00                 	db	0
   414  001F9C                     STR_11:
   415  001F9C  20                 	db	32
   416  001F9D  20                 	db	32
   417  001F9E  20                 	db	32
   418  001F9F  C3                 	db	-61
   419  001FA0  F0                 	db	-16
   420  001FA1  E0                 	db	-32
   421  001FA2  ED                 	db	-19
   422  001FA3  E8                 	db	-24
   423  001FA4  F6                 	db	-10
   424  001FA5  69                 	db	105	;'i'
   425  001FA6  20                 	db	32
   426  001FA7  20                 	db	32
   427  001FA8  20                 	db	32
   428  001FA9  00                 	db	0
   429  001FAA                     STR_16:
   430  001FAA  20                 	db	32
   431  001FAB  20                 	db	32
   432  001FAC  20                 	db	32
   433  001FAD  20                 	db	32
   434  001FAE  CA                 	db	-54
   435  001FAF  F3                 	db	-13
   436  001FB0  E1                 	db	-31
   437  001FB1  EE                 	db	-18
   438  001FB2  E2                 	db	-30
   439  001FB3  E0                 	db	-32
   440  001FB4  20                 	db	32
   441  001FB5  20                 	db	32
   442  001FB6  00                 	db	0
   443  001FB7                     STR_14:
   444  001FB7  20                 	db	32
   445  001FB8  20                 	db	32
   446  001FB9  20                 	db	32
   447  001FBA  20                 	db	32
   448  001FBB  CA                 	db	-54
   449  001FBC  EE                 	db	-18
   450  001FBD  EB                 	db	-21
   451  001FBE  EE                 	db	-18
   452  001FBF  ED                 	db	-19
   453  001FC0  E0                 	db	-32
   454  001FC1  20                 	db	32
   455  001FC2  20                 	db	32
   456  001FC3  00                 	db	0
   457  001FC4                     STR_4:
   458  001FC4  C2                 	db	-62
   459  001FC5  E8                 	db	-24
   460  001FC6  E1                 	db	-31
   461  001FC7  69                 	db	105	;'i'
   462  001FC8  F0                 	db	-16
   463  001FC9  20                 	db	32
   464  001FCA  31                 	db	49	;'1'
   465  001FCB  38                 	db	56	;'8'
   466  001FCC  42                 	db	66	;'B'
   467  001FCD  32                 	db	50	;'2'
   468  001FCE  30                 	db	48	;'0'
   469  001FCF  3A                 	db	58	;':'
   470  001FD0  00                 	db	0
   471  001FD1                     STR_15:
   472  001FD1  D2                 	db	-46
   473  001FD2  E5                 	db	-27
   474  001FD3  EC                 	db	-20
   475  001FD4  EF                 	db	-17
   476  001FD5  20                 	db	32
   477  001FD6  C2                 	db	-62
   478  001FD7  E5                 	db	-27
   479  001FD8  F0                 	db	-16
   480  001FD9  F5                 	db	-11
   481  001FDA  3A                 	db	58	;':'
   482  001FDB  00                 	db	0
   483  001FDC                     STR_17:
   484  001FDC  D2                 	db	-46
   485  001FDD  E5                 	db	-27
   486  001FDE  EC                 	db	-20
   487  001FDF  EF                 	db	-17
   488  001FE0  20                 	db	32
   489  001FE1  F6                 	db	-10
   490  001FE2  69                 	db	105	;'i'
   491  001FE3  EB                 	db	-21
   492  001FE4  69                 	db	105	;'i'
   493  001FE5  3A                 	db	58	;':'
   494  001FE6  00                 	db	0
   495  001FE7                     STR_6:
   496  001FE7  CA                 	db	-54
   497  001FE8  F3                 	db	-13
   498  001FE9  E1                 	db	-31
   499  001FEA  EE                 	db	-18
   500  001FEB  E2                 	db	-30
   501  001FEC  E0                 	db	-32
   502  001FED  3A                 	db	58	;':'
   503  001FEE  00                 	db	0
   504  001FEF                     STR_5:
   505  001FEF  CA                 	db	-54
   506  001FF0  EE                 	db	-18
   507  001FF1  EB                 	db	-21
   508  001FF2  EE                 	db	-18
   509  001FF3  ED                 	db	-19
   510  001FF4  E0                 	db	-32
   511  001FF5  3A                 	db	58	;':'
   512  001FF6  00                 	db	0
   513  001FF7                     STR_7:
   514  001FF7  CF                 	db	-49
   515  001FF8  EE                 	db	-18
   516  001FF9  F0                 	db	-16
   517  001FFA  69                 	db	105	;'i'
   518  001FFB  E3                 	db	-29
   519  001FFC  3A                 	db	58	;':'
   520  001FFD  00                 	db	0
   521  001FFE  00                 	db	0	; dummy byte at the end
   522  0000                     
   523                           ; #config settings
   524                           
   525                           	psect	cinit
   526  0013B0                     __pcinit:
   527                           	callstack 0
   528  0013B0                     start_initialization:
   529                           	callstack 0
   530  0013B0                     __initialization:
   531                           	callstack 0
   532                           
   533                           ; Initialize objects allocated to COMRAM (9 bytes)
   534                           ; load TBLPTR registers with __pidataCOMRAM
   535  0013B0  0E74               	movlw	low __pidataCOMRAM
   536  0013B2  6EF6               	movwf	tblptrl,c
   537  0013B4  0E16               	movlw	high __pidataCOMRAM
   538  0013B6  6EF7               	movwf	tblptrh,c
   539  0013B8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   540  0013BA  6EF8               	movwf	tblptru,c
   541  0013BC  EE00  F047         	lfsr	0,__pdataCOMRAM
   542  0013C0  EE10 F009          	lfsr	1,9
   543  0013C4                     copy_data0:
   544  0013C4  0009               	tblrd		*+
   545  0013C6  CFF5 FFEE          	movff	tablat,postinc0
   546  0013CA  50E5               	movf	postdec1,w,c
   547  0013CC  50E1               	movf	fsr1l,w,c
   548  0013CE  E1FA               	bnz	copy_data0
   549                           
   550                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   551  0013D0  6A46               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   552  0013D2  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   553                           
   554                           ; Clear objects allocated to COMRAM (45 bytes)
   555  0013D4  EE00  F001         	lfsr	0,__pbssCOMRAM
   556  0013D8  0E2D               	movlw	45
   557  0013DA                     clear_0:
   558  0013DA  6AEE               	clrf	postinc0,c
   559  0013DC  06E8               	decf	wreg,f,c
   560  0013DE  E1FD               	bnz	clear_0
   561  0013E0                     end_of_initialization:
   562                           	callstack 0
   563  0013E0                     __end_of__initialization:
   564                           	callstack 0
   565  0013E0  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   566  0013E2  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   567  0013E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   568  0013E6  6EF8               	movwf	tblptru,c
   569  0013E8  0100               	movlb	0
   570  0013EA  EF4E  F000         	goto	_main	;jump to C main() function
   571                           
   572                           	psect	bitbssCOMRAM
   573  000228                     __pbitbssCOMRAM:
   574                           	callstack 0
   575  000228                     _en_snd_b:
   576                           	callstack 0
   577  000228                     	ds	1
   578  000229                     _en_snd_k:
   579                           	callstack 0
   580  000229                     	ds	1
   581  00022A                     _snd_b_b:
   582                           	callstack 0
   583  00022A                     	ds	1
   584  00022B                     _snd_k_b:
   585                           	callstack 0
   586  00022B                     	ds	1
   587  00022C                     _snd_all:
   588                           	callstack 0
   589  00022C                     	ds	1
   590  00022D                     _snd_b:
   591                           	callstack 0
   592  00022D                     	ds	1
   593  00022E                     _snd_k:
   594                           	callstack 0
   595  00022E                     	ds	1
   596  00022F                     _sound_yes:
   597                           	callstack 0
   598  00022F                     	ds	1
   599  000230                     _en_sound:
   600                           	callstack 0
   601  000230                     	ds	1
   602  000231                     _read_key:
   603                           	callstack 0
   604  000231                     	ds	1
   605                           
   606                           	psect	bssCOMRAM
   607  000001                     __pbssCOMRAM:
   608                           	callstack 0
   609  000001                     _rom_dq:
   610                           	callstack 0
   611  000001                     	ds	16
   612  000011                     _temp_ready:
   613                           	callstack 0
   614  000011                     	ds	4
   615  000015                     key_press@count:
   616                           	callstack 0
   617  000015                     	ds	2
   618  000017                     _temp1_fix:
   619                           	callstack 0
   620  000017                     	ds	2
   621  000019                     _set_t_dq2:
   622                           	callstack 0
   623  000019                     	ds	2
   624  00001B                     _key_pressed:
   625                           	callstack 0
   626  00001B                     	ds	1
   627  00001C                     myIntL@snd_delay:
   628                           	callstack 0
   629  00001C                     	ds	1
   630  00001D                     _set_t_dq2_10:
   631                           	callstack 0
   632  00001D                     	ds	1
   633  00001E                     _set_t_dq2_100:
   634                           	callstack 0
   635  00001E                     	ds	1
   636  00001F                     _set_t_dq1_dwn:
   637                           	callstack 0
   638  00001F                     	ds	1
   639  000020                     _set_t_dq1_up:
   640                           	callstack 0
   641  000020                     	ds	1
   642  000021                     _sub_sel:
   643                           	callstack 0
   644  000021                     	ds	1
   645  000022                     _pressed_key:
   646                           	callstack 0
   647  000022                     	ds	1
   648  000023                     _scratch:
   649                           	callstack 0
   650  000023                     	ds	9
   651  00002C                     _time_flag:
   652                           	callstack 0
   653  00002C                     	ds	1
   654  00002D                     _timer_val:
   655                           	callstack 0
   656  00002D                     	ds	1
   657                           
   658                           	psect	dataCOMRAM
   659  000047                     __pdataCOMRAM:
   660                           	callstack 0
   661  000047                     _temperature_2:
   662                           	callstack 0
   663  000047                     	ds	2
   664  000049                     _temperature_1:
   665                           	callstack 0
   666  000049                     	ds	2
   667  00004B                     _dq_num:
   668                           	callstack 0
   669  00004B                     	ds	1
   670  00004C                     _sub_main:
   671                           	callstack 0
   672  00004C                     	ds	1
   673  00004D                     _select:
   674                           	callstack 0
   675  00004D                     	ds	1
   676  00004E                     _minus_2:
   677                           	callstack 0
   678  00004E                     	ds	1
   679  00004F                     _minus_1:
   680                           	callstack 0
   681  00004F                     	ds	1
   682                           
   683                           	psect	cstackCOMRAM
   684  00002E                     __pcstackCOMRAM:
   685                           	callstack 0
   686  00002E                     ??_myIntL:
   687  00002E                     
   688                           ; 1 bytes @ 0x0
   689  00002E                     	ds	3
   690  000031                     ??_read_byte:
   691  000031                     ??_lcdNibble:
   692  000031                     ?_ds18b20_get_temp:
   693                           	callstack 0
   694  000031                     ?___lwdiv:
   695                           	callstack 0
   696  000031                     ds18b20_get_temp@minus:
   697                           	callstack 0
   698  000031                     ds18b20_crc8@data_in:
   699                           	callstack 0
   700  000031                     ow_reset@presence:
   701                           	callstack 0
   702  000031                     write_bit@bitval:
   703                           	callstack 0
   704  000031                     write_eep@data:
   705                           	callstack 0
   706  000031                     key_press@key:
   707                           	callstack 0
   708  000031                     key_GetKey@key:
   709                           	callstack 0
   710  000031                     ___lbdiv@divisor:
   711                           	callstack 0
   712  000031                     Delay_ms@delay:
   713                           	callstack 0
   714  000031                     read_eep@address:
   715                           	callstack 0
   716  000031                     ___lwdiv@dividend:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x3
   720  000031                     	ds	1
   721  000032                     ??_write_byte:
   722  000032                     ds18b20_crc8@num_bytes:
   723                           	callstack 0
   724  000032                     lcdNibble@nibble:
   725                           	callstack 0
   726  000032                     write_eep@address:
   727                           	callstack 0
   728  000032                     ___lbdiv@dividend:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x4
   732  000032                     	ds	1
   733  000033                     ??_Delay_ms:
   734  000033                     ds18b20_get_temp@num_dq:
   735                           	callstack 0
   736  000033                     ds18b20_crc8@bit_counter:
   737                           	callstack 0
   738  000033                     lcdWrite@type:
   739                           	callstack 0
   740  000033                     read_byte@val:
   741                           	callstack 0
   742  000033                     ___lbdiv@counter:
   743                           	callstack 0
   744  000033                     ___lwdiv@divisor:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x5
   748  000033                     	ds	1
   749  000034                     ds18b20_get_temp@tmp:
   750                           	callstack 0
   751  000034                     ds18b20_crc8@data:
   752                           	callstack 0
   753  000034                     lcdWrite@byte:
   754                           	callstack 0
   755  000034                     read_byte@i:
   756                           	callstack 0
   757  000034                     write_byte@val:
   758                           	callstack 0
   759  000034                     ___lbdiv@quotient:
   760                           	callstack 0
   761  000034                     Delay_ms@i:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x6
   765  000034                     	ds	1
   766  000035                     ??_clearLCD:
   767  000035                     ds18b20_crc8@feedback_bit:
   768                           	callstack 0
   769  000035                     lcd_gotoxy@y:
   770                           	callstack 0
   771  000035                     lcd_putc@c:
   772                           	callstack 0
   773  000035                     write_byte@temp:
   774                           	callstack 0
   775  000035                     ___lbmod@divisor:
   776                           	callstack 0
   777  000035                     ds18b20_get_temp@temp:
   778                           	callstack 0
   779  000035                     cgrom_char@symbol:
   780                           	callstack 0
   781  000035                     ___lwdiv@quotient:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x7
   785  000035                     	ds	1
   786  000036                     ??_initLCD:
   787  000036                     ds18b20_crc8@loop_count:
   788                           	callstack 0
   789  000036                     lcd_gotoxy@x:
   790                           	callstack 0
   791  000036                     write_byte@i:
   792                           	callstack 0
   793  000036                     ___lbmod@dividend:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x8
   797  000036                     	ds	1
   798  000037                     ??_init_ds18b20:
   799  000037                     ds18b20_crc8@crc:
   800                           	callstack 0
   801  000037                     lcd_gotoxy@address:
   802                           	callstack 0
   803  000037                     cgrom_char@address:
   804                           	callstack 0
   805  000037                     ___lbmod@counter:
   806                           	callstack 0
   807  000037                     ___lwdiv@counter:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x9
   811  000037                     	ds	1
   812  000038                     ?___lwmod:
   813                           	callstack 0
   814  000038                     ds18b20_readTemp@time_flag:
   815                           	callstack 0
   816  000038                     cgrom_char@i:
   817                           	callstack 0
   818  000038                     ___lbmod@rem:
   819                           	callstack 0
   820  000038                     lcdPrint@t:
   821                           	callstack 0
   822  000038                     ___lwmod@dividend:
   823                           	callstack 0
   824  000038                     ds18b20_readrom@temp_rom:
   825                           	callstack 0
   826                           
   827                           ; 8 bytes @ 0xA
   828  000038                     	ds	1
   829  000039                     init_ds18b20@q:
   830                           	callstack 0
   831  000039                     ds18b20_readTemp@timer_val:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0xB
   835  000039                     	ds	1
   836  00003A                     ??_lcdPrint:
   837  00003A                     ??_ds18b20_readTemp:
   838  00003A                     init_ds18b20@i:
   839                           	callstack 0
   840  00003A                     ___lwmod@divisor:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0xC
   844  00003A                     	ds	1
   845  00003B                     
   846                           ; 1 bytes @ 0xD
   847  00003B                     	ds	1
   848  00003C                     ___lwmod@counter:
   849                           	callstack 0
   850  00003C                     ds18b20_readTemp@temp:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0xE
   854  00003C                     	ds	2
   855  00003E                     ds18b20_readTemp@j:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x10
   859  00003E                     	ds	1
   860  00003F                     ds18b20_readTemp@i:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x11
   864  00003F                     	ds	1
   865  000040                     ds18b20_readrom@num_dq:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x12
   869  000040                     	ds	1
   870  000041                     ds18b20_readrom@i:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x13
   874  000041                     	ds	1
   875  000042                     ??_main:
   876                           
   877                           ; 1 bytes @ 0x14
   878  000042                     	ds	3
   879                           
   880 ;;
   881 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   882 ;;
   883 ;; *************** function _main *****************
   884 ;; Defined at:
   885 ;;		line 35 in file "main.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1
   899 ;;      Params:         0       0       0
   900 ;;      Locals:         0       0       0
   901 ;;      Temps:          3       0       0
   902 ;;      Totals:         3       0       0
   903 ;;Total ram usage:        3 bytes
   904 ;; Hardware stack levels required when called:    7
   905 ;; This function calls:
   906 ;;		_Delay_ms
   907 ;;		_Main_init
   908 ;;		___lbdiv
   909 ;;		___lbmod
   910 ;;		___lwdiv
   911 ;;		___lwmod
   912 ;;		_clearLCD
   913 ;;		_ds18b20_get_temp
   914 ;;		_ds18b20_readTemp
   915 ;;		_ds18b20_readrom
   916 ;;		_key_GetKey
   917 ;;		_key_press
   918 ;;		_lcdPrint
   919 ;;		_lcd_gotoxy
   920 ;;		_lcd_putc
   921 ;;		_read_eep
   922 ;;		_write_eep
   923 ;; This function is called by:
   924 ;;		Startup code after reset
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text0
   929  00009C                     __ptext0:
   930                           	callstack 0
   931  00009C                     _main:
   932                           	callstack 24
   933                           
   934                           ;main.c: 36: Main_init();
   935                           
   936                           ;incstack = 0
   937  00009C  ECC0  F008         	call	_Main_init	;wreg free
   938                           
   939                           ;main.c: 38: lcd_gotoxy(1, 1);
   940  0000A0  0E01               	movlw	1
   941  0000A2  6E35               	movwf	lcd_gotoxy@y^0,c
   942  0000A4  EC00  F00B         	call	_lcd_gotoxy
   943                           
   944                           ;main.c: 39: lcdPrint("---ÒÅÐÌÎÌÅÒÐ---");
   945  0000A8  0E1F               	movlw	low STR_1
   946  0000AA  6E38               	movwf	lcdPrint@t^0,c
   947  0000AC  0E1F               	movlw	high STR_1
   948  0000AE  6E39               	movwf	(lcdPrint@t+1)^0,c
   949  0000B0  ECEA  F007         	call	_lcdPrint	;wreg free
   950                           
   951                           ;main.c: 40: lcd_gotoxy(1, 2);
   952  0000B4  ECB9  F006         	call	PL22	;call to abstracted procedure
   953  0000B8  EC00  F00B         	call	_lcd_gotoxy
   954                           
   955                           ;main.c: 41: lcdPrint("(c)Ivan_fd v1.0");
   956  0000BC  0E2F               	movlw	low STR_2
   957  0000BE  6E38               	movwf	lcdPrint@t^0,c
   958  0000C0  0E1F               	movlw	high STR_2
   959  0000C2  6E39               	movwf	(lcdPrint@t+1)^0,c
   960  0000C4  ECEA  F007         	call	_lcdPrint	;wreg free
   961                           
   962                           ;main.c: 42: Delay_ms(2000);
   963  0000C8  0E07               	movlw	7
   964  0000CA  6E32               	movwf	(Delay_ms@delay+1)^0,c
   965  0000CC  0ED0               	movlw	208
   966  0000CE  6E31               	movwf	Delay_ms@delay^0,c
   967  0000D0  ECBC  F00A         	call	_Delay_ms	;wreg free
   968                           
   969                           ;main.c: 43: clearLCD();
   970  0000D4  EC0E  F00B         	call	_clearLCD	;wreg free
   971                           
   972                           ;main.c: 44: if ((PORTB & (1 << 1)) == 0) {
   973  0000D8  B281               	btfsc	129,1,c	;volatile
   974  0000DA  D017               	goto	l2872
   975                           
   976                           ;main.c: 45: clearLCD();
   977  0000DC  EC0E  F00B         	call	_clearLCD	;wreg free
   978                           
   979                           ;main.c: 46: select = 2;
   980  0000E0  0E02               	movlw	2
   981                           
   982                           ;main.c: 47: lcd_gotoxy(1, 1);
   983  0000E2  ECC8  F006         	call	PL30	;call to abstracted procedure
   984  0000E6  EC00  F00B         	call	_lcd_gotoxy
   985                           
   986                           ;main.c: 48: lcdPrint("Äàò÷èê 1, àáî 2");
   987  0000EA  0E3F               	movlw	low STR_3
   988  0000EC  6E38               	movwf	lcdPrint@t^0,c
   989  0000EE  0E1F               	movlw	high STR_3
   990  0000F0  6E39               	movwf	(lcdPrint@t+1)^0,c
   991  0000F2  ECEA  F007         	call	_lcdPrint	;wreg free
   992                           
   993                           ;main.c: 49: lcd_gotoxy(1, 2);
   994  0000F6  ECB9  F006         	call	PL22	;call to abstracted procedure
   995  0000FA  EC00  F00B         	call	_lcd_gotoxy
   996                           
   997                           ;main.c: 50: lcdPrint("Âèáið 18B20:");
   998  0000FE  0EC4               	movlw	low STR_4
   999  000100  6E38               	movwf	lcdPrint@t^0,c
  1000  000102  0E1F               	movlw	high STR_4
  1001  000104  6E39               	movwf	(lcdPrint@t+1)^0,c
  1002  000106  ECEA  F007         	call	_lcdPrint	;wreg free
  1003  00010A                     l2872:
  1004                           
  1005                           ;main.c: 52: };main.c: 54: set_t_dq1_up = read_eep(16);
  1006  00010A  6A32               	clrf	(read_eep@address+1)^0,c
  1007  00010C  0E10               	movlw	16
  1008  00010E  6E31               	movwf	read_eep@address^0,c
  1009  000110  EC26  F00B         	call	_read_eep	;wreg free
  1010  000114  6E20               	movwf	_set_t_dq1_up^0,c
  1011                           
  1012                           ;main.c: 55: set_t_dq1_dwn = read_eep(17);
  1013  000116  6A32               	clrf	(read_eep@address+1)^0,c
  1014  000118  0E11               	movlw	17
  1015  00011A  6E31               	movwf	read_eep@address^0,c
  1016  00011C  EC26  F00B         	call	_read_eep	;wreg free
  1017  000120  6E1F               	movwf	_set_t_dq1_dwn^0,c
  1018                           
  1019                           ;main.c: 56: set_t_dq2 = (uint16_t) read_eep(18) << 8 | read_eep(19);
  1020  000122  6A32               	clrf	(read_eep@address+1)^0,c
  1021  000124  0E13               	movlw	19
  1022  000126  6E31               	movwf	read_eep@address^0,c
  1023  000128  EC26  F00B         	call	_read_eep	;wreg free
  1024  00012C  6E42               	movwf	??_main^0,c
  1025  00012E  6A32               	clrf	(read_eep@address+1)^0,c
  1026  000130  0E12               	movlw	18
  1027  000132  6E31               	movwf	read_eep@address^0,c
  1028  000134  EC26  F00B         	call	_read_eep	;wreg free
  1029  000138  6E43               	movwf	(??_main+1)^0,c
  1030  00013A  5042               	movf	??_main^0,w,c
  1031  00013C  6E19               	movwf	_set_t_dq2^0,c
  1032  00013E  C043  F01A         	movff	??_main+1,_set_t_dq2+1
  1033                           
  1034                           ;main.c: 57: temp1_fix = (uint16_t) read_eep(20) << 8 | read_eep(20 + 1);
  1035  000142  6A32               	clrf	(read_eep@address+1)^0,c
  1036  000144  0E15               	movlw	21
  1037  000146  6E31               	movwf	read_eep@address^0,c
  1038  000148  EC26  F00B         	call	_read_eep	;wreg free
  1039  00014C  6E42               	movwf	??_main^0,c
  1040  00014E  6A32               	clrf	(read_eep@address+1)^0,c
  1041  000150  0E14               	movlw	20
  1042  000152  6E31               	movwf	read_eep@address^0,c
  1043  000154  EC26  F00B         	call	_read_eep	;wreg free
  1044  000158  6E43               	movwf	(??_main+1)^0,c
  1045  00015A  5042               	movf	??_main^0,w,c
  1046  00015C  6E17               	movwf	_temp1_fix^0,c
  1047  00015E  C043  F018         	movff	??_main+1,_temp1_fix+1
  1048  000162                     l2880:
  1049                           
  1050                           ;main.c: 64: if (read_key) {
  1051  000162  A246               	btfss	(_read_key/(0+8))^0,_read_key& (0+7),c
  1052  000164  D003               	goto	l2886
  1053                           
  1054                           ;main.c: 65: key_press();
  1055  000166  EC67  F009         	call	_key_press	;wreg free
  1056                           
  1057                           ;main.c: 66: read_key = 0;
  1058  00016A  9246               	bcf	(_read_key/(0+8))^0,_read_key& (0+7),c
  1059  00016C                     l2886:
  1060                           
  1061                           ;main.c: 67: };main.c: 68: pressed_key = key_GetKey();
  1062  00016C  EC35  F00B         	call	_key_GetKey	;wreg free
  1063  000170  6E22               	movwf	_pressed_key^0,c
  1064                           
  1065                           ;main.c: 70: switch (select) {
  1066  000172  EF6D  F006         	goto	l3274
  1067  000176                     l2888:
  1068                           
  1069                           ;main.c: 72: if (ds18b20_readTemp(&time_flag, &timer_val)) {
  1070  000176  0E2C               	movlw	low _time_flag
  1071  000178  6E38               	movwf	ds18b20_readTemp@time_flag^0,c
  1072  00017A  0E2D               	movlw	low _timer_val
  1073  00017C  6E39               	movwf	ds18b20_readTemp@timer_val^0,c
  1074  00017E  EC7C  F007         	call	_ds18b20_readTemp	;wreg free
  1075  000182  0900               	iorlw	0
  1076  000184  E101 D306          	bz	l2956
  1077                           
  1078                           ;main.c: 73: temperature_1 = ds18b20_get_temp(1, &minus_1);
  1079  000188  0E4F               	movlw	low _minus_1
  1080  00018A  6E31               	movwf	ds18b20_get_temp@minus^0,c
  1081  00018C  0E01               	movlw	1
  1082  00018E  EC3E  F008         	call	_ds18b20_get_temp
  1083  000192  C031  F049         	movff	?_ds18b20_get_temp,_temperature_1
  1084  000196  C032  F04A         	movff	?_ds18b20_get_temp+1,_temperature_1+1
  1085                           
  1086                           ;main.c: 74: temperature_2 = ds18b20_get_temp(2, &minus_2);
  1087  00019A  0E4E               	movlw	low _minus_2
  1088  00019C  6E31               	movwf	ds18b20_get_temp@minus^0,c
  1089  00019E  0E02               	movlw	2
  1090  0001A0  EC3E  F008         	call	_ds18b20_get_temp
  1091  0001A4  C031  F047         	movff	?_ds18b20_get_temp,_temperature_2
  1092  0001A8  C032  F048         	movff	?_ds18b20_get_temp+1,_temperature_2+1
  1093  0001AC  D2F3               	goto	l2956
  1094  0001AE                     l2892:
  1095                           
  1096                           ;main.c: 83: lcd_gotoxy(1, 1);
  1097  0001AE  0E01               	movlw	1
  1098  0001B0  6E35               	movwf	lcd_gotoxy@y^0,c
  1099  0001B2  EC00  F00B         	call	_lcd_gotoxy
  1100                           
  1101                           ;main.c: 84: lcdPrint("Êîëîíà:");
  1102  0001B6  0EEF               	movlw	low STR_5
  1103  0001B8  6E38               	movwf	lcdPrint@t^0,c
  1104  0001BA  0E1F               	movlw	high STR_5
  1105  0001BC  6E39               	movwf	(lcdPrint@t+1)^0,c
  1106  0001BE  ECEA  F007         	call	_lcdPrint	;wreg free
  1107                           
  1108                           ;main.c: 86: if (!(temperature_1 == 32767)) {
  1109  0001C2  2849               	incf	_temperature_1^0,w,c
  1110  0001C4  E104               	bnz	u1880
  1111  0001C6  0E7F               	movlw	127
  1112  0001C8  184A               	xorwf	(_temperature_1+1)^0,w,c
  1113  0001CA  E101 D0BC          	bz	l2908
  1114  0001CE                     u1880:
  1115                           
  1116                           ;main.c: 87: if (((temperature_1 / 1000) % 10) == 0) {
  1117  0001CE  ECB6  F006         	call	PL20	;call to abstracted procedure
  1118  0001D2  EC9B  F006         	call	PL8	;call to abstracted procedure
  1119  0001D6  ECB3  F009         	call	___lwdiv	;wreg free
  1120  0001DA  EC89  F006         	call	PL2	;call to abstracted procedure
  1121  0001DE  ECF7  F009         	call	___lwmod	;wreg free
  1122  0001E2  5038               	movf	?___lwmod^0,w,c
  1123  0001E4  1039               	iorwf	(?___lwmod+1)^0,w,c
  1124  0001E6  E16E               	bnz	l2906
  1125                           
  1126                           ;main.c: 88: if (((temperature_1 / 100) % 10) == 0) {
  1127  0001E8  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1128  0001EA  0E64               	movlw	100
  1129  0001EC  EC9B  F006         	call	PL8	;call to abstracted procedure
  1130  0001F0  ECB3  F009         	call	___lwdiv	;wreg free
  1131  0001F4  EC89  F006         	call	PL2	;call to abstracted procedure
  1132  0001F8  ECF7  F009         	call	___lwmod	;wreg free
  1133  0001FC  5038               	movf	?___lwmod^0,w,c
  1134  0001FE  1039               	iorwf	(?___lwmod+1)^0,w,c
  1135  000200  E12B               	bnz	l2904
  1136                           
  1137                           ;main.c: 89: lcd_putc(minus_1);
  1138  000202  504F               	movf	_minus_1^0,w,c
  1139  000204  EC2F  F00B         	call	_lcd_putc
  1140                           
  1141                           ;main.c: 91: lcd_putc(((temperature_1 / 10) % 10) + 48);
  1142  000208  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1143  00020A  0E0A               	movlw	10
  1144  00020C  EC9B  F006         	call	PL8	;call to abstracted procedure
  1145  000210  ECB3  F009         	call	___lwdiv	;wreg free
  1146  000214  EC89  F006         	call	PL2	;call to abstracted procedure
  1147  000218  ECF7  F009         	call	___lwmod	;wreg free
  1148  00021C  5038               	movf	?___lwmod^0,w,c
  1149  00021E  0F30               	addlw	48
  1150  000220  EC2F  F00B         	call	_lcd_putc
  1151                           
  1152                           ;main.c: 92: lcd_putc('.');
  1153  000224  0E2E               	movlw	46
  1154  000226  EC2F  F00B         	call	_lcd_putc
  1155                           
  1156                           ;main.c: 93: lcd_putc(((temperature_1 % 10) + 48));
  1157  00022A  ECAC  F006         	call	PL16	;call to abstracted procedure
  1158  00022E  EC91  F006         	call	PL4	;call to abstracted procedure
  1159  000232  ECF7  F009         	call	___lwmod	;wreg free
  1160  000236  5038               	movf	?___lwmod^0,w,c
  1161  000238  0F30               	addlw	48
  1162  00023A  EC2F  F00B         	call	_lcd_putc
  1163                           
  1164                           ;main.c: 94: lcd_putc(0x01);
  1165  00023E  0E01               	movlw	1
  1166  000240  EC2F  F00B         	call	_lcd_putc
  1167                           
  1168                           ;main.c: 96: lcd_putc(' ');
  1169  000244  0E20               	movlw	32
  1170  000246  EC2F  F00B         	call	_lcd_putc
  1171                           
  1172                           ;main.c: 97: lcd_putc(' ');
  1173  00024A  0E20               	movlw	32
  1174  00024C  EC2F  F00B         	call	_lcd_putc
  1175                           
  1176                           ;main.c: 98: lcd_putc(' ');
  1177  000250  0E20               	movlw	32
  1178  000252  EC2F  F00B         	call	_lcd_putc
  1179                           
  1180                           ;main.c: 99: } else {
  1181  000256  D08C               	goto	l168
  1182  000258                     l2904:
  1183                           
  1184                           ;main.c: 100: lcd_putc(minus_1);
  1185  000258  504F               	movf	_minus_1^0,w,c
  1186  00025A  EC2F  F00B         	call	_lcd_putc
  1187                           
  1188                           ;main.c: 101: lcd_putc(((temperature_1 / 100) % 10) + 48);
  1189  00025E  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1190  000260  0E64               	movlw	100
  1191  000262  EC9B  F006         	call	PL8	;call to abstracted procedure
  1192  000266  ECB3  F009         	call	___lwdiv	;wreg free
  1193  00026A  EC89  F006         	call	PL2	;call to abstracted procedure
  1194  00026E  ECF7  F009         	call	___lwmod	;wreg free
  1195  000272  5038               	movf	?___lwmod^0,w,c
  1196  000274  0F30               	addlw	48
  1197  000276  EC2F  F00B         	call	_lcd_putc
  1198                           
  1199                           ;main.c: 102: lcd_putc(((temperature_1 / 10) % 10) + 48);
  1200  00027A  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1201  00027C  0E0A               	movlw	10
  1202  00027E  EC9B  F006         	call	PL8	;call to abstracted procedure
  1203  000282  ECB3  F009         	call	___lwdiv	;wreg free
  1204  000286  EC89  F006         	call	PL2	;call to abstracted procedure
  1205  00028A  ECF7  F009         	call	___lwmod	;wreg free
  1206  00028E  5038               	movf	?___lwmod^0,w,c
  1207  000290  0F30               	addlw	48
  1208  000292  EC2F  F00B         	call	_lcd_putc
  1209                           
  1210                           ;main.c: 103: lcd_putc('.');
  1211  000296  0E2E               	movlw	46
  1212  000298  EC2F  F00B         	call	_lcd_putc
  1213                           
  1214                           ;main.c: 104: lcd_putc(((temperature_1 % 10) + 48));
  1215  00029C  ECAC  F006         	call	PL16	;call to abstracted procedure
  1216  0002A0  EC91  F006         	call	PL4	;call to abstracted procedure
  1217  0002A4  ECF7  F009         	call	___lwmod	;wreg free
  1218  0002A8  5038               	movf	?___lwmod^0,w,c
  1219  0002AA  0F30               	addlw	48
  1220  0002AC  EC2F  F00B         	call	_lcd_putc
  1221                           
  1222                           ;main.c: 105: lcd_putc(0x01);
  1223  0002B0  0E01               	movlw	1
  1224  0002B2  EC2F  F00B         	call	_lcd_putc
  1225                           
  1226                           ;main.c: 107: lcd_putc(' ');
  1227  0002B6  0E20               	movlw	32
  1228  0002B8  EC2F  F00B         	call	_lcd_putc
  1229                           
  1230                           ;main.c: 108: lcd_putc(' ');
  1231  0002BC  0E20               	movlw	32
  1232  0002BE  EC2F  F00B         	call	_lcd_putc
  1233  0002C2  D056               	goto	l168
  1234  0002C4                     l2906:
  1235                           
  1236                           ;main.c: 112: lcd_putc(minus_1);
  1237  0002C4  504F               	movf	_minus_1^0,w,c
  1238  0002C6  EC2F  F00B         	call	_lcd_putc
  1239                           
  1240                           ;main.c: 113: lcd_putc(((temperature_1 / 1000) % 10) + 48);
  1241  0002CA  ECB6  F006         	call	PL20	;call to abstracted procedure
  1242  0002CE  EC9B  F006         	call	PL8	;call to abstracted procedure
  1243  0002D2  ECB3  F009         	call	___lwdiv	;wreg free
  1244  0002D6  EC89  F006         	call	PL2	;call to abstracted procedure
  1245  0002DA  ECF7  F009         	call	___lwmod	;wreg free
  1246  0002DE  5038               	movf	?___lwmod^0,w,c
  1247  0002E0  0F30               	addlw	48
  1248  0002E2  EC2F  F00B         	call	_lcd_putc
  1249                           
  1250                           ;main.c: 114: lcd_putc(((temperature_1 / 100) % 10) + 48);
  1251  0002E6  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1252  0002E8  0E64               	movlw	100
  1253  0002EA  EC9B  F006         	call	PL8	;call to abstracted procedure
  1254  0002EE  ECB3  F009         	call	___lwdiv	;wreg free
  1255  0002F2  EC89  F006         	call	PL2	;call to abstracted procedure
  1256  0002F6  ECF7  F009         	call	___lwmod	;wreg free
  1257  0002FA  5038               	movf	?___lwmod^0,w,c
  1258  0002FC  0F30               	addlw	48
  1259  0002FE  EC2F  F00B         	call	_lcd_putc
  1260                           
  1261                           ;main.c: 115: lcd_putc(((temperature_1 / 10) % 10) + 48);
  1262  000302  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1263  000304  0E0A               	movlw	10
  1264  000306  EC9B  F006         	call	PL8	;call to abstracted procedure
  1265  00030A  ECB3  F009         	call	___lwdiv	;wreg free
  1266  00030E  EC89  F006         	call	PL2	;call to abstracted procedure
  1267  000312  ECF7  F009         	call	___lwmod	;wreg free
  1268  000316  5038               	movf	?___lwmod^0,w,c
  1269  000318  0F30               	addlw	48
  1270  00031A  EC2F  F00B         	call	_lcd_putc
  1271                           
  1272                           ;main.c: 116: lcd_putc('.');
  1273  00031E  0E2E               	movlw	46
  1274  000320  EC2F  F00B         	call	_lcd_putc
  1275                           
  1276                           ;main.c: 117: lcd_putc(((temperature_1 % 10) + 48));
  1277  000324  ECAC  F006         	call	PL16	;call to abstracted procedure
  1278  000328  EC91  F006         	call	PL4	;call to abstracted procedure
  1279  00032C  ECF7  F009         	call	___lwmod	;wreg free
  1280  000330  5038               	movf	?___lwmod^0,w,c
  1281  000332  0F30               	addlw	48
  1282  000334  EC2F  F00B         	call	_lcd_putc
  1283                           
  1284                           ;main.c: 118: lcd_putc(0x01);
  1285  000338  0E01               	movlw	1
  1286  00033A  EC2F  F00B         	call	_lcd_putc
  1287                           
  1288                           ;main.c: 120: lcd_putc(' ');
  1289  00033E  0E20               	movlw	32
  1290  000340  EC2F  F00B         	call	_lcd_putc
  1291  000344  D015               	goto	l168
  1292  000346                     l2908:
  1293                           
  1294                           ;main.c: 124: lcd_putc('-');
  1295  000346  0E2D               	movlw	45
  1296  000348  EC2F  F00B         	call	_lcd_putc
  1297                           
  1298                           ;main.c: 125: lcd_putc('-');
  1299  00034C  0E2D               	movlw	45
  1300  00034E  EC2F  F00B         	call	_lcd_putc
  1301                           
  1302                           ;main.c: 126: lcd_putc('-');
  1303  000352  0E2D               	movlw	45
  1304  000354  EC2F  F00B         	call	_lcd_putc
  1305                           
  1306                           ;main.c: 127: lcd_putc(' ');
  1307  000358  0E20               	movlw	32
  1308  00035A  EC2F  F00B         	call	_lcd_putc
  1309                           
  1310                           ;main.c: 128: lcd_putc(' ');
  1311  00035E  0E20               	movlw	32
  1312  000360  EC2F  F00B         	call	_lcd_putc
  1313                           
  1314                           ;main.c: 129: lcd_putc(' ');
  1315  000364  0E20               	movlw	32
  1316  000366  EC2F  F00B         	call	_lcd_putc
  1317                           
  1318                           ;main.c: 130: lcd_putc(' ');
  1319  00036A  0E20               	movlw	32
  1320  00036C  EC2F  F00B         	call	_lcd_putc
  1321  000370                     l168:
  1322                           
  1323                           ;main.c: 131: };main.c: 132: lcd_gotoxy(16, 1);
  1324  000370  ECDF  F006         	call	PL44	;call to abstracted procedure
  1325  000374  EC00  F00B         	call	_lcd_gotoxy
  1326                           
  1327                           ;main.c: 133: (en_snd_k) ? lcd_putc(0xED): lcd_putc(0xD5);
  1328  000378  A245               	btfss	(_en_snd_k/(0+8))^0,_en_snd_k& (0+7),c
  1329  00037A  D004               	goto	l2914
  1330  00037C  0EED               	movlw	237
  1331  00037E  EC2F  F00B         	call	_lcd_putc
  1332  000382  D003               	goto	l172
  1333  000384                     l2914:
  1334  000384  0ED5               	movlw	213
  1335  000386  EC2F  F00B         	call	_lcd_putc
  1336  00038A                     l172:
  1337                           
  1338                           ;main.c: 135: lcd_gotoxy(1, 2);
  1339  00038A  ECB9  F006         	call	PL22	;call to abstracted procedure
  1340  00038E  EC00  F00B         	call	_lcd_gotoxy
  1341                           
  1342                           ;main.c: 136: lcd_putc(0xCE);
  1343  000392  0ECE               	movlw	206
  1344  000394  EC2F  F00B         	call	_lcd_putc
  1345                           
  1346                           ;main.c: 137: lcd_putc(((temp1_fix / 100) % 10) + 48);
  1347  000398  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1348  00039A  0E64               	movlw	100
  1349  00039C  ECBC  F006         	call	PL26	;call to abstracted procedure
  1350  0003A0  ECB3  F009         	call	___lwdiv	;wreg free
  1351  0003A4  EC89  F006         	call	PL2	;call to abstracted procedure
  1352  0003A8  ECF7  F009         	call	___lwmod	;wreg free
  1353  0003AC  5038               	movf	?___lwmod^0,w,c
  1354  0003AE  0F30               	addlw	48
  1355  0003B0  EC2F  F00B         	call	_lcd_putc
  1356                           
  1357                           ;main.c: 138: lcd_putc(((temp1_fix / 10) % 10) + 48);
  1358  0003B4  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1359  0003B6  0E0A               	movlw	10
  1360  0003B8  ECBC  F006         	call	PL26	;call to abstracted procedure
  1361  0003BC  ECB3  F009         	call	___lwdiv	;wreg free
  1362  0003C0  EC89  F006         	call	PL2	;call to abstracted procedure
  1363  0003C4  ECF7  F009         	call	___lwmod	;wreg free
  1364  0003C8  5038               	movf	?___lwmod^0,w,c
  1365  0003CA  0F30               	addlw	48
  1366  0003CC  EC2F  F00B         	call	_lcd_putc
  1367                           
  1368                           ;main.c: 139: lcd_putc('.');
  1369  0003D0  0E2E               	movlw	46
  1370  0003D2  EC2F  F00B         	call	_lcd_putc
  1371                           
  1372                           ;main.c: 140: lcd_putc(((temp1_fix % 10) + 48));
  1373  0003D6  C017  F038         	movff	_temp1_fix,___lwmod@dividend
  1374  0003DA  C018  F039         	movff	_temp1_fix+1,___lwmod@dividend+1
  1375  0003DE  EC91  F006         	call	PL4	;call to abstracted procedure
  1376  0003E2  ECF7  F009         	call	___lwmod	;wreg free
  1377  0003E6  5038               	movf	?___lwmod^0,w,c
  1378  0003E8  0F30               	addlw	48
  1379  0003EA  EC2F  F00B         	call	_lcd_putc
  1380                           
  1381                           ;main.c: 141: lcd_putc(0x01);
  1382  0003EE  0E01               	movlw	1
  1383  0003F0  EC2F  F00B         	call	_lcd_putc
  1384                           
  1385                           ;main.c: 142: lcd_putc(' ');
  1386  0003F4  0E20               	movlw	32
  1387  0003F6  EC2F  F00B         	call	_lcd_putc
  1388                           
  1389                           ;main.c: 143: lcd_putc(0xD9);
  1390  0003FA  0ED9               	movlw	217
  1391  0003FC  EC2F  F00B         	call	_lcd_putc
  1392                           
  1393                           ;main.c: 144: lcd_putc(((set_t_dq1_up / 10) % 10) + 48);
  1394  000400  ECD5  F006         	call	PL40	;call to abstracted procedure
  1395  000404  EC4C  F00A         	call	___lbdiv
  1396  000408  EC97  F00A         	call	___lbmod
  1397  00040C  0F30               	addlw	48
  1398  00040E  EC2F  F00B         	call	_lcd_putc
  1399                           
  1400                           ;main.c: 145: lcd_putc('.');
  1401  000412  0E2E               	movlw	46
  1402  000414  EC2F  F00B         	call	_lcd_putc
  1403                           
  1404                           ;main.c: 146: lcd_putc(((set_t_dq1_up % 10) + 48));
  1405  000418  ECEC  F006         	call	PL52	;call to abstracted procedure
  1406  00041C  EC97  F00A         	call	___lbmod
  1407  000420  0F30               	addlw	48
  1408  000422  EC2F  F00B         	call	_lcd_putc
  1409                           
  1410                           ;main.c: 147: lcd_putc(' ');
  1411  000426  0E20               	movlw	32
  1412  000428  EC2F  F00B         	call	_lcd_putc
  1413                           
  1414                           ;main.c: 148: lcd_putc(0xDA);
  1415  00042C  0EDA               	movlw	218
  1416  00042E  EC2F  F00B         	call	_lcd_putc
  1417                           
  1418                           ;main.c: 149: lcd_putc(((set_t_dq1_dwn / 10) % 10) + 48);
  1419  000432  ECCC  F006         	call	PL32	;call to abstracted procedure
  1420  000436  EC4C  F00A         	call	___lbdiv
  1421  00043A  EC97  F00A         	call	___lbmod
  1422  00043E  0F30               	addlw	48
  1423  000440  EC2F  F00B         	call	_lcd_putc
  1424                           
  1425                           ;main.c: 150: lcd_putc('.');
  1426  000444  0E2E               	movlw	46
  1427  000446  EC2F  F00B         	call	_lcd_putc
  1428                           
  1429                           ;main.c: 151: lcd_putc(((set_t_dq1_dwn % 10) + 48));
  1430  00044A  ECFC  F006         	call	PL62	;call to abstracted procedure
  1431  00044E  EC97  F00A         	call	___lbmod
  1432  000452  0F30               	addlw	48
  1433  000454  EC2F  F00B         	call	_lcd_putc
  1434                           
  1435                           ;main.c: 153: break;
  1436  000458  D1A4               	goto	l173
  1437  00045A                     l2916:
  1438                           
  1439                           ;main.c: 155: lcd_gotoxy(1, 1);
  1440  00045A  0E01               	movlw	1
  1441  00045C  6E35               	movwf	lcd_gotoxy@y^0,c
  1442  00045E  EC00  F00B         	call	_lcd_gotoxy
  1443                           
  1444                           ;main.c: 156: lcdPrint("Êóáîâà:");
  1445  000462  0EE7               	movlw	low STR_6
  1446  000464  6E38               	movwf	lcdPrint@t^0,c
  1447  000466  0E1F               	movlw	high STR_6
  1448  000468  6E39               	movwf	(lcdPrint@t+1)^0,c
  1449  00046A  ECEA  F007         	call	_lcdPrint	;wreg free
  1450                           
  1451                           ;main.c: 158: if (!(temperature_2 == 32767)) {
  1452  00046E  2847               	incf	_temperature_2^0,w,c
  1453  000470  E104               	bnz	u1920
  1454  000472  0E7F               	movlw	127
  1455  000474  1848               	xorwf	(_temperature_2+1)^0,w,c
  1456  000476  E101 D0B0          	bz	l2932
  1457  00047A                     u1920:
  1458                           
  1459                           ;main.c: 159: if (((temperature_2 / 1000) % 10) == 0) {
  1460  00047A  ECB6  F006         	call	PL20	;call to abstracted procedure
  1461  00047E  ECA1  F006         	call	PL10	;call to abstracted procedure
  1462  000482  ECB3  F009         	call	___lwdiv	;wreg free
  1463  000486  EC89  F006         	call	PL2	;call to abstracted procedure
  1464  00048A  ECF7  F009         	call	___lwmod	;wreg free
  1465  00048E  5038               	movf	?___lwmod^0,w,c
  1466  000490  1039               	iorwf	(?___lwmod+1)^0,w,c
  1467  000492  E16B               	bnz	l2930
  1468                           
  1469                           ;main.c: 160: if (((temperature_2 / 100) % 10) == 0) {
  1470  000494  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1471  000496  0E64               	movlw	100
  1472  000498  ECA1  F006         	call	PL10	;call to abstracted procedure
  1473  00049C  ECB3  F009         	call	___lwdiv	;wreg free
  1474  0004A0  EC89  F006         	call	PL2	;call to abstracted procedure
  1475  0004A4  ECF7  F009         	call	___lwmod	;wreg free
  1476  0004A8  5038               	movf	?___lwmod^0,w,c
  1477  0004AA  1039               	iorwf	(?___lwmod+1)^0,w,c
  1478  0004AC  E12B               	bnz	l2928
  1479                           
  1480                           ;main.c: 161: lcd_putc(minus_2);
  1481  0004AE  504E               	movf	_minus_2^0,w,c
  1482  0004B0  EC2F  F00B         	call	_lcd_putc
  1483                           
  1484                           ;main.c: 163: lcd_putc(((temperature_2 / 10) % 10) + 48);
  1485  0004B4  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1486  0004B6  0E0A               	movlw	10
  1487  0004B8  ECA1  F006         	call	PL10	;call to abstracted procedure
  1488  0004BC  ECB3  F009         	call	___lwdiv	;wreg free
  1489  0004C0  EC89  F006         	call	PL2	;call to abstracted procedure
  1490  0004C4  ECF7  F009         	call	___lwmod	;wreg free
  1491  0004C8  5038               	movf	?___lwmod^0,w,c
  1492  0004CA  0F30               	addlw	48
  1493  0004CC  EC2F  F00B         	call	_lcd_putc
  1494                           
  1495                           ;main.c: 164: lcd_putc('.');
  1496  0004D0  0E2E               	movlw	46
  1497  0004D2  EC2F  F00B         	call	_lcd_putc
  1498                           
  1499                           ;main.c: 165: lcd_putc(((temperature_2 % 10) + 48));
  1500  0004D6  ECB1  F006         	call	PL18	;call to abstracted procedure
  1501  0004DA  EC91  F006         	call	PL4	;call to abstracted procedure
  1502  0004DE  ECF7  F009         	call	___lwmod	;wreg free
  1503  0004E2  5038               	movf	?___lwmod^0,w,c
  1504  0004E4  0F30               	addlw	48
  1505  0004E6  EC2F  F00B         	call	_lcd_putc
  1506                           
  1507                           ;main.c: 166: lcd_putc(0x01);
  1508  0004EA  0E01               	movlw	1
  1509  0004EC  EC2F  F00B         	call	_lcd_putc
  1510                           
  1511                           ;main.c: 168: lcd_putc(' ');
  1512  0004F0  0E20               	movlw	32
  1513  0004F2  EC2F  F00B         	call	_lcd_putc
  1514                           
  1515                           ;main.c: 169: lcd_putc(' ');
  1516  0004F6  0E20               	movlw	32
  1517  0004F8  EC2F  F00B         	call	_lcd_putc
  1518                           
  1519                           ;main.c: 170: lcd_putc(' ');
  1520  0004FC  0E20               	movlw	32
  1521  0004FE  EC2F  F00B         	call	_lcd_putc
  1522                           
  1523                           ;main.c: 171: } else {
  1524  000502  D080               	goto	l180
  1525  000504                     l2928:
  1526                           
  1527                           ;main.c: 172: lcd_putc(minus_2);
  1528  000504  504E               	movf	_minus_2^0,w,c
  1529  000506  EC2F  F00B         	call	_lcd_putc
  1530                           
  1531                           ;main.c: 173: lcd_putc(((temperature_2 / 100) % 10) + 48);
  1532  00050A  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1533  00050C  0E64               	movlw	100
  1534  00050E  ECA1  F006         	call	PL10	;call to abstracted procedure
  1535  000512  ECB3  F009         	call	___lwdiv	;wreg free
  1536  000516  DBFD               	call	PL2	;call to abstracted procedure
  1537  000518  ECF7  F009         	call	___lwmod	;wreg free
  1538  00051C  5038               	movf	?___lwmod^0,w,c
  1539  00051E  0F30               	addlw	48
  1540  000520  EC2F  F00B         	call	_lcd_putc
  1541                           
  1542                           ;main.c: 174: lcd_putc(((temperature_2 / 10) % 10) + 48);
  1543  000524  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1544  000526  0E0A               	movlw	10
  1545  000528  ECA1  F006         	call	PL10	;call to abstracted procedure
  1546  00052C  ECB3  F009         	call	___lwdiv	;wreg free
  1547  000530  DBF0               	call	PL2	;call to abstracted procedure
  1548  000532  ECF7  F009         	call	___lwmod	;wreg free
  1549  000536  5038               	movf	?___lwmod^0,w,c
  1550  000538  0F30               	addlw	48
  1551  00053A  EC2F  F00B         	call	_lcd_putc
  1552                           
  1553                           ;main.c: 175: lcd_putc('.');
  1554  00053E  0E2E               	movlw	46
  1555  000540  EC2F  F00B         	call	_lcd_putc
  1556                           
  1557                           ;main.c: 176: lcd_putc(((temperature_2 % 10) + 48));
  1558  000544  ECB1  F006         	call	PL18	;call to abstracted procedure
  1559  000548  DBEC               	call	PL4	;call to abstracted procedure
  1560  00054A  ECF7  F009         	call	___lwmod	;wreg free
  1561  00054E  5038               	movf	?___lwmod^0,w,c
  1562  000550  0F30               	addlw	48
  1563  000552  EC2F  F00B         	call	_lcd_putc
  1564                           
  1565                           ;main.c: 177: lcd_putc(0x01);
  1566  000556  0E01               	movlw	1
  1567  000558  EC2F  F00B         	call	_lcd_putc
  1568                           
  1569                           ;main.c: 179: lcd_putc(' ');
  1570  00055C  0E20               	movlw	32
  1571  00055E  EC2F  F00B         	call	_lcd_putc
  1572                           
  1573                           ;main.c: 180: lcd_putc(' ');
  1574  000562  0E20               	movlw	32
  1575  000564  EC2F  F00B         	call	_lcd_putc
  1576  000568  D04D               	goto	l180
  1577  00056A                     l2930:
  1578                           
  1579                           ;main.c: 184: lcd_putc(minus_2);
  1580  00056A  504E               	movf	_minus_2^0,w,c
  1581  00056C  EC2F  F00B         	call	_lcd_putc
  1582                           
  1583                           ;main.c: 185: lcd_putc(((temperature_2 / 1000) % 10) + 48);
  1584  000570  DBFD               	call	PL20	;call to abstracted procedure
  1585  000572  DBE7               	call	PL10	;call to abstracted procedure
  1586  000574  ECB3  F009         	call	___lwdiv	;wreg free
  1587  000578  DBCC               	call	PL2	;call to abstracted procedure
  1588  00057A  ECF7  F009         	call	___lwmod	;wreg free
  1589  00057E  5038               	movf	?___lwmod^0,w,c
  1590  000580  0F30               	addlw	48
  1591  000582  EC2F  F00B         	call	_lcd_putc
  1592                           
  1593                           ;main.c: 186: lcd_putc(((temperature_2 / 100) % 10) + 48);
  1594  000586  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1595  000588  0E64               	movlw	100
  1596  00058A  DBDB               	call	PL10	;call to abstracted procedure
  1597  00058C  ECB3  F009         	call	___lwdiv	;wreg free
  1598  000590  DBC0               	call	PL2	;call to abstracted procedure
  1599  000592  ECF7  F009         	call	___lwmod	;wreg free
  1600  000596  5038               	movf	?___lwmod^0,w,c
  1601  000598  0F30               	addlw	48
  1602  00059A  EC2F  F00B         	call	_lcd_putc
  1603                           
  1604                           ;main.c: 187: lcd_putc(((temperature_2 / 10) % 10) + 48);
  1605  00059E  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1606  0005A0  0E0A               	movlw	10
  1607  0005A2  DBCF               	call	PL10	;call to abstracted procedure
  1608  0005A4  ECB3  F009         	call	___lwdiv	;wreg free
  1609  0005A8  DBB4               	call	PL2	;call to abstracted procedure
  1610  0005AA  ECF7  F009         	call	___lwmod	;wreg free
  1611  0005AE  5038               	movf	?___lwmod^0,w,c
  1612  0005B0  0F30               	addlw	48
  1613  0005B2  EC2F  F00B         	call	_lcd_putc
  1614                           
  1615                           ;main.c: 188: lcd_putc('.');
  1616  0005B6  0E2E               	movlw	46
  1617  0005B8  EC2F  F00B         	call	_lcd_putc
  1618                           
  1619                           ;main.c: 189: lcd_putc(((temperature_2 % 10) + 48));
  1620  0005BC  DBD2               	call	PL18	;call to abstracted procedure
  1621  0005BE  DBB1               	call	PL4	;call to abstracted procedure
  1622  0005C0  ECF7  F009         	call	___lwmod	;wreg free
  1623  0005C4  5038               	movf	?___lwmod^0,w,c
  1624  0005C6  0F30               	addlw	48
  1625  0005C8  EC2F  F00B         	call	_lcd_putc
  1626                           
  1627                           ;main.c: 190: lcd_putc(0x01);
  1628  0005CC  0E01               	movlw	1
  1629  0005CE  EC2F  F00B         	call	_lcd_putc
  1630                           
  1631                           ;main.c: 192: lcd_putc(' ');
  1632  0005D2  0E20               	movlw	32
  1633  0005D4  EC2F  F00B         	call	_lcd_putc
  1634  0005D8  D015               	goto	l180
  1635  0005DA                     l2932:
  1636                           
  1637                           ;main.c: 196: lcd_putc('-');
  1638  0005DA  0E2D               	movlw	45
  1639  0005DC  EC2F  F00B         	call	_lcd_putc
  1640                           
  1641                           ;main.c: 197: lcd_putc('-');
  1642  0005E0  0E2D               	movlw	45
  1643  0005E2  EC2F  F00B         	call	_lcd_putc
  1644                           
  1645                           ;main.c: 198: lcd_putc('-');
  1646  0005E6  0E2D               	movlw	45
  1647  0005E8  EC2F  F00B         	call	_lcd_putc
  1648                           
  1649                           ;main.c: 199: lcd_putc(' ');
  1650  0005EC  0E20               	movlw	32
  1651  0005EE  EC2F  F00B         	call	_lcd_putc
  1652                           
  1653                           ;main.c: 200: lcd_putc(' ');
  1654  0005F2  0E20               	movlw	32
  1655  0005F4  EC2F  F00B         	call	_lcd_putc
  1656                           
  1657                           ;main.c: 201: lcd_putc(' ');
  1658  0005F8  0E20               	movlw	32
  1659  0005FA  EC2F  F00B         	call	_lcd_putc
  1660                           
  1661                           ;main.c: 202: lcd_putc(' ');
  1662  0005FE  0E20               	movlw	32
  1663  000600  EC2F  F00B         	call	_lcd_putc
  1664  000604                     l180:
  1665                           
  1666                           ;main.c: 203: };main.c: 204: lcd_gotoxy(16, 1);
  1667  000604  DBDC               	call	PL44	;call to abstracted procedure
  1668  000606  EC00  F00B         	call	_lcd_gotoxy
  1669                           
  1670                           ;main.c: 205: (en_snd_b) ? lcd_putc(0xED) : lcd_putc(0xD5);
  1671  00060A  A045               	btfss	(_en_snd_b/(0+8))^0,_en_snd_b& (0+7),c
  1672  00060C  D004               	goto	l2938
  1673  00060E  0EED               	movlw	237
  1674  000610  EC2F  F00B         	call	_lcd_putc
  1675  000614  D003               	goto	l184
  1676  000616                     l2938:
  1677  000616  0ED5               	movlw	213
  1678  000618  EC2F  F00B         	call	_lcd_putc
  1679  00061C                     l184:
  1680                           
  1681                           ;main.c: 206: lcd_gotoxy(1, 2);
  1682  00061C  DBAA               	call	PL22	;call to abstracted procedure
  1683  00061E  EC00  F00B         	call	_lcd_gotoxy
  1684                           
  1685                           ;main.c: 207: lcdPrint("Ïîðiã:");
  1686  000622  0EF7               	movlw	low STR_7
  1687  000624  6E38               	movwf	lcdPrint@t^0,c
  1688  000626  0E1F               	movlw	high STR_7
  1689  000628  6E39               	movwf	(lcdPrint@t+1)^0,c
  1690  00062A  ECEA  F007         	call	_lcdPrint	;wreg free
  1691                           
  1692                           ;main.c: 208: lcd_putc('+');
  1693  00062E  0E2B               	movlw	43
  1694  000630  EC2F  F00B         	call	_lcd_putc
  1695                           
  1696                           ;main.c: 209: if (!(((set_t_dq2 / 1000) % 10) == 0)) {
  1697  000634  DB9B               	call	PL20	;call to abstracted procedure
  1698  000636  DB79               	call	PL6	;call to abstracted procedure
  1699  000638  ECB3  F009         	call	___lwdiv	;wreg free
  1700  00063C  DB6A               	call	PL2	;call to abstracted procedure
  1701  00063E  ECF7  F009         	call	___lwmod	;wreg free
  1702  000642  5038               	movf	?___lwmod^0,w,c
  1703  000644  1039               	iorwf	(?___lwmod+1)^0,w,c
  1704  000646  E03B               	bz	l2948
  1705                           
  1706                           ;main.c: 210: lcd_putc(((set_t_dq2 / 1000) % 10) + 48);
  1707  000648  DB91               	call	PL20	;call to abstracted procedure
  1708  00064A  DB6F               	call	PL6	;call to abstracted procedure
  1709  00064C  ECB3  F009         	call	___lwdiv	;wreg free
  1710  000650  DB60               	call	PL2	;call to abstracted procedure
  1711  000652  ECF7  F009         	call	___lwmod	;wreg free
  1712  000656  5038               	movf	?___lwmod^0,w,c
  1713  000658  0F30               	addlw	48
  1714  00065A  EC2F  F00B         	call	_lcd_putc
  1715                           
  1716                           ;main.c: 211: lcd_putc(((set_t_dq2 / 100) % 10) + 48);
  1717  00065E  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1718  000660  0E64               	movlw	100
  1719  000662  DB63               	call	PL6	;call to abstracted procedure
  1720  000664  ECB3  F009         	call	___lwdiv	;wreg free
  1721  000668  DB54               	call	PL2	;call to abstracted procedure
  1722  00066A  ECF7  F009         	call	___lwmod	;wreg free
  1723  00066E  5038               	movf	?___lwmod^0,w,c
  1724  000670  0F30               	addlw	48
  1725  000672  EC2F  F00B         	call	_lcd_putc
  1726                           
  1727                           ;main.c: 212: lcd_putc(((set_t_dq2 / 10) % 10) + 48);
  1728  000676  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1729  000678  0E0A               	movlw	10
  1730  00067A  DB57               	call	PL6	;call to abstracted procedure
  1731  00067C  ECB3  F009         	call	___lwdiv	;wreg free
  1732  000680  DB48               	call	PL2	;call to abstracted procedure
  1733  000682  ECF7  F009         	call	___lwmod	;wreg free
  1734  000686  5038               	movf	?___lwmod^0,w,c
  1735  000688  0F30               	addlw	48
  1736  00068A  EC2F  F00B         	call	_lcd_putc
  1737                           
  1738                           ;main.c: 213: lcd_putc('.');
  1739  00068E  0E2E               	movlw	46
  1740  000690  EC2F  F00B         	call	_lcd_putc
  1741                           
  1742                           ;main.c: 214: lcd_putc(((set_t_dq2 % 10) + 48));
  1743  000694  DB5C               	call	PL12	;call to abstracted procedure
  1744  000696  DB45               	call	PL4	;call to abstracted procedure
  1745  000698  ECF7  F009         	call	___lwmod	;wreg free
  1746  00069C  5038               	movf	?___lwmod^0,w,c
  1747  00069E  0F30               	addlw	48
  1748  0006A0  EC2F  F00B         	call	_lcd_putc
  1749                           
  1750                           ;main.c: 215: lcd_putc(0x01);
  1751  0006A4  0E01               	movlw	1
  1752  0006A6  EC2F  F00B         	call	_lcd_putc
  1753                           
  1754                           ;main.c: 216: lcd_putc(' ');
  1755  0006AA  0E20               	movlw	32
  1756  0006AC  EC2F  F00B         	call	_lcd_putc
  1757                           
  1758                           ;main.c: 217: lcd_putc(' ');
  1759  0006B0  0E20               	movlw	32
  1760  0006B2  EC2F  F00B         	call	_lcd_putc
  1761                           
  1762                           ;main.c: 218: lcd_putc(' ');
  1763  0006B6  0E20               	movlw	32
  1764  0006B8  EC2F  F00B         	call	_lcd_putc
  1765                           
  1766                           ;main.c: 219: } else if (!(((set_t_dq2 / 100) % 10) == 0)) {
  1767  0006BC  D072               	goto	l173
  1768  0006BE                     l2948:
  1769  0006BE  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1770  0006C0  0E64               	movlw	100
  1771  0006C2  DB33               	call	PL6	;call to abstracted procedure
  1772  0006C4  ECB3  F009         	call	___lwdiv	;wreg free
  1773  0006C8  DB24               	call	PL2	;call to abstracted procedure
  1774  0006CA  ECF7  F009         	call	___lwmod	;wreg free
  1775  0006CE  5038               	movf	?___lwmod^0,w,c
  1776  0006D0  1039               	iorwf	(?___lwmod+1)^0,w,c
  1777  0006D2  E033               	bz	l2952
  1778                           
  1779                           ;main.c: 220: lcd_putc(((set_t_dq2 / 100) % 10) + 48);
  1780  0006D4  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1781  0006D6  0E64               	movlw	100
  1782  0006D8  DB28               	call	PL6	;call to abstracted procedure
  1783  0006DA  ECB3  F009         	call	___lwdiv	;wreg free
  1784  0006DE  DB19               	call	PL2	;call to abstracted procedure
  1785  0006E0  ECF7  F009         	call	___lwmod	;wreg free
  1786  0006E4  5038               	movf	?___lwmod^0,w,c
  1787  0006E6  0F30               	addlw	48
  1788  0006E8  EC2F  F00B         	call	_lcd_putc
  1789                           
  1790                           ;main.c: 221: lcd_putc(((set_t_dq2 / 10) % 10) + 48);
  1791  0006EC  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1792  0006EE  0E0A               	movlw	10
  1793  0006F0  DB1C               	call	PL6	;call to abstracted procedure
  1794  0006F2  ECB3  F009         	call	___lwdiv	;wreg free
  1795  0006F6  DB0D               	call	PL2	;call to abstracted procedure
  1796  0006F8  ECF7  F009         	call	___lwmod	;wreg free
  1797  0006FC  5038               	movf	?___lwmod^0,w,c
  1798  0006FE  0F30               	addlw	48
  1799  000700  EC2F  F00B         	call	_lcd_putc
  1800                           
  1801                           ;main.c: 222: lcd_putc('.');
  1802  000704  0E2E               	movlw	46
  1803  000706  EC2F  F00B         	call	_lcd_putc
  1804                           
  1805                           ;main.c: 223: lcd_putc(((set_t_dq2 % 10) + 48));
  1806  00070A  DB21               	call	PL12	;call to abstracted procedure
  1807  00070C  DB0A               	call	PL4	;call to abstracted procedure
  1808  00070E  ECF7  F009         	call	___lwmod	;wreg free
  1809  000712  5038               	movf	?___lwmod^0,w,c
  1810  000714  0F30               	addlw	48
  1811  000716  EC2F  F00B         	call	_lcd_putc
  1812                           
  1813                           ;main.c: 224: lcd_putc(0x01);
  1814  00071A  0E01               	movlw	1
  1815  00071C  EC2F  F00B         	call	_lcd_putc
  1816                           
  1817                           ;main.c: 225: lcd_putc(' ');
  1818  000720  0E20               	movlw	32
  1819  000722  EC2F  F00B         	call	_lcd_putc
  1820                           
  1821                           ;main.c: 226: lcd_putc(' ');
  1822  000726  0E20               	movlw	32
  1823  000728  EC2F  F00B         	call	_lcd_putc
  1824                           
  1825                           ;main.c: 227: lcd_putc(' ');
  1826  00072C  0E20               	movlw	32
  1827  00072E  EC2F  F00B         	call	_lcd_putc
  1828                           
  1829                           ;main.c: 228: lcd_putc(' ');
  1830  000732  0E20               	movlw	32
  1831  000734  EC2F  F00B         	call	_lcd_putc
  1832                           
  1833                           ;main.c: 229: } else {
  1834  000738  D034               	goto	l173
  1835  00073A                     l2952:
  1836                           
  1837                           ;main.c: 230: lcd_putc(((set_t_dq2 / 10) % 10) + 48);
  1838  00073A  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  1839  00073C  0E0A               	movlw	10
  1840  00073E  DAF5               	call	PL6	;call to abstracted procedure
  1841  000740  ECB3  F009         	call	___lwdiv	;wreg free
  1842  000744  DAE6               	call	PL2	;call to abstracted procedure
  1843  000746  ECF7  F009         	call	___lwmod	;wreg free
  1844  00074A  5038               	movf	?___lwmod^0,w,c
  1845  00074C  0F30               	addlw	48
  1846  00074E  EC2F  F00B         	call	_lcd_putc
  1847                           
  1848                           ;main.c: 231: lcd_putc('.');
  1849  000752  0E2E               	movlw	46
  1850  000754  EC2F  F00B         	call	_lcd_putc
  1851                           
  1852                           ;main.c: 232: lcd_putc(((set_t_dq2 % 10) + 48));
  1853  000758  DAFA               	call	PL12	;call to abstracted procedure
  1854  00075A  DAE3               	call	PL4	;call to abstracted procedure
  1855  00075C  ECF7  F009         	call	___lwmod	;wreg free
  1856  000760  5038               	movf	?___lwmod^0,w,c
  1857  000762  0F30               	addlw	48
  1858  000764  EC2F  F00B         	call	_lcd_putc
  1859                           
  1860                           ;main.c: 233: lcd_putc(0x01);
  1861  000768  0E01               	movlw	1
  1862  00076A  EC2F  F00B         	call	_lcd_putc
  1863                           
  1864                           ;main.c: 234: lcd_putc(' ');
  1865  00076E  0E20               	movlw	32
  1866  000770  EC2F  F00B         	call	_lcd_putc
  1867                           
  1868                           ;main.c: 235: lcd_putc(' ');
  1869  000774  0E20               	movlw	32
  1870  000776  EC2F  F00B         	call	_lcd_putc
  1871                           
  1872                           ;main.c: 236: lcd_putc(' ');
  1873  00077A  0E20               	movlw	32
  1874  00077C  EC2F  F00B         	call	_lcd_putc
  1875                           
  1876                           ;main.c: 237: lcd_putc(' ');
  1877  000780  0E20               	movlw	32
  1878  000782  EC2F  F00B         	call	_lcd_putc
  1879                           
  1880                           ;main.c: 238: lcd_putc(' ');
  1881  000786  0E20               	movlw	32
  1882  000788  EC2F  F00B         	call	_lcd_putc
  1883                           
  1884                           ;main.c: 239: lcd_putc(' ');
  1885  00078C  0E20               	movlw	32
  1886  00078E  EC2F  F00B         	call	_lcd_putc
  1887  000792  D007               	goto	l173
  1888  000794                     l2956:
  1889  000794  504C               	movf	_sub_main^0,w,c
  1890                           
  1891                           ; Switch size 1, requested type "space"
  1892                           ; Number of cases is 2, Range of values is 1 to 2
  1893                           ; switch strategies available:
  1894                           ; Name         Instructions Cycles
  1895                           ; simple_byte            7     4 (average)
  1896                           ;	Chosen strategy is simple_byte
  1897  000796  0A01               	xorlw	1	; case 1
  1898  000798  E101 D509          	bz	l2892
  1899  00079C  0A03               	xorlw	3	; case 2
  1900  00079E  E101 D65C          	bz	l2916
  1901  0007A2                     l173:
  1902                           
  1903                           ;main.c: 249: if (sound_yes) {
  1904  0007A2  AE45               	btfss	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  1905  0007A4  D045               	goto	l189
  1906                           
  1907                           ;main.c: 253: if (en_snd_k) {
  1908  0007A6  A245               	btfss	(_en_snd_k/(0+8))^0,_en_snd_k& (0+7),c
  1909  0007A8  D01D               	goto	l191
  1910                           
  1911                           ;main.c: 254: if (((temperature_1 >= (temp1_fix + set_t_dq1_up)) ||;main.c: 255: (temper
      +                          ature_1 <= (temp1_fix - set_t_dq1_dwn))) &&;main.c: 256: !(temperature_1 == 32767))
  1912  0007AA  5020               	movf	_set_t_dq1_up^0,w,c
  1913  0007AC  2417               	addwf	_temp1_fix^0,w,c
  1914  0007AE  6E42               	movwf	??_main^0,c
  1915  0007B0  0E00               	movlw	0
  1916  0007B2  2018               	addwfc	(_temp1_fix+1)^0,w,c
  1917  0007B4  6E43               	movwf	(??_main+1)^0,c
  1918  0007B6  5042               	movf	??_main^0,w,c
  1919  0007B8  5C49               	subwf	_temperature_1^0,w,c
  1920  0007BA  5043               	movf	(??_main+1)^0,w,c
  1921  0007BC  584A               	subwfb	(_temperature_1+1)^0,w,c
  1922  0007BE  E20B               	bc	u2010
  1923  0007C0  501F               	movf	_set_t_dq1_dwn^0,w,c
  1924  0007C2  5C17               	subwf	_temp1_fix^0,w,c
  1925  0007C4  6E42               	movwf	??_main^0,c
  1926  0007C6  0E00               	movlw	0
  1927  0007C8  5818               	subwfb	(_temp1_fix+1)^0,w,c
  1928  0007CA  6E43               	movwf	(??_main+1)^0,c
  1929  0007CC  5049               	movf	_temperature_1^0,w,c
  1930  0007CE  5C42               	subwf	??_main^0,w,c
  1931  0007D0  504A               	movf	(_temperature_1+1)^0,w,c
  1932  0007D2  5843               	subwfb	(??_main+1)^0,w,c
  1933  0007D4  E307               	bnc	l191
  1934  0007D6                     u2010:
  1935  0007D6  2849               	incf	_temperature_1^0,w,c
  1936  0007D8  E103               	bnz	u2020
  1937  0007DA  0E7F               	movlw	127
  1938  0007DC  184A               	xorwf	(_temperature_1+1)^0,w,c
  1939  0007DE  E002               	bz	l191
  1940  0007E0                     u2020:
  1941                           
  1942                           ;main.c: 258: snd_k_b = 1;
  1943  0007E0  8645               	bsf	(_snd_k_b/(0+8))^0,_snd_k_b& (0+7),c
  1944  0007E2  D001               	goto	l195
  1945  0007E4                     l191:
  1946                           
  1947                           ;main.c: 259: else;main.c: 260: snd_k_b = 0;
  1948  0007E4  9645               	bcf	(_snd_k_b/(0+8))^0,_snd_k_b& (0+7),c
  1949  0007E6                     l195:
  1950                           
  1951                           ;main.c: 264: if (en_snd_b) {
  1952  0007E6  A045               	btfss	(_en_snd_b/(0+8))^0,_en_snd_b& (0+7),c
  1953  0007E8  D00C               	goto	l197
  1954                           
  1955                           ;main.c: 265: if ((temperature_2 >= set_t_dq2) && !(temperature_2 == 32767))
  1956  0007EA  5019               	movf	_set_t_dq2^0,w,c
  1957  0007EC  5C47               	subwf	_temperature_2^0,w,c
  1958  0007EE  501A               	movf	(_set_t_dq2+1)^0,w,c
  1959  0007F0  5848               	subwfb	(_temperature_2+1)^0,w,c
  1960  0007F2  E307               	bnc	l197
  1961  0007F4  2847               	incf	_temperature_2^0,w,c
  1962  0007F6  E103               	bnz	u2050
  1963  0007F8  0E7F               	movlw	127
  1964  0007FA  1848               	xorwf	(_temperature_2+1)^0,w,c
  1965  0007FC  E002               	bz	l197
  1966  0007FE                     u2050:
  1967                           
  1968                           ;main.c: 266: snd_b_b = 1;
  1969  0007FE  8445               	bsf	(_snd_b_b/(0+8))^0,_snd_b_b& (0+7),c
  1970  000800  D001               	goto	l199
  1971  000802                     l197:
  1972                           
  1973                           ;main.c: 267: else;main.c: 268: snd_b_b = 0;
  1974  000802  9445               	bcf	(_snd_b_b/(0+8))^0,_snd_b_b& (0+7),c
  1975  000804                     l199:
  1976                           
  1977                           ;main.c: 272: if (snd_k_b && snd_b_b) {
  1978  000804  B645               	btfsc	(_snd_k_b/(0+8))^0,_snd_k_b& (0+7),c
  1979  000806  A445               	btfss	(_snd_b_b/(0+8))^0,_snd_b_b& (0+7),c
  1980  000808  D005               	goto	l200
  1981                           
  1982                           ;main.c: 273: en_sound = 1;
  1983  00080A  8046               	bsf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  1984                           
  1985                           ;main.c: 274: snd_k = 0;
  1986  00080C  9C45               	bcf	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  1987                           
  1988                           ;main.c: 275: snd_b = 0;
  1989  00080E  9A45               	bcf	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  1990                           
  1991                           ;main.c: 276: snd_all = 1;
  1992  000810  8845               	bsf	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  1993                           
  1994                           ;main.c: 277: } else if (snd_b_b) {
  1995  000812  D010               	goto	l2982
  1996  000814                     l200:
  1997  000814  A445               	btfss	(_snd_b_b/(0+8))^0,_snd_b_b& (0+7),c
  1998  000816  D005               	goto	l202
  1999                           
  2000                           ;main.c: 278: en_sound = 1;
  2001  000818  8046               	bsf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  2002                           
  2003                           ;main.c: 279: snd_k = 0;
  2004  00081A  9C45               	bcf	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  2005                           
  2006                           ;main.c: 280: snd_all = 0;
  2007  00081C  9845               	bcf	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  2008                           
  2009                           ;main.c: 281: snd_b = 1;
  2010  00081E  8A45               	bsf	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  2011                           
  2012                           ;main.c: 282: } else if (snd_k_b) {
  2013  000820  D009               	goto	l2982
  2014  000822                     l202:
  2015  000822  A645               	btfss	(_snd_k_b/(0+8))^0,_snd_k_b& (0+7),c
  2016  000824  D006               	goto	L1
  2017                           
  2018                           ;main.c: 283: en_sound = 1;
  2019  000826  8046               	bsf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  2020                           
  2021                           ;main.c: 284: snd_k = 1;
  2022  000828  8C45               	bsf	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  2023                           
  2024                           ;main.c: 285: snd_all = 0;
  2025  00082A  9845               	bcf	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  2026                           
  2027                           ;main.c: 286: snd_b = 0;
  2028  00082C  9A45               	bcf	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  2029                           
  2030                           ;main.c: 287: } else
  2031  00082E  D002               	goto	l2982
  2032  000830                     l189:
  2033                           
  2034                           ;main.c: 294: LATCbits.LATC4 = 0;
  2035  000830  988B               	bcf	139,4,c	;volatile
  2036  000832                     L1:
  2037                           
  2038                           ;main.c: 295: en_sound = 0;
  2039  000832  9046               	bcf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  2040  000834                     l2982:
  2041                           
  2042                           ;main.c: 296: };main.c: 299: if (pressed_key == 1) {
  2043  000834  0422               	decf	_pressed_key^0,w,c
  2044  000836  E115               	bnz	l2996
  2045                           
  2046                           ;main.c: 300: clearLCD();
  2047  000838  EC0E  F00B         	call	_clearLCD	;wreg free
  2048                           
  2049                           ;main.c: 301: select = 7;
  2050  00083C  0E07               	movlw	7
  2051                           
  2052                           ;main.c: 302: lcd_gotoxy(1, 1);
  2053  00083E  DAA8               	call	PL30	;call to abstracted procedure
  2054  000840  EC00  F00B         	call	_lcd_gotoxy
  2055                           
  2056                           ;main.c: 303: lcdPrint("Ïîðiã Ñèãí. Led");
  2057  000844  0E5F               	movlw	low STR_8
  2058  000846  6E38               	movwf	lcdPrint@t^0,c
  2059  000848  0E1F               	movlw	high STR_8
  2060  00084A  6E39               	movwf	(lcdPrint@t+1)^0,c
  2061  00084C  ECEA  F007         	call	_lcdPrint	;wreg free
  2062                           
  2063                           ;main.c: 304: lcd_gotoxy(1, 2);
  2064  000850  DA90               	call	PL22	;call to abstracted procedure
  2065  000852  EC00  F00B         	call	_lcd_gotoxy
  2066                           
  2067                           ;main.c: 305: lcdPrint("  1     2   1-2");
  2068  000856  0E4F               	movlw	low STR_9
  2069  000858  6E38               	movwf	lcdPrint@t^0,c
  2070  00085A  0E1F               	movlw	high STR_9
  2071  00085C  6E39               	movwf	(lcdPrint@t+1)^0,c
  2072  00085E  ECEA  F007         	call	_lcdPrint	;wreg free
  2073  000862                     l2996:
  2074                           
  2075                           ;main.c: 307: };main.c: 309: if (pressed_key == 2) {
  2076  000862  0E02               	movlw	2
  2077  000864  1822               	xorwf	_pressed_key^0,w,c
  2078  000866  E105               	bnz	l3004
  2079                           
  2080                           ;main.c: 310: if (sub_main == 1)
  2081  000868  044C               	decf	_sub_main^0,w,c
  2082                           
  2083                           ;main.c: 311: sub_main = 2;
  2084  00086A  0E02               	movlw	2
  2085  00086C  A4D8               	btfss	status,2,c
  2086                           
  2087                           ;main.c: 312: else;main.c: 313: sub_main = 1;
  2088  00086E  0E01               	movlw	1
  2089  000870  6E4C               	movwf	_sub_main^0,c
  2090  000872                     l3004:
  2091                           
  2092                           ;main.c: 314: };main.c: 316: if (pressed_key == 3) {
  2093  000872  0E03               	movlw	3
  2094  000874  1822               	xorwf	_pressed_key^0,w,c
  2095  000876  E010               	bz	l3012
  2096  000878  D474               	goto	l2880
  2097  00087A                     l213:
  2098                           
  2099                           ;main.c: 320: temp1_fix = temperature_1;
  2100  00087A  C049  F017         	movff	_temperature_1,_temp1_fix
  2101  00087E  C04A  F018         	movff	_temperature_1+1,_temp1_fix+1
  2102                           
  2103                           ;main.c: 321: write_eep(20, (temp1_fix >> 8));
  2104  000882  C018  F031         	movff	_temp1_fix+1,write_eep@data
  2105  000886  0E14               	movlw	20
  2106  000888  ECAA  F00A         	call	_write_eep
  2107                           
  2108                           ;main.c: 322: write_eep(20 + 1, (uint8_t) temp1_fix);
  2109  00088C  C017  F031         	movff	_temp1_fix,write_eep@data
  2110  000890  0E15               	movlw	21
  2111  000892  ECAA  F00A         	call	_write_eep
  2112                           
  2113                           ;main.c: 323: break;
  2114  000896  D004               	goto	l3014
  2115  000898                     l3012:
  2116  000898  504C               	movf	_sub_main^0,w,c
  2117                           
  2118                           ; Switch size 1, requested type "space"
  2119                           ; Number of cases is 2, Range of values is 1 to 2
  2120                           ; switch strategies available:
  2121                           ; Name         Instructions Cycles
  2122                           ; simple_byte            7     4 (average)
  2123                           ;	Chosen strategy is simple_byte
  2124  00089A  0A01               	xorlw	1	; case 1
  2125  00089C  E0EE               	bz	l213
  2126  00089E  0A03               	xorlw	3	; case 2
  2127  0008A0                     l3014:
  2128                           
  2129                           ;main.c: 330: Delay_ms(10);
  2130  0008A0  DAA7               	call	PL58	;call to abstracted procedure
  2131  0008A2  ECBC  F00A         	call	_Delay_ms	;wreg free
  2132  0008A6  D45D               	goto	l2880
  2133  0008A8                     l3016:
  2134                           
  2135                           ;main.c: 337: lcd_gotoxy(14, 2);
  2136  0008A8  0E02               	movlw	2
  2137  0008AA  6E35               	movwf	lcd_gotoxy@y^0,c
  2138  0008AC  0E0E               	movlw	14
  2139  0008AE  EC00  F00B         	call	_lcd_gotoxy
  2140                           
  2141                           ;main.c: 338: lcd_putc(dq_num + 48);
  2142  0008B2  504B               	movf	_dq_num^0,w,c
  2143  0008B4  0F30               	addlw	48
  2144  0008B6  EC2F  F00B         	call	_lcd_putc
  2145                           
  2146                           ;main.c: 339: if (pressed_key == 1) {
  2147  0008BA  0422               	decf	_pressed_key^0,w,c
  2148  0008BC  E106               	bnz	l3026
  2149                           
  2150                           ;main.c: 340: dq_num++;
  2151  0008BE  2A4B               	incf	_dq_num^0,f,c
  2152                           
  2153                           ;main.c: 341: if (dq_num == 3)
  2154  0008C0  0E03               	movlw	3
  2155  0008C2  184B               	xorwf	_dq_num^0,w,c
  2156  0008C4  E102               	bnz	l3026
  2157                           
  2158                           ;main.c: 342: dq_num = 1;
  2159  0008C6  0E01               	movlw	1
  2160  0008C8  6E4B               	movwf	_dq_num^0,c
  2161  0008CA                     l3026:
  2162                           
  2163                           ;main.c: 343: };main.c: 344: if (pressed_key == 2) {
  2164  0008CA  0E02               	movlw	2
  2165  0008CC  1822               	xorwf	_pressed_key^0,w,c
  2166  0008CE  E105               	bnz	l3034
  2167                           
  2168                           ;main.c: 345: dq_num--;
  2169  0008D0  064B               	decf	_dq_num^0,f,c
  2170                           
  2171                           ;main.c: 346: if (dq_num == 0)
  2172  0008D2  504B               	movf	_dq_num^0,w,c
  2173  0008D4  E102               	bnz	l3034
  2174                           
  2175                           ;main.c: 347: dq_num = 2;
  2176  0008D6  0E02               	movlw	2
  2177  0008D8  6E4B               	movwf	_dq_num^0,c
  2178  0008DA                     l3034:
  2179                           
  2180                           ;main.c: 348: };main.c: 349: if (pressed_key == 3) {
  2181  0008DA  0E03               	movlw	3
  2182  0008DC  1822               	xorwf	_pressed_key^0,w,c
  2183  0008DE  E001 D440          	bnz	l2880
  2184                           
  2185                           ;main.c: 350: if (ds18b20_readrom(dq_num)) {
  2186  0008E2  504B               	movf	_dq_num^0,w,c
  2187  0008E4  EC34  F009         	call	_ds18b20_readrom
  2188  0008E8  0900               	iorlw	0
  2189  0008EA  E009               	bz	l3042
  2190                           
  2191                           ;main.c: 351: lcd_gotoxy(1, 2);
  2192  0008EC  DA42               	call	PL22	;call to abstracted procedure
  2193  0008EE  EC00  F00B         	call	_lcd_gotoxy
  2194                           
  2195                           ;main.c: 352: lcdPrint(" Êîä ïðî÷èòàíî ");
  2196  0008F2  0EFF               	movlw	low STR_10
  2197  0008F4  6E38               	movwf	lcdPrint@t^0,c
  2198  0008F6  0E1E               	movlw	high STR_10
  2199  0008F8  6E39               	movwf	(lcdPrint@t+1)^0,c
  2200  0008FA  ECEA  F007         	call	_lcdPrint	;wreg free
  2201  0008FE                     l3042:
  2202                           
  2203                           ;main.c: 353: };main.c: 355: select = 3;
  2204  0008FE  0E03               	movlw	3
  2205  000900  D038               	goto	L3
  2206  000902                     l3044:
  2207                           
  2208                           ;main.c: 361: if (pressed_key == 1) {
  2209  000902  0422               	decf	_pressed_key^0,w,c
  2210  000904  E115               	bnz	l3058
  2211                           
  2212                           ;main.c: 362: clearLCD();
  2213  000906  EC0E  F00B         	call	_clearLCD	;wreg free
  2214                           
  2215                           ;main.c: 363: select = 4;
  2216  00090A  0E04               	movlw	4
  2217                           
  2218                           ;main.c: 364: lcd_gotoxy(1, 1);
  2219  00090C  DA41               	call	PL30	;call to abstracted procedure
  2220  00090E  EC00  F00B         	call	_lcd_gotoxy
  2221                           
  2222                           ;main.c: 365: lcdPrint("   Ãðàíèöi   ");
  2223  000912  0E9C               	movlw	low STR_11
  2224  000914  6E38               	movwf	lcdPrint@t^0,c
  2225  000916  0E1F               	movlw	high STR_11
  2226  000918  6E39               	movwf	(lcdPrint@t+1)^0,c
  2227  00091A  ECEA  F007         	call	_lcdPrint	;wreg free
  2228                           
  2229                           ;main.c: 366: lcd_gotoxy(1, 2);
  2230  00091E  DA29               	call	PL22	;call to abstracted procedure
  2231  000920  EC00  F00B         	call	_lcd_gotoxy
  2232                           
  2233                           ;main.c: 367: lcdPrint("Êîë(1)/Êóá(2):");
  2234  000924  0E8D               	movlw	low STR_12
  2235  000926  6E38               	movwf	lcdPrint@t^0,c
  2236  000928  0E1F               	movlw	high STR_12
  2237  00092A  6E39               	movwf	(lcdPrint@t+1)^0,c
  2238  00092C  ECEA  F007         	call	_lcdPrint	;wreg free
  2239  000930                     l3058:
  2240                           
  2241                           ;main.c: 368: };main.c: 370: if (pressed_key == 2) {
  2242  000930  0E02               	movlw	2
  2243  000932  1822               	xorwf	_pressed_key^0,w,c
  2244  000934  E10C               	bnz	l3068
  2245                           
  2246                           ;main.c: 373: clearLCD();
  2247  000936  EC0E  F00B         	call	_clearLCD	;wreg free
  2248                           
  2249                           ;main.c: 374: select = 8;
  2250  00093A  0E08               	movlw	8
  2251                           
  2252                           ;main.c: 375: lcd_gotoxy(1, 1);
  2253  00093C  DA29               	call	PL30	;call to abstracted procedure
  2254  00093E  EC00  F00B         	call	_lcd_gotoxy
  2255                           
  2256                           ;main.c: 376: lcdPrint(" Êîëîíà    Êóá");
  2257  000942  0E6F               	movlw	low STR_13
  2258  000944  6E38               	movwf	lcdPrint@t^0,c
  2259  000946  0E1F               	movlw	high STR_13
  2260  000948  6E39               	movwf	(lcdPrint@t+1)^0,c
  2261  00094A  ECEA  F007         	call	_lcdPrint	;wreg free
  2262  00094E                     l3068:
  2263                           
  2264                           ;main.c: 377: };main.c: 378: if (pressed_key == 3) {
  2265  00094E  0E03               	movlw	3
  2266  000950  1822               	xorwf	_pressed_key^0,w,c
  2267  000952  E001 D406          	bnz	l2880
  2268                           
  2269                           ;main.c: 379: LATCbits.LATC5 = !(LATCbits.LATC5);
  2270  000956  BA8B               	btfsc	139,5,c	;volatile
  2271  000958  D003               	goto	u2230
  2272  00095A  6A42               	clrf	??_main^0,c
  2273  00095C  2A42               	incf	??_main^0,f,c
  2274  00095E  D001               	goto	u2248
  2275  000960                     u2230:
  2276  000960  6A42               	clrf	??_main^0,c
  2277  000962                     u2248:
  2278  000962  3A42               	swapf	??_main^0,f,c
  2279  000964  4642               	rlncf	??_main^0,f,c
  2280  000966  508B               	movf	139,w,c	;volatile
  2281  000968  1842               	xorwf	??_main^0,w,c
  2282  00096A  0BDF               	andlw	-33
  2283  00096C  1842               	xorwf	??_main^0,w,c
  2284  00096E  6E8B               	movwf	139,c	;volatile
  2285  000970                     l3072:
  2286                           
  2287                           ;main.c: 380: select = 1;
  2288  000970  0E01               	movlw	1
  2289  000972                     L3:
  2290  000972  6E4D               	movwf	_select^0,c
  2291  000974  EFB1  F000         	goto	l2880
  2292  000978                     l3074:
  2293                           
  2294                           ;main.c: 384: lcd_gotoxy(4, 2);
  2295  000978  0E02               	movlw	2
  2296  00097A  6E35               	movwf	lcd_gotoxy@y^0,c
  2297  00097C  0E04               	movlw	4
  2298  00097E  EC00  F00B         	call	_lcd_gotoxy
  2299                           
  2300                           ;main.c: 385: (en_snd_k) ? lcd_putc(0xED) : lcd_putc(0xD5);
  2301  000982  A245               	btfss	(_en_snd_k/(0+8))^0,_en_snd_k& (0+7),c
  2302  000984  D004               	goto	l3080
  2303  000986  0EED               	movlw	237
  2304  000988  EC2F  F00B         	call	_lcd_putc
  2305  00098C  D003               	goto	l233
  2306  00098E                     l3080:
  2307  00098E  0ED5               	movlw	213
  2308  000990  EC2F  F00B         	call	_lcd_putc
  2309  000994                     l233:
  2310                           
  2311                           ;main.c: 386: lcd_gotoxy(13, 2);
  2312  000994  0E02               	movlw	2
  2313  000996  6E35               	movwf	lcd_gotoxy@y^0,c
  2314  000998  0E0D               	movlw	13
  2315  00099A  EC00  F00B         	call	_lcd_gotoxy
  2316                           
  2317                           ;main.c: 387: (en_snd_b) ? lcd_putc(0xED) : lcd_putc(0xD5);
  2318  00099E  A045               	btfss	(_en_snd_b/(0+8))^0,_en_snd_b& (0+7),c
  2319  0009A0  D004               	goto	l3086
  2320  0009A2  0EED               	movlw	237
  2321  0009A4  EC2F  F00B         	call	_lcd_putc
  2322  0009A8  D003               	goto	l3088
  2323  0009AA                     l3086:
  2324  0009AA  0ED5               	movlw	213
  2325  0009AC  EC2F  F00B         	call	_lcd_putc
  2326  0009B0                     l3088:
  2327                           
  2328                           ;main.c: 389: if (pressed_key == 1) {
  2329  0009B0  0422               	decf	_pressed_key^0,w,c
  2330  0009B2  E105               	bnz	u2295
  2331                           
  2332                           ;main.c: 390: en_snd_k = !(en_snd_k);
  2333  0009B4  B245               	btfsc	(_en_snd_k/(0+8))^0,_en_snd_k& (0+7),c
  2334  0009B6  D002               	goto	u2280
  2335  0009B8  8245               	bsf	(_en_snd_k/(0+8))^0,_en_snd_k& (0+7),c
  2336  0009BA  D001               	goto	u2295
  2337  0009BC                     u2280:
  2338  0009BC  9245               	bcf	(_en_snd_k/(0+8))^0,_en_snd_k& (0+7),c
  2339  0009BE                     u2295:
  2340                           
  2341                           ;main.c: 391: };main.c: 393: if (pressed_key == 2) {
  2342  0009BE  0E02               	movlw	2
  2343  0009C0  1822               	xorwf	_pressed_key^0,w,c
  2344  0009C2  E105               	bnz	u2325
  2345                           
  2346                           ;main.c: 394: en_snd_b = !(en_snd_b);
  2347  0009C4  B045               	btfsc	(_en_snd_b/(0+8))^0,_en_snd_b& (0+7),c
  2348  0009C6  D002               	goto	u2310
  2349  0009C8  8045               	bsf	(_en_snd_b/(0+8))^0,_en_snd_b& (0+7),c
  2350  0009CA  D001               	goto	u2325
  2351  0009CC                     u2310:
  2352  0009CC  9045               	bcf	(_en_snd_b/(0+8))^0,_en_snd_b& (0+7),c
  2353  0009CE                     u2325:
  2354                           
  2355                           ;main.c: 395: };main.c: 396: if (pressed_key == 3) {
  2356  0009CE  0E03               	movlw	3
  2357  0009D0  1822               	xorwf	_pressed_key^0,w,c
  2358  0009D2  E002 EFB1  F000    	bnz	l2880
  2359                           
  2360                           ;main.c: 397: if (!(en_snd_k) && !(en_snd_b)) {
  2361  0009D8  A245               	btfss	(_en_snd_k/(0+8))^0,_en_snd_k& (0+7),c
  2362  0009DA  B045               	btfsc	(_en_snd_b/(0+8))^0,_en_snd_b& (0+7),c
  2363  0009DC  D002               	goto	l241
  2364                           
  2365                           ;main.c: 398: sound_yes = 0;
  2366  0009DE  9E45               	bcf	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  2367                           
  2368                           ;main.c: 399: } else
  2369  0009E0  D7C7               	goto	l3072
  2370  0009E2                     l241:
  2371                           
  2372                           ;main.c: 400: sound_yes = 1;
  2373  0009E2  8E45               	bsf	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  2374  0009E4  D7C5               	goto	l3072
  2375  0009E6                     l3106:
  2376                           
  2377                           ;main.c: 406: lcd_gotoxy(16, 2);
  2378  0009E6  0E02               	movlw	2
  2379  0009E8  6E35               	movwf	lcd_gotoxy@y^0,c
  2380  0009EA  0E10               	movlw	16
  2381  0009EC  EC00  F00B         	call	_lcd_gotoxy
  2382                           
  2383                           ;main.c: 407: lcd_putc(dq_num + 48);
  2384  0009F0  504B               	movf	_dq_num^0,w,c
  2385  0009F2  0F30               	addlw	48
  2386  0009F4  EC2F  F00B         	call	_lcd_putc
  2387                           
  2388                           ;main.c: 408: if (pressed_key == 1) {
  2389  0009F8  0422               	decf	_pressed_key^0,w,c
  2390  0009FA  E106               	bnz	l3116
  2391                           
  2392                           ;main.c: 409: dq_num++;
  2393  0009FC  2A4B               	incf	_dq_num^0,f,c
  2394                           
  2395                           ;main.c: 410: if (dq_num == 3)
  2396  0009FE  0E03               	movlw	3
  2397  000A00  184B               	xorwf	_dq_num^0,w,c
  2398  000A02  E102               	bnz	l3116
  2399                           
  2400                           ;main.c: 411: dq_num = 1;
  2401  000A04  0E01               	movlw	1
  2402  000A06  6E4B               	movwf	_dq_num^0,c
  2403  000A08                     l3116:
  2404                           
  2405                           ;main.c: 412: };main.c: 413: if (pressed_key == 2) {
  2406  000A08  0E02               	movlw	2
  2407  000A0A  1822               	xorwf	_pressed_key^0,w,c
  2408  000A0C  E105               	bnz	l3124
  2409                           
  2410                           ;main.c: 414: dq_num--;
  2411  000A0E  064B               	decf	_dq_num^0,f,c
  2412                           
  2413                           ;main.c: 415: if (dq_num == 0)
  2414  000A10  504B               	movf	_dq_num^0,w,c
  2415  000A12  E102               	bnz	l3124
  2416                           
  2417                           ;main.c: 416: dq_num = 2;
  2418  000A14  0E02               	movlw	2
  2419  000A16  6E4B               	movwf	_dq_num^0,c
  2420  000A18                     l3124:
  2421                           
  2422                           ;main.c: 417: };main.c: 418: if (pressed_key == 3) {
  2423  000A18  0E03               	movlw	3
  2424  000A1A  1822               	xorwf	_pressed_key^0,w,c
  2425  000A1C  E002 EFB1  F000    	bnz	l2880
  2426                           
  2427                           ;main.c: 419: if (dq_num == 1) {
  2428  000A22  044B               	decf	_dq_num^0,w,c
  2429  000A24  E119               	bnz	l3140
  2430                           
  2431                           ;main.c: 420: select = 5;
  2432  000A26  0E05               	movlw	5
  2433                           
  2434                           ;main.c: 421: sub_sel = 1;
  2435  000A28  D9DB               	call	PL54	;call to abstracted procedure
  2436                           
  2437                           ;main.c: 422: clearLCD();
  2438  000A2A  EC0E  F00B         	call	_clearLCD	;wreg free
  2439                           
  2440                           ;main.c: 423: lcd_gotoxy(1, 1);
  2441  000A2E  0E01               	movlw	1
  2442  000A30  6E35               	movwf	lcd_gotoxy@y^0,c
  2443  000A32  EC00  F00B         	call	_lcd_gotoxy
  2444                           
  2445                           ;main.c: 424: lcdPrint("    Êîëîíà  ");
  2446  000A36  0EB7               	movlw	low STR_14
  2447  000A38  6E38               	movwf	lcdPrint@t^0,c
  2448  000A3A  0E1F               	movlw	high STR_14
  2449  000A3C  6E39               	movwf	(lcdPrint@t+1)^0,c
  2450  000A3E  ECEA  F007         	call	_lcdPrint	;wreg free
  2451                           
  2452                           ;main.c: 425: lcd_gotoxy(1, 2);
  2453  000A42  D997               	call	PL22	;call to abstracted procedure
  2454  000A44  EC00  F00B         	call	_lcd_gotoxy
  2455                           
  2456                           ;main.c: 426: lcdPrint("Òåìï Âåðõ:");
  2457  000A48  0ED1               	movlw	low STR_15
  2458  000A4A  6E38               	movwf	lcdPrint@t^0,c
  2459  000A4C  0E1F               	movlw	high STR_15
  2460  000A4E  6E39               	movwf	(lcdPrint@t+1)^0,c
  2461  000A50  ECEA  F007         	call	_lcdPrint	;wreg free
  2462                           
  2463                           ;main.c: 427: } else {
  2464  000A54  EFB1  F000         	goto	l2880
  2465  000A58                     l3140:
  2466                           
  2467                           ;main.c: 428: select = 6;
  2468  000A58  0E06               	movlw	6
  2469                           
  2470                           ;main.c: 429: sub_sel = 1;
  2471  000A5A  D9C2               	call	PL54	;call to abstracted procedure
  2472                           
  2473                           ;main.c: 430: clearLCD();
  2474  000A5C  EC0E  F00B         	call	_clearLCD	;wreg free
  2475                           
  2476                           ;main.c: 431: lcd_gotoxy(1, 1);
  2477  000A60  0E01               	movlw	1
  2478  000A62  6E35               	movwf	lcd_gotoxy@y^0,c
  2479  000A64  EC00  F00B         	call	_lcd_gotoxy
  2480                           
  2481                           ;main.c: 432: lcdPrint("    Êóáîâà  ");
  2482  000A68  0EAA               	movlw	low STR_16
  2483  000A6A  6E38               	movwf	lcdPrint@t^0,c
  2484  000A6C  0E1F               	movlw	high STR_16
  2485  000A6E  6E39               	movwf	(lcdPrint@t+1)^0,c
  2486  000A70  ECEA  F007         	call	_lcdPrint	;wreg free
  2487                           
  2488                           ;main.c: 433: lcd_gotoxy(1, 2);
  2489  000A74  D97E               	call	PL22	;call to abstracted procedure
  2490  000A76  EC00  F00B         	call	_lcd_gotoxy
  2491                           
  2492                           ;main.c: 434: lcdPrint("Òåìï öiëi:");
  2493  000A7A  0EDC               	movlw	low STR_17
  2494  000A7C  6E38               	movwf	lcdPrint@t^0,c
  2495  000A7E  0E1F               	movlw	high STR_17
  2496  000A80  6E39               	movwf	(lcdPrint@t+1)^0,c
  2497  000A82  ECEA  F007         	call	_lcdPrint	;wreg free
  2498                           
  2499                           ;main.c: 435: set_t_dq2_100 = set_t_dq2 / 10;
  2500  000A86  C019  F031         	movff	_set_t_dq2,___lwdiv@dividend
  2501  000A8A  C01A  F032         	movff	_set_t_dq2+1,___lwdiv@dividend+1
  2502  000A8E  6A34               	clrf	(___lwdiv@divisor+1)^0,c
  2503  000A90  0E0A               	movlw	10
  2504  000A92  6E33               	movwf	___lwdiv@divisor^0,c
  2505  000A94  ECB3  F009         	call	___lwdiv	;wreg free
  2506  000A98  5031               	movf	?___lwdiv^0,w,c
  2507  000A9A  6E1E               	movwf	_set_t_dq2_100^0,c
  2508                           
  2509                           ;main.c: 436: set_t_dq2_10 = set_t_dq2 % 10;
  2510  000A9C  D958               	call	PL12	;call to abstracted procedure
  2511  000A9E  D941               	call	PL4	;call to abstracted procedure
  2512  000AA0  ECF7  F009         	call	___lwmod	;wreg free
  2513  000AA4  5038               	movf	?___lwmod^0,w,c
  2514  000AA6  6E1D               	movwf	_set_t_dq2_10^0,c
  2515  000AA8  EFB1  F000         	goto	l2880
  2516  000AAC                     l3156:
  2517                           
  2518                           ;main.c: 444: lcd_gotoxy(11, 2);
  2519  000AAC  D98E               	call	PL48	;call to abstracted procedure
  2520  000AAE  EC00  F00B         	call	_lcd_gotoxy
  2521                           
  2522                           ;main.c: 445: lcd_putc('+');
  2523  000AB2  0E2B               	movlw	43
  2524  000AB4  EC2F  F00B         	call	_lcd_putc
  2525                           
  2526                           ;main.c: 446: lcd_putc(((set_t_dq1_up / 10) % 10) + 48);
  2527  000AB8  D978               	call	PL40	;call to abstracted procedure
  2528  000ABA  EC4C  F00A         	call	___lbdiv
  2529  000ABE  EC97  F00A         	call	___lbmod
  2530  000AC2  0F30               	addlw	48
  2531  000AC4  EC2F  F00B         	call	_lcd_putc
  2532                           
  2533                           ;main.c: 447: lcd_putc('.');
  2534  000AC8  0E2E               	movlw	46
  2535  000ACA  EC2F  F00B         	call	_lcd_putc
  2536                           
  2537                           ;main.c: 448: lcd_putc(((set_t_dq1_up % 10) + 48));
  2538  000ACE  D984               	call	PL52	;call to abstracted procedure
  2539  000AD0  EC97  F00A         	call	___lbmod
  2540  000AD4  0F30               	addlw	48
  2541  000AD6  EC2F  F00B         	call	_lcd_putc
  2542                           
  2543                           ;main.c: 450: if (pressed_key == 1) {
  2544  000ADA  0422               	decf	_pressed_key^0,w,c
  2545  000ADC  E105               	bnz	l3166
  2546                           
  2547                           ;main.c: 451: set_t_dq1_up++;
  2548  000ADE  2A20               	incf	_set_t_dq1_up^0,f,c
  2549                           
  2550                           ;main.c: 452: if (set_t_dq1_up == 11)
  2551  000AE0  0E0B               	movlw	11
  2552  000AE2  1820               	xorwf	_set_t_dq1_up^0,w,c
  2553  000AE4  E101               	bnz	l3166
  2554                           
  2555                           ;main.c: 453: set_t_dq1_up = 0;
  2556  000AE6  6A20               	clrf	_set_t_dq1_up^0,c
  2557  000AE8                     l3166:
  2558                           
  2559                           ;main.c: 454: };main.c: 455: if (pressed_key == 2) {
  2560  000AE8  0E02               	movlw	2
  2561  000AEA  1822               	xorwf	_pressed_key^0,w,c
  2562  000AEC  E105               	bnz	l3174
  2563                           
  2564                           ;main.c: 456: set_t_dq1_up--;
  2565  000AEE  0620               	decf	_set_t_dq1_up^0,f,c
  2566                           
  2567                           ;main.c: 457: if (set_t_dq1_up == 255)
  2568  000AF0  2820               	incf	_set_t_dq1_up^0,w,c
  2569  000AF2  E102               	bnz	l3174
  2570                           
  2571                           ;main.c: 458: set_t_dq1_up = 10;
  2572  000AF4  0E0A               	movlw	10
  2573  000AF6  6E20               	movwf	_set_t_dq1_up^0,c
  2574  000AF8                     l3174:
  2575                           
  2576                           ;main.c: 459: };main.c: 460: if (pressed_key == 3) {
  2577  000AF8  0E03               	movlw	3
  2578  000AFA  1822               	xorwf	_pressed_key^0,w,c
  2579  000AFC  E002 EFB1  F000    	bnz	l2880
  2580                           
  2581                           ;main.c: 461: sub_sel = 2;
  2582                           
  2583                           ;main.c: 462: lcd_gotoxy(1, 2);
  2584  000B02  D94F               	call	PL36	;call to abstracted procedure
  2585  000B04  EC00  F00B         	call	_lcd_gotoxy
  2586                           
  2587                           ;main.c: 463: lcdPrint("Òåìï Íèç:     ");
  2588  000B08  0E7E               	movlw	low STR_18
  2589  000B0A  6E38               	movwf	lcdPrint@t^0,c
  2590  000B0C  0E1F               	movlw	high STR_18
  2591  000B0E  6E39               	movwf	(lcdPrint@t+1)^0,c
  2592  000B10  ECEA  F007         	call	_lcdPrint	;wreg free
  2593  000B14  EFB1  F000         	goto	l2880
  2594  000B18                     l3182:
  2595                           
  2596                           ;main.c: 467: lcd_gotoxy(10, 2);
  2597  000B18  D955               	call	PL46	;call to abstracted procedure
  2598  000B1A  EC00  F00B         	call	_lcd_gotoxy
  2599                           
  2600                           ;main.c: 468: lcd_putc('-');
  2601  000B1E  0E2D               	movlw	45
  2602  000B20  EC2F  F00B         	call	_lcd_putc
  2603                           
  2604                           ;main.c: 469: lcd_putc(((set_t_dq1_dwn / 10) % 10) + 48);
  2605  000B24  D939               	call	PL32	;call to abstracted procedure
  2606  000B26  EC4C  F00A         	call	___lbdiv
  2607  000B2A  EC97  F00A         	call	___lbmod
  2608  000B2E  0F30               	addlw	48
  2609  000B30  EC2F  F00B         	call	_lcd_putc
  2610                           
  2611                           ;main.c: 470: lcd_putc('.');
  2612  000B34  0E2E               	movlw	46
  2613  000B36  EC2F  F00B         	call	_lcd_putc
  2614                           
  2615                           ;main.c: 471: lcd_putc(((set_t_dq1_dwn % 10) + 48));
  2616  000B3A  D95E               	call	PL62	;call to abstracted procedure
  2617  000B3C  EC97  F00A         	call	___lbmod
  2618  000B40  0F30               	addlw	48
  2619  000B42  EC2F  F00B         	call	_lcd_putc
  2620                           
  2621                           ;main.c: 473: if (pressed_key == 1) {
  2622  000B46  0422               	decf	_pressed_key^0,w,c
  2623  000B48  E105               	bnz	l3192
  2624                           
  2625                           ;main.c: 474: set_t_dq1_dwn++;
  2626  000B4A  2A1F               	incf	_set_t_dq1_dwn^0,f,c
  2627                           
  2628                           ;main.c: 475: if (set_t_dq1_dwn == 11)
  2629  000B4C  0E0B               	movlw	11
  2630  000B4E  181F               	xorwf	_set_t_dq1_dwn^0,w,c
  2631  000B50  E101               	bnz	l3192
  2632                           
  2633                           ;main.c: 476: set_t_dq1_dwn = 0;
  2634  000B52  6A1F               	clrf	_set_t_dq1_dwn^0,c
  2635  000B54                     l3192:
  2636                           
  2637                           ;main.c: 477: };main.c: 478: if (pressed_key == 2) {
  2638  000B54  0E02               	movlw	2
  2639  000B56  1822               	xorwf	_pressed_key^0,w,c
  2640  000B58  E105               	bnz	l3200
  2641                           
  2642                           ;main.c: 479: set_t_dq1_dwn--;
  2643  000B5A  061F               	decf	_set_t_dq1_dwn^0,f,c
  2644                           
  2645                           ;main.c: 480: if (set_t_dq1_dwn == 255)
  2646  000B5C  281F               	incf	_set_t_dq1_dwn^0,w,c
  2647  000B5E  E102               	bnz	l3200
  2648                           
  2649                           ;main.c: 481: set_t_dq1_dwn = 10;
  2650  000B60  0E0A               	movlw	10
  2651  000B62  6E1F               	movwf	_set_t_dq1_dwn^0,c
  2652  000B64                     l3200:
  2653                           
  2654                           ;main.c: 482: };main.c: 483: if (pressed_key == 3) {
  2655  000B64  0E03               	movlw	3
  2656  000B66  1822               	xorwf	_pressed_key^0,w,c
  2657  000B68  E002 EFB1  F000    	bnz	l2880
  2658                           
  2659                           ;main.c: 484: select = 1;
  2660  000B6E  0E01               	movlw	1
  2661  000B70  6E4D               	movwf	_select^0,c
  2662                           
  2663                           ;main.c: 485: write_eep(16, set_t_dq1_up);
  2664  000B72  C020  F031         	movff	_set_t_dq1_up,write_eep@data
  2665  000B76  0E10               	movlw	16
  2666  000B78  ECAA  F00A         	call	_write_eep
  2667                           
  2668                           ;main.c: 486: write_eep(17, set_t_dq1_dwn);
  2669  000B7C  C01F  F031         	movff	_set_t_dq1_dwn,write_eep@data
  2670  000B80  0E11               	movlw	17
  2671  000B82  ECAA  F00A         	call	_write_eep
  2672  000B86  EFB1  F000         	goto	l2880
  2673  000B8A                     l3210:
  2674  000B8A  5021               	movf	_sub_sel^0,w,c
  2675                           
  2676                           ; Switch size 1, requested type "space"
  2677                           ; Number of cases is 2, Range of values is 1 to 2
  2678                           ; switch strategies available:
  2679                           ; Name         Instructions Cycles
  2680                           ; simple_byte            7     4 (average)
  2681                           ;	Chosen strategy is simple_byte
  2682  000B8C  0A01               	xorlw	1	; case 1
  2683  000B8E  E08E               	bz	l3156
  2684  000B90  0A03               	xorlw	3	; case 2
  2685  000B92  E0C2               	bz	l3182
  2686  000B94  EFB1  F000         	goto	l2880
  2687  000B98                     l3212:
  2688                           
  2689                           ;main.c: 495: lcd_gotoxy(11, 2);
  2690  000B98  D918               	call	PL48	;call to abstracted procedure
  2691  000B9A  EC00  F00B         	call	_lcd_gotoxy
  2692                           
  2693                           ;main.c: 496: lcd_putc('+');
  2694  000B9E  0E2B               	movlw	43
  2695  000BA0  EC2F  F00B         	call	_lcd_putc
  2696                           
  2697                           ;main.c: 497: lcd_putc(((set_t_dq2_100 / 100) % 10) + 48);
  2698  000BA4  D8EF               	call	PL28	;call to abstracted procedure
  2699  000BA6  EC4C  F00A         	call	___lbdiv
  2700  000BAA  EC97  F00A         	call	___lbmod
  2701  000BAE  0F30               	addlw	48
  2702  000BB0  EC2F  F00B         	call	_lcd_putc
  2703                           
  2704                           ;main.c: 498: lcd_putc(((set_t_dq2_100 / 10) % 10) + 48);
  2705  000BB4  D8FF               	call	PL42	;call to abstracted procedure
  2706  000BB6  EC4C  F00A         	call	___lbdiv
  2707  000BBA  EC97  F00A         	call	___lbmod
  2708  000BBE  0F30               	addlw	48
  2709  000BC0  EC2F  F00B         	call	_lcd_putc
  2710                           
  2711                           ;main.c: 499: lcd_putc(((set_t_dq2_100 % 10) + 48));
  2712  000BC4  D911               	call	PL56	;call to abstracted procedure
  2713  000BC6  EC97  F00A         	call	___lbmod
  2714  000BCA  0F30               	addlw	48
  2715  000BCC  EC2F  F00B         	call	_lcd_putc
  2716                           
  2717                           ;main.c: 500: lcd_putc('.');
  2718  000BD0  0E2E               	movlw	46
  2719  000BD2  EC2F  F00B         	call	_lcd_putc
  2720                           
  2721                           ;main.c: 501: lcd_putc((set_t_dq2_10 % 10) + 48);
  2722  000BD6  D8FC               	call	PL50	;call to abstracted procedure
  2723  000BD8  EC97  F00A         	call	___lbmod
  2724  000BDC  0F30               	addlw	48
  2725  000BDE  EC2F  F00B         	call	_lcd_putc
  2726                           
  2727                           ;main.c: 504: if (pressed_key == 1) {
  2728  000BE2  0422               	decf	_pressed_key^0,w,c
  2729  000BE4  E105               	bnz	l3222
  2730                           
  2731                           ;main.c: 505: set_t_dq2_100++;
  2732  000BE6  2A1E               	incf	_set_t_dq2_100^0,f,c
  2733                           
  2734                           ;main.c: 506: if (set_t_dq2_100 >= 105)
  2735  000BE8  0E68               	movlw	104
  2736  000BEA  641E               	cpfsgt	_set_t_dq2_100^0,c
  2737  000BEC  D001               	goto	l3222
  2738                           
  2739                           ;main.c: 507: set_t_dq2_100 = 0;
  2740  000BEE  6A1E               	clrf	_set_t_dq2_100^0,c
  2741  000BF0                     l3222:
  2742                           
  2743                           ;main.c: 508: };main.c: 509: if (pressed_key == 2) {
  2744  000BF0  0E02               	movlw	2
  2745  000BF2  1822               	xorwf	_pressed_key^0,w,c
  2746  000BF4  E105               	bnz	l3230
  2747                           
  2748                           ;main.c: 510: set_t_dq2_100--;
  2749  000BF6  061E               	decf	_set_t_dq2_100^0,f,c
  2750                           
  2751                           ;main.c: 511: if (set_t_dq2_100 == 255)
  2752  000BF8  281E               	incf	_set_t_dq2_100^0,w,c
  2753  000BFA  E102               	bnz	l3230
  2754                           
  2755                           ;main.c: 512: set_t_dq2_100 = 105;
  2756  000BFC  0E69               	movlw	105
  2757  000BFE  6E1E               	movwf	_set_t_dq2_100^0,c
  2758  000C00                     l3230:
  2759                           
  2760                           ;main.c: 513: };main.c: 514: if (pressed_key == 3) {
  2761  000C00  0E03               	movlw	3
  2762  000C02  1822               	xorwf	_pressed_key^0,w,c
  2763  000C04  E002 EFB1  F000    	bnz	l2880
  2764                           
  2765                           ;main.c: 515: sub_sel = 2;
  2766                           
  2767                           ;main.c: 516: lcd_gotoxy(1, 2);
  2768  000C0A  D8CB               	call	PL36	;call to abstracted procedure
  2769  000C0C  EC00  F00B         	call	_lcd_gotoxy
  2770                           
  2771                           ;main.c: 517: lcdPrint("Òåìï äðá:      ");
  2772  000C10  0E0F               	movlw	low STR_19
  2773  000C12  6E38               	movwf	lcdPrint@t^0,c
  2774  000C14  0E1F               	movlw	high STR_19
  2775  000C16  6E39               	movwf	(lcdPrint@t+1)^0,c
  2776  000C18  ECEA  F007         	call	_lcdPrint	;wreg free
  2777  000C1C  EFB1  F000         	goto	l2880
  2778  000C20                     l3238:
  2779                           
  2780                           ;main.c: 521: lcd_gotoxy(10, 2);
  2781  000C20  D8D1               	call	PL46	;call to abstracted procedure
  2782  000C22  EC00  F00B         	call	_lcd_gotoxy
  2783                           
  2784                           ;main.c: 522: lcd_putc('+');
  2785  000C26  0E2B               	movlw	43
  2786  000C28  EC2F  F00B         	call	_lcd_putc
  2787                           
  2788                           ;main.c: 523: lcd_putc(((set_t_dq2_100 / 100) % 10) + 48);
  2789  000C2C  D8AB               	call	PL28	;call to abstracted procedure
  2790  000C2E  EC4C  F00A         	call	___lbdiv
  2791  000C32  EC97  F00A         	call	___lbmod
  2792  000C36  0F30               	addlw	48
  2793  000C38  EC2F  F00B         	call	_lcd_putc
  2794                           
  2795                           ;main.c: 524: lcd_putc(((set_t_dq2_100 / 10) % 10) + 48);
  2796  000C3C  D8BB               	call	PL42	;call to abstracted procedure
  2797  000C3E  EC4C  F00A         	call	___lbdiv
  2798  000C42  EC97  F00A         	call	___lbmod
  2799  000C46  0F30               	addlw	48
  2800  000C48  EC2F  F00B         	call	_lcd_putc
  2801                           
  2802                           ;main.c: 525: lcd_putc(((set_t_dq2_100 % 10) + 48));
  2803  000C4C  D8CD               	call	PL56	;call to abstracted procedure
  2804  000C4E  EC97  F00A         	call	___lbmod
  2805  000C52  0F30               	addlw	48
  2806  000C54  EC2F  F00B         	call	_lcd_putc
  2807                           
  2808                           ;main.c: 526: lcd_putc('.');
  2809  000C58  0E2E               	movlw	46
  2810  000C5A  EC2F  F00B         	call	_lcd_putc
  2811                           
  2812                           ;main.c: 527: lcd_putc((set_t_dq2_10 % 10) + 48);
  2813  000C5E  D8B8               	call	PL50	;call to abstracted procedure
  2814  000C60  EC97  F00A         	call	___lbmod
  2815  000C64  0F30               	addlw	48
  2816  000C66  EC2F  F00B         	call	_lcd_putc
  2817                           
  2818                           ;main.c: 528: lcd_putc(' ');
  2819  000C6A  0E20               	movlw	32
  2820  000C6C  EC2F  F00B         	call	_lcd_putc
  2821                           
  2822                           ;main.c: 530: if (pressed_key == 1) {
  2823  000C70  0422               	decf	_pressed_key^0,w,c
  2824  000C72  E105               	bnz	l3248
  2825                           
  2826                           ;main.c: 531: set_t_dq2_10++;
  2827  000C74  2A1D               	incf	_set_t_dq2_10^0,f,c
  2828                           
  2829                           ;main.c: 532: if (set_t_dq2_10 == 10)
  2830  000C76  0E0A               	movlw	10
  2831  000C78  181D               	xorwf	_set_t_dq2_10^0,w,c
  2832  000C7A  E101               	bnz	l3248
  2833                           
  2834                           ;main.c: 533: set_t_dq2_10 = 0;
  2835  000C7C  6A1D               	clrf	_set_t_dq2_10^0,c
  2836  000C7E                     l3248:
  2837                           
  2838                           ;main.c: 534: };main.c: 535: if (pressed_key == 2) {
  2839  000C7E  0E02               	movlw	2
  2840  000C80  1822               	xorwf	_pressed_key^0,w,c
  2841  000C82  E105               	bnz	l3256
  2842                           
  2843                           ;main.c: 536: set_t_dq2_10--;
  2844  000C84  061D               	decf	_set_t_dq2_10^0,f,c
  2845                           
  2846                           ;main.c: 537: if (set_t_dq2_10 == 255)
  2847  000C86  281D               	incf	_set_t_dq2_10^0,w,c
  2848  000C88  E102               	bnz	l3256
  2849                           
  2850                           ;main.c: 538: set_t_dq2_10 = 9;
  2851  000C8A  0E09               	movlw	9
  2852  000C8C  6E1D               	movwf	_set_t_dq2_10^0,c
  2853  000C8E                     l3256:
  2854                           
  2855                           ;main.c: 539: };main.c: 540: if (pressed_key == 3) {
  2856  000C8E  0E03               	movlw	3
  2857  000C90  1822               	xorwf	_pressed_key^0,w,c
  2858  000C92  E002 EFB1  F000    	bnz	l2880
  2859                           
  2860                           ;main.c: 541: select = 1;
  2861  000C98  0E01               	movlw	1
  2862  000C9A  6E4D               	movwf	_select^0,c
  2863                           
  2864                           ;main.c: 542: set_t_dq2 = (set_t_dq2_100 * 10) + set_t_dq2_10;
  2865  000C9C  501E               	movf	_set_t_dq2_100^0,w,c
  2866  000C9E  0D0A               	mullw	10
  2867  000CA0  CFF3 F042          	movff	prodl,??_main
  2868  000CA4  CFF4 F043          	movff	prodh,??_main+1
  2869  000CA8  501D               	movf	_set_t_dq2_10^0,w,c
  2870  000CAA  2442               	addwf	??_main^0,w,c
  2871  000CAC  6E19               	movwf	_set_t_dq2^0,c
  2872  000CAE  0E00               	movlw	0
  2873  000CB0  2043               	addwfc	(??_main+1)^0,w,c
  2874  000CB2  6E1A               	movwf	(_set_t_dq2+1)^0,c
  2875                           
  2876                           ;main.c: 543: write_eep(18, ((unsigned char)(((set_t_dq2)>>8)&0xFF)));
  2877  000CB4  C01A  F031         	movff	_set_t_dq2+1,write_eep@data
  2878  000CB8  0E12               	movlw	18
  2879  000CBA  ECAA  F00A         	call	_write_eep
  2880                           
  2881                           ;main.c: 544: write_eep(19, ((unsigned char)((set_t_dq2)&0xFF)));
  2882  000CBE  C019  F031         	movff	_set_t_dq2,write_eep@data
  2883  000CC2  0E13               	movlw	19
  2884  000CC4  ECAA  F00A         	call	_write_eep
  2885  000CC8  D5EB               	goto	l3014
  2886  000CCA                     l3270:
  2887  000CCA  5021               	movf	_sub_sel^0,w,c
  2888                           
  2889                           ; Switch size 1, requested type "space"
  2890                           ; Number of cases is 2, Range of values is 1 to 2
  2891                           ; switch strategies available:
  2892                           ; Name         Instructions Cycles
  2893                           ; simple_byte            7     4 (average)
  2894                           ;	Chosen strategy is simple_byte
  2895  000CCC  0A01               	xorlw	1	; case 1
  2896  000CCE  E101 D763          	bz	l3212
  2897  000CD2  0A03               	xorlw	3	; case 2
  2898  000CD4  E0A5               	bz	l3238
  2899  000CD6  EFB1  F000         	goto	l2880
  2900  000CDA                     l3274:
  2901  000CDA  504D               	movf	_select^0,w,c
  2902                           
  2903                           ; Switch size 1, requested type "space"
  2904                           ; Number of cases is 8, Range of values is 1 to 8
  2905                           ; switch strategies available:
  2906                           ; Name         Instructions Cycles
  2907                           ; simple_byte           25    13 (average)
  2908                           ;	Chosen strategy is simple_byte
  2909  000CDC  0A01               	xorlw	1	; case 1
  2910  000CDE  E102 EFBB  F000    	bz	l2888
  2911  000CE4  0A03               	xorlw	3	; case 2
  2912  000CE6  E101 D5DF          	bz	l3016
  2913  000CEA  0A01               	xorlw	1	; case 3
  2914  000CEC  E102 EFB1  F000    	bz	l2880
  2915  000CF2  0A07               	xorlw	7	; case 4
  2916  000CF4  E101 D677          	bz	l3106
  2917  000CF8  0A01               	xorlw	1	; case 5
  2918  000CFA  E101 D746          	bz	l3210
  2919  000CFE  0A03               	xorlw	3	; case 6
  2920  000D00  E0E4               	bz	l3270
  2921  000D02  0A01               	xorlw	1	; case 7
  2922  000D04  E101 D5FD          	bz	l3044
  2923  000D08  0A0F               	xorlw	15	; case 8
  2924  000D0A  E101 D635          	bz	l3074
  2925  000D0E  EFB1  F000         	goto	l2880
  2926  000D12                     __end_of_main:
  2927                           	callstack 0
  2928  000D12                     PL2:
  2929                           	callstack 24
  2930  000D12  C031  F038         	movff	?___lwdiv,___lwmod@dividend
  2931  000D16  C032  F039         	movff	?___lwdiv+1,___lwmod@dividend+1
  2932  000D1A  6A3B               	clrf	(___lwmod@divisor+1)^0,c
  2933  000D1C  0E0A               	movlw	10
  2934  000D1E  6E3A               	movwf	___lwmod@divisor^0,c
  2935  000D20  0C0A               	retlw	10
  2936  000D22                     __end_ofPL2:
  2937                           	callstack 0
  2938  000D22                     PL4:
  2939                           	callstack 24
  2940  000D22  6A3B               	clrf	(___lwmod@divisor+1)^0,c
  2941  000D24  0E0A               	movlw	10
  2942  000D26  6E3A               	movwf	___lwmod@divisor^0,c
  2943  000D28  0C0A               	retlw	10
  2944  000D2A                     __end_ofPL4:
  2945                           	callstack 0
  2946  000D2A                     PL6:
  2947                           	callstack 24
  2948  000D2A  6E33               	movwf	___lwdiv@divisor^0,c
  2949  000D2C  C019  F031         	movff	_set_t_dq2,___lwdiv@dividend
  2950  000D30  C01A  F032         	movff	_set_t_dq2+1,___lwdiv@dividend+1
  2951  000D34  0012               	return	
  2952  000D36                     __end_ofPL6:
  2953                           	callstack 0
  2954  000D36                     PL8:
  2955                           	callstack 24
  2956  000D36  6E33               	movwf	___lwdiv@divisor^0,c
  2957  000D38  C049  F031         	movff	_temperature_1,___lwdiv@dividend
  2958  000D3C  C04A  F032         	movff	_temperature_1+1,___lwdiv@dividend+1
  2959  000D40  0012               	return	
  2960  000D42                     __end_ofPL8:
  2961                           	callstack 0
  2962  000D42                     PL10:
  2963                           	callstack 24
  2964  000D42  6E33               	movwf	___lwdiv@divisor^0,c
  2965  000D44  C047  F031         	movff	_temperature_2,___lwdiv@dividend
  2966  000D48  C048  F032         	movff	_temperature_2+1,___lwdiv@dividend+1
  2967  000D4C  0012               	return	
  2968  000D4E                     __end_ofPL10:
  2969                           	callstack 0
  2970  000D4E                     PL12:
  2971                           	callstack 24
  2972  000D4E  C019  F038         	movff	_set_t_dq2,___lwmod@dividend
  2973  000D52  C01A  F039         	movff	_set_t_dq2+1,___lwmod@dividend+1
  2974  000D56  0012               	return	
  2975  000D58                     __end_ofPL12:
  2976                           	callstack 0
  2977  000D58                     PL16:
  2978                           	callstack 24
  2979  000D58  C049  F038         	movff	_temperature_1,___lwmod@dividend
  2980  000D5C  C04A  F039         	movff	_temperature_1+1,___lwmod@dividend+1
  2981  000D60  0012               	return	
  2982  000D62                     __end_ofPL16:
  2983                           	callstack 0
  2984  000D62                     PL18:
  2985                           	callstack 24
  2986  000D62  C047  F038         	movff	_temperature_2,___lwmod@dividend
  2987  000D66  C048  F039         	movff	_temperature_2+1,___lwmod@dividend+1
  2988  000D6A  0012               	return	
  2989  000D6C                     __end_ofPL18:
  2990                           	callstack 0
  2991  000D6C                     PL20:
  2992                           	callstack 24
  2993  000D6C  0E03               	movlw	3
  2994  000D6E  6E34               	movwf	(___lwdiv@divisor+1)^0,c
  2995  000D70  0CE8               	retlw	232
  2996  000D72                     __end_ofPL20:
  2997                           	callstack 0
  2998  000D72                     PL22:
  2999                           	callstack 24
  3000  000D72  0E02               	movlw	2
  3001  000D74  6E35               	movwf	lcd_gotoxy@y^0,c
  3002  000D76  0C01               	retlw	1
  3003  000D78                     __end_ofPL22:
  3004                           	callstack 0
  3005  000D78                     PL26:
  3006                           	callstack 24
  3007  000D78  6E33               	movwf	___lwdiv@divisor^0,c
  3008  000D7A  C017  F031         	movff	_temp1_fix,___lwdiv@dividend
  3009  000D7E  C018  F032         	movff	_temp1_fix+1,___lwdiv@dividend+1
  3010  000D82  0012               	return	
  3011  000D84                     __end_ofPL26:
  3012                           	callstack 0
  3013  000D84                     PL28:
  3014                           	callstack 24
  3015  000D84  0E0A               	movlw	10
  3016  000D86  6E35               	movwf	___lbmod@divisor^0,c
  3017  000D88  0E64               	movlw	100
  3018  000D8A  6E31               	movwf	___lbdiv@divisor^0,c
  3019  000D8C  501E               	movf	_set_t_dq2_100^0,w,c
  3020  000D8E  0012               	return	
  3021  000D90                     __end_ofPL28:
  3022                           	callstack 0
  3023  000D90                     PL30:
  3024                           	callstack 24
  3025  000D90  6E4D               	movwf	_select^0,c
  3026  000D92  0E01               	movlw	1
  3027  000D94  6E35               	movwf	lcd_gotoxy@y^0,c
  3028  000D96  0C01               	retlw	1
  3029  000D98                     __end_ofPL30:
  3030                           	callstack 0
  3031  000D98                     PL32:
  3032                           	callstack 24
  3033  000D98  0E0A               	movlw	10
  3034  000D9A  6E35               	movwf	___lbmod@divisor^0,c
  3035  000D9C  6E31               	movwf	___lbdiv@divisor^0,c
  3036  000D9E  501F               	movf	_set_t_dq1_dwn^0,w,c
  3037  000DA0  0012               	return	
  3038  000DA2                     __end_ofPL32:
  3039                           	callstack 0
  3040  000DA2                     PL36:
  3041                           	callstack 24
  3042  000DA2  0E02               	movlw	2
  3043  000DA4  6E21               	movwf	_sub_sel^0,c
  3044  000DA6  6E35               	movwf	lcd_gotoxy@y^0,c
  3045  000DA8  0C01               	retlw	1
  3046  000DAA                     __end_ofPL36:
  3047                           	callstack 0
  3048  000DAA                     PL40:
  3049                           	callstack 24
  3050  000DAA  0E0A               	movlw	10
  3051  000DAC  6E35               	movwf	___lbmod@divisor^0,c
  3052  000DAE  6E31               	movwf	___lbdiv@divisor^0,c
  3053  000DB0  5020               	movf	_set_t_dq1_up^0,w,c
  3054  000DB2  0012               	return	
  3055  000DB4                     __end_ofPL40:
  3056                           	callstack 0
  3057  000DB4                     PL42:
  3058                           	callstack 24
  3059  000DB4  0E0A               	movlw	10
  3060  000DB6  6E35               	movwf	___lbmod@divisor^0,c
  3061  000DB8  6E31               	movwf	___lbdiv@divisor^0,c
  3062  000DBA  501E               	movf	_set_t_dq2_100^0,w,c
  3063  000DBC  0012               	return	
  3064  000DBE                     __end_ofPL42:
  3065                           	callstack 0
  3066  000DBE                     PL44:
  3067                           	callstack 24
  3068  000DBE  0E01               	movlw	1
  3069  000DC0  6E35               	movwf	lcd_gotoxy@y^0,c
  3070  000DC2  0C10               	retlw	16
  3071  000DC4                     __end_ofPL44:
  3072                           	callstack 0
  3073  000DC4                     PL46:
  3074                           	callstack 24
  3075  000DC4  0E02               	movlw	2
  3076  000DC6  6E35               	movwf	lcd_gotoxy@y^0,c
  3077  000DC8  0C0A               	retlw	10
  3078  000DCA                     __end_ofPL46:
  3079                           	callstack 0
  3080  000DCA                     PL48:
  3081                           	callstack 24
  3082  000DCA  0E02               	movlw	2
  3083  000DCC  6E35               	movwf	lcd_gotoxy@y^0,c
  3084  000DCE  0C0B               	retlw	11
  3085  000DD0                     __end_ofPL48:
  3086                           	callstack 0
  3087  000DD0                     PL50:
  3088                           	callstack 24
  3089  000DD0  0E0A               	movlw	10
  3090  000DD2  6E35               	movwf	___lbmod@divisor^0,c
  3091  000DD4  501D               	movf	_set_t_dq2_10^0,w,c
  3092  000DD6  0012               	return	
  3093  000DD8                     __end_ofPL50:
  3094                           	callstack 0
  3095  000DD8                     PL52:
  3096                           	callstack 24
  3097  000DD8  0E0A               	movlw	10
  3098  000DDA  6E35               	movwf	___lbmod@divisor^0,c
  3099  000DDC  5020               	movf	_set_t_dq1_up^0,w,c
  3100  000DDE  0012               	return	
  3101  000DE0                     __end_ofPL52:
  3102                           	callstack 0
  3103  000DE0                     PL54:
  3104                           	callstack 24
  3105  000DE0  6E4D               	movwf	_select^0,c
  3106  000DE2  0E01               	movlw	1
  3107  000DE4  6E21               	movwf	_sub_sel^0,c
  3108  000DE6  0C01               	retlw	1
  3109  000DE8                     __end_ofPL54:
  3110                           	callstack 0
  3111  000DE8                     PL56:
  3112                           	callstack 24
  3113  000DE8  0E0A               	movlw	10
  3114  000DEA  6E35               	movwf	___lbmod@divisor^0,c
  3115  000DEC  501E               	movf	_set_t_dq2_100^0,w,c
  3116  000DEE  0012               	return	
  3117  000DF0                     __end_ofPL56:
  3118                           	callstack 0
  3119  000DF0                     PL58:
  3120                           	callstack 26
  3121  000DF0  6A32               	clrf	(Delay_ms@delay+1)^0,c
  3122  000DF2  0E0A               	movlw	10
  3123  000DF4  6E31               	movwf	Delay_ms@delay^0,c
  3124  000DF6  0C0A               	retlw	10
  3125  000DF8                     __end_ofPL58:
  3126                           	callstack 0
  3127  000DF8                     PL62:
  3128                           	callstack 24
  3129  000DF8  0E0A               	movlw	10
  3130  000DFA  6E35               	movwf	___lbmod@divisor^0,c
  3131  000DFC  501F               	movf	_set_t_dq1_dwn^0,w,c
  3132  000DFE  0012               	return	
  3133  000E00                     __end_ofPL62:
  3134                           	callstack 0
  3135                           
  3136 ;; *************** function _lcd_putc *****************
  3137 ;; Defined at:
  3138 ;;		line 90 in file "hd44780.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  c               1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  c               1    7[COMRAM] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1
  3152 ;;      Params:         0       0       0
  3153 ;;      Locals:         1       0       0
  3154 ;;      Temps:          0       0       0
  3155 ;;      Totals:         1       0       0
  3156 ;;Total ram usage:        1 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    4
  3159 ;; This function calls:
  3160 ;;		_lcdWrite
  3161 ;; This function is called by:
  3162 ;;		_main
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text1
  3167  00165E                     __ptext1:
  3168                           	callstack 0
  3169  00165E                     _lcd_putc:
  3170                           	callstack 26
  3171                           
  3172                           ;incstack = 0
  3173                           ;lcd_putc@c stored from wreg
  3174  00165E  6E35               	movwf	lcd_putc@c^0,c
  3175                           
  3176                           ;hd44780.c: 92: lcdWrite(c, DATA);
  3177  001660  0E01               	movlw	1
  3178  001662  6E33               	movwf	lcdWrite@type^0,c
  3179  001664  5035               	movf	lcd_putc@c^0,w,c
  3180  001666  EFCE  F00A         	goto	_lcdWrite
  3181  00166A                     __end_of_lcd_putc:
  3182                           	callstack 0
  3183                           
  3184 ;; *************** function _lcdPrint *****************
  3185 ;; Defined at:
  3186 ;;		line 96 in file "hd44780.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  t               2   10[COMRAM] PTR const unsigned char 
  3189 ;;		 -> STR_19(16), STR_18(15), STR_17(11), STR_16(13), 
  3190 ;;		 -> STR_15(11), STR_14(13), STR_13(15), STR_12(15), 
  3191 ;;		 -> STR_11(14), STR_10(16), STR_9(16), STR_8(16), 
  3192 ;;		 -> STR_7(7), STR_6(8), STR_5(8), STR_4(13), 
  3193 ;;		 -> STR_3(16), STR_2(16), STR_1(16), 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1
  3205 ;;      Params:         2       0       0
  3206 ;;      Locals:         0       0       0
  3207 ;;      Temps:          4       0       0
  3208 ;;      Totals:         6       0       0
  3209 ;;Total ram usage:        6 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    5
  3212 ;; This function calls:
  3213 ;;		_lcdWrite
  3214 ;;		_lcd_gotoxy
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text2
  3221  000FD4                     __ptext2:
  3222                           	callstack 0
  3223  000FD4                     _lcdPrint:
  3224                           	callstack 25
  3225                           
  3226                           ;hd44780.c: 97: while(*t != '\0'){
  3227                           
  3228                           ;incstack = 0
  3229  000FD4  D046               	goto	l2604
  3230  000FD6                     l2584:
  3231                           
  3232                           ;hd44780.c: 100: lcdWrite(1, COMMAND);
  3233  000FD6  D84F               	call	PL60	;call to abstracted procedure
  3234  000FD8  ECCE  F00A         	call	_lcdWrite
  3235                           
  3236                           ;hd44780.c: 101: _delay((unsigned long)((2)*(8000000/4000.0)));
  3237  000FDC  0E06               	movlw	6
  3238  000FDE  6E3A               	movwf	??_lcdPrint^0,c
  3239  000FE0  0E30               	movlw	48
  3240  000FE2                     u2627:
  3241  000FE2  2EE8               	decfsz	wreg,f,c
  3242  000FE4  D7FE               	bra	u2627
  3243  000FE6  2E3A               	decfsz	??_lcdPrint^0,f,c
  3244  000FE8  D7FC               	bra	u2627
  3245  000FEA  D000               	nop2	
  3246                           
  3247                           ;hd44780.c: 102: break;
  3248  000FEC  D038               	goto	l2602
  3249  000FEE                     l2588:
  3250                           
  3251                           ;hd44780.c: 105: lcd_gotoxy(1, 2);
  3252  000FEE  ECB9  F006         	call	PL22	;call to abstracted procedure
  3253  000FF2  EC00  F00B         	call	_lcd_gotoxy
  3254                           
  3255                           ;hd44780.c: 106: break;
  3256  000FF6  D033               	goto	l2602
  3257  000FF8                     l2590:
  3258                           
  3259                           ;hd44780.c: 109: lcdWrite(0x10, COMMAND);
  3260  000FF8  0E00               	movlw	0
  3261  000FFA  6E33               	movwf	lcdWrite@type^0,c
  3262  000FFC  0E10               	movlw	16
  3263  000FFE  ECCE  F00A         	call	_lcdWrite
  3264                           
  3265                           ;hd44780.c: 110: break;
  3266  001002  D02D               	goto	l2602
  3267  001004                     l2592:
  3268                           
  3269                           ;hd44780.c: 113: if (*t < 0xC0) {
  3270  001004  C038  FFF6         	movff	lcdPrint@t,tblptrl
  3271  001008  C039  FFF7         	movff	lcdPrint@t+1,tblptrh
  3272  00100C                     	if	0	;tblptru may be non-zero
  3273  00100C                     	endif
  3274  00100C                     	if	0	;tblptru may be non-zero
  3275  00100C                     	endif
  3276  00100C  0EC0               	movlw	192
  3277  00100E  0008               	tblrd		*
  3278  001010  60F5               	cpfslt	tablat,c
  3279  001012  D006               	goto	l2596
  3280                           
  3281                           ;hd44780.c: 114: lcdWrite(*t, DATA);
  3282  001014  0E01               	movlw	1
  3283  001016  6E33               	movwf	lcdWrite@type^0,c
  3284  001018  D827               	call	PL14	;call to abstracted procedure
  3285  00101A  ECCE  F00A         	call	_lcdWrite
  3286                           
  3287                           ;hd44780.c: 115: } else {
  3288  00101E  D01F               	goto	l2602
  3289  001020                     l2596:
  3290                           
  3291                           ;hd44780.c: 116: lcdWrite(HD44780_CYR[(unsigned char) (*t) - 0xC0], DATA);
  3292  001020  0E01               	movlw	1
  3293  001022  6E33               	movwf	lcdWrite@type^0,c
  3294  001024  0E40               	movlw	64
  3295  001026  6E3A               	movwf	??_lcdPrint^0,c
  3296  001028  683B               	setf	(??_lcdPrint+1)^0,c
  3297  00102A  D81E               	call	PL14	;call to abstracted procedure
  3298  00102C  6E3C               	movwf	(??_lcdPrint+2)^0,c
  3299  00102E  6A3D               	clrf	(??_lcdPrint+3)^0,c
  3300  001030  503A               	movf	??_lcdPrint^0,w,c
  3301  001032  263C               	addwf	(??_lcdPrint+2)^0,f,c
  3302  001034  503B               	movf	(??_lcdPrint+1)^0,w,c
  3303  001036  223D               	addwfc	(??_lcdPrint+3)^0,f,c
  3304  001038  0EA7               	movlw	low _HD44780_CYR
  3305  00103A  243C               	addwf	(??_lcdPrint+2)^0,w,c
  3306  00103C  6EF6               	movwf	tblptrl,c
  3307  00103E  0E1E               	movlw	high _HD44780_CYR
  3308  001040  203D               	addwfc	(??_lcdPrint+3)^0,w,c
  3309  001042  6EF7               	movwf	tblptrh,c
  3310  001044                     	if	0	;There are less than 3 active tblptr bytes
  3311  001044                     	endif
  3312  001044  0008               	tblrd		*
  3313  001046  50F5               	movf	tablat,w,c
  3314  001048  ECCE  F00A         	call	_lcdWrite
  3315  00104C  D008               	goto	l2602
  3316  00104E                     l2600:
  3317  00104E  D80C               	call	PL14	;call to abstracted procedure
  3318                           
  3319                           ; Switch size 1, requested type "space"
  3320                           ; Number of cases is 3, Range of values is 8 to 12
  3321                           ; switch strategies available:
  3322                           ; Name         Instructions Cycles
  3323                           ; simple_byte           10     6 (average)
  3324                           ;	Chosen strategy is simple_byte
  3325  001050  0A08               	xorlw	8	; case 8
  3326  001052  E0D2               	bz	l2590
  3327  001054  0A02               	xorlw	2	; case 10
  3328  001056  E0CB               	bz	l2588
  3329  001058  0A06               	xorlw	6	; case 12
  3330  00105A  E0BD               	bz	l2584
  3331  00105C  D7D3               	goto	l2592
  3332  00105E                     l2602:
  3333                           
  3334                           ;hd44780.c: 121: *t++;
  3335  00105E  4A38               	infsnz	lcdPrint@t^0,f,c
  3336  001060  2A39               	incf	(lcdPrint@t+1)^0,f,c
  3337  001062                     l2604:
  3338  001062  D802               	call	PL14	;call to abstracted procedure
  3339  001064  E1F4               	bnz	l2600
  3340  001066  0012               	return		;funcret
  3341  001068                     __end_of_lcdPrint:
  3342                           	callstack 0
  3343  001068                     PL14:
  3344                           	callstack 25
  3345  001068  C038  FFF6         	movff	lcdPrint@t,tblptrl
  3346  00106C  C039  FFF7         	movff	lcdPrint@t+1,tblptrh
  3347  001070                     	if	0	;tblptru may be non-zero
  3348  001070                     	endif
  3349  001070                     	if	0	;tblptru may be non-zero
  3350  001070                     	endif
  3351  001070  0008               	tblrd		*
  3352  001072  50F5               	movf	tablat,w,c
  3353  001074  0012               	return	
  3354  001076                     __end_ofPL14:
  3355                           	callstack 0
  3356  001076                     PL60:
  3357                           	callstack 26
  3358  001076  0E00               	movlw	0
  3359  001078  6E33               	movwf	lcdWrite@type^0,c
  3360  00107A  0C01               	retlw	1
  3361  00107C                     __end_ofPL60:
  3362                           	callstack 0
  3363                           
  3364 ;; *************** function _lcd_gotoxy *****************
  3365 ;; Defined at:
  3366 ;;		line 76 in file "hd44780.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  x               1    wreg     unsigned char 
  3369 ;;  y               1    7[COMRAM] unsigned char 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;  x               1    8[COMRAM] unsigned char 
  3372 ;;  address         1    9[COMRAM] unsigned char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1
  3382 ;;      Params:         1       0       0
  3383 ;;      Locals:         2       0       0
  3384 ;;      Temps:          0       0       0
  3385 ;;      Totals:         3       0       0
  3386 ;;Total ram usage:        3 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    4
  3389 ;; This function calls:
  3390 ;;		_lcdWrite
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;;		_lcdPrint
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text3
  3398  001600                     __ptext3:
  3399                           	callstack 0
  3400  001600                     _lcd_gotoxy:
  3401                           	callstack 26
  3402                           
  3403                           ;incstack = 0
  3404                           ;lcd_gotoxy@x stored from wreg
  3405  001600  6E36               	movwf	lcd_gotoxy@x^0,c
  3406                           
  3407                           ;hd44780.c: 77: uint8_t address;;hd44780.c: 79: if (y != 1)
  3408  001602  0435               	decf	lcd_gotoxy@y^0,w,c
  3409  001604  E003               	bz	l431
  3410                           
  3411                           ;hd44780.c: 80: address = 0x40;
  3412  001606  0E40               	movlw	64
  3413  001608  6E37               	movwf	lcd_gotoxy@address^0,c
  3414  00160A  D001               	goto	l2386
  3415  00160C                     l431:
  3416                           
  3417                           ;hd44780.c: 81: else;hd44780.c: 82: address = 0;
  3418  00160C  6A37               	clrf	lcd_gotoxy@address^0,c
  3419  00160E                     l2386:
  3420                           
  3421                           ;hd44780.c: 84: address += x - 1;
  3422  00160E  0436               	decf	lcd_gotoxy@x^0,w,c
  3423  001610  2637               	addwf	lcd_gotoxy@address^0,f,c
  3424                           
  3425                           ;hd44780.c: 85: lcdWrite(0x80 | address, COMMAND);
  3426  001612  6A33               	clrf	lcdWrite@type^0,c
  3427  001614  5037               	movf	lcd_gotoxy@address^0,w,c
  3428  001616  0980               	iorlw	128
  3429  001618  EFCE  F00A         	goto	_lcdWrite
  3430  00161C                     __end_of_lcd_gotoxy:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _key_press *****************
  3434 ;; Defined at:
  3435 ;;		line 5 in file "key.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  key             1    3[COMRAM] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1
  3449 ;;      Params:         0       0       0
  3450 ;;      Locals:         1       0       0
  3451 ;;      Temps:          0       0       0
  3452 ;;      Totals:         1       0       0
  3453 ;;Total ram usage:        1 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    2
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_main
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text4
  3464  0012CE                     __ptext4:
  3465                           	callstack 0
  3466  0012CE                     _key_press:
  3467                           	callstack 28
  3468                           
  3469                           ;key.c: 7: static uint16_t count = 0;;key.c: 8: uint8_t key;;key.c: 9: if (((PORTB & (1 
      +                          << 1)) == 0) && ((PORTB & (1 << 2)) == 0))
  3470                           
  3471                           ;incstack = 0
  3472  0012CE  A281               	btfss	129,1,c	;volatile
  3473  0012D0  B481               	btfsc	129,2,c	;volatile
  3474  0012D2  D002               	goto	l524
  3475                           
  3476                           ;key.c: 10: key = 3;
  3477  0012D4  0E03               	movlw	3
  3478  0012D6  D007               	goto	L5
  3479  0012D8                     l524:
  3480                           
  3481                           ;key.c: 11: else if ((PORTB & (1 << 1)) == 0)
  3482  0012D8  B281               	btfsc	129,1,c	;volatile
  3483  0012DA  D002               	goto	l526
  3484                           
  3485                           ;key.c: 12: key = 1;
  3486  0012DC  0E01               	movlw	1
  3487  0012DE  D003               	goto	L5
  3488  0012E0                     l526:
  3489                           
  3490                           ;key.c: 13: else if ((PORTB & (1 << 2)) == 0)
  3491  0012E0  B481               	btfsc	129,2,c	;volatile
  3492  0012E2  D003               	goto	l528
  3493                           
  3494                           ;key.c: 14: key = 2;
  3495  0012E4  0E02               	movlw	2
  3496  0012E6                     L5:
  3497  0012E6  6E31               	movwf	key_press@key^0,c
  3498  0012E8  D001               	goto	l1614
  3499  0012EA                     l528:
  3500                           
  3501                           ;key.c: 15: else;key.c: 16: key = 0;
  3502  0012EA  6A31               	clrf	key_press@key^0,c
  3503  0012EC                     l1614:
  3504                           
  3505                           ;key.c: 19: if (key) {
  3506  0012EC  5031               	movf	key_press@key^0,w,c
  3507  0012EE  E013               	bz	l530
  3508                           
  3509                           ;key.c: 20: if (count > 300) {
  3510  0012F0  0E2D               	movlw	45
  3511  0012F2  5C15               	subwf	key_press@count^0,w,c
  3512  0012F4  0E01               	movlw	1
  3513  0012F6  5816               	subwfb	(key_press@count+1)^0,w,c
  3514  0012F8  E307               	bnc	l1626
  3515                           
  3516                           ;key.c: 21: count = 300 - 10;
  3517  0012FA  0E01               	movlw	1
  3518  0012FC  6E16               	movwf	(key_press@count+1)^0,c
  3519  0012FE  0E22               	movlw	34
  3520  001300  6E15               	movwf	key_press@count^0,c
  3521  001302                     l1620:
  3522                           
  3523                           ;key.c: 22: key_pressed = key;
  3524  001302  C031  F01B         	movff	key_press@key,_key_pressed	;volatile
  3525  001306  0012               	return	
  3526  001308                     l1626:
  3527  001308  4A15               	infsnz	key_press@count^0,f,c
  3528  00130A  2A16               	incf	(key_press@count+1)^0,f,c
  3529                           
  3530                           ;key.c: 26: if (count == 15) {
  3531  00130C  0E0F               	movlw	15
  3532  00130E  1815               	xorwf	key_press@count^0,w,c
  3533  001310  1016               	iorwf	(key_press@count+1)^0,w,c
  3534  001312  E0F7               	bz	l1620
  3535  001314  0012               	return	
  3536  001316                     l530:
  3537  001316  6A15               	clrf	key_press@count^0,c
  3538  001318  6A16               	clrf	(key_press@count+1)^0,c
  3539  00131A  0012               	return		;funcret
  3540  00131C                     __end_of_key_press:
  3541                           	callstack 0
  3542                           
  3543 ;; *************** function _key_GetKey *****************
  3544 ;; Defined at:
  3545 ;;		line 48 in file "key.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  key             1    3[COMRAM] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      unsigned char 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1
  3559 ;;      Params:         0       0       0
  3560 ;;      Locals:         1       0       0
  3561 ;;      Temps:          0       0       0
  3562 ;;      Totals:         1       0       0
  3563 ;;Total ram usage:        1 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    2
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_main
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text5
  3574  00166A                     __ptext5:
  3575                           	callstack 0
  3576  00166A                     _key_GetKey:
  3577                           	callstack 28
  3578                           
  3579                           ;key.c: 50: uint8_t key = key_pressed;
  3580                           
  3581                           ;incstack = 0
  3582  00166A  C01B  F031         	movff	_key_pressed,key_GetKey@key	;volatile
  3583                           
  3584                           ;key.c: 52: key_pressed = 0;
  3585  00166E  6A1B               	clrf	_key_pressed^0,c	;volatile
  3586                           
  3587                           ;key.c: 53: return key;
  3588  001670  5031               	movf	key_GetKey@key^0,w,c
  3589  001672  0012               	return		;funcret
  3590  001674                     __end_of_key_GetKey:
  3591                           	callstack 0
  3592                           
  3593 ;; *************** function _ds18b20_readrom *****************
  3594 ;; Defined at:
  3595 ;;		line 171 in file "ds18b20.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  num_dq          1    wreg     unsigned char 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  num_dq          1   18[COMRAM] unsigned char 
  3600 ;;  temp_rom        8   10[COMRAM] unsigned char [8]
  3601 ;;  i               1   19[COMRAM] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      unsigned char 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1
  3611 ;;      Params:         0       0       0
  3612 ;;      Locals:        10       0       0
  3613 ;;      Temps:          0       0       0
  3614 ;;      Totals:        10       0       0
  3615 ;;Total ram usage:       10 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    4
  3618 ;; This function calls:
  3619 ;;		_Delay_ms
  3620 ;;		_ds18b20_crc8
  3621 ;;		_ow_reset
  3622 ;;		_read_byte
  3623 ;;		_write_byte
  3624 ;;		_write_eep
  3625 ;; This function is called by:
  3626 ;;		_main
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text6
  3631  001268                     __ptext6:
  3632                           	callstack 0
  3633  001268                     _ds18b20_readrom:
  3634                           	callstack 26
  3635                           
  3636                           ;incstack = 0
  3637                           ;ds18b20_readrom@num_dq stored from wreg
  3638  001268  6E40               	movwf	ds18b20_readrom@num_dq^0,c
  3639                           
  3640                           ;ds18b20.c: 172: uint8_t i;;ds18b20.c: 173: uint8_t temp_rom[8];;ds18b20.c: 175: if (!ow
      +                          _reset())
  3641  00126A  EC7F  F00A         	call	_ow_reset	;wreg free
  3642  00126E  0900               	iorlw	0
  3643  001270  E10C               	bnz	u1720
  3644                           
  3645                           ;ds18b20.c: 176: {;ds18b20.c: 177: write_byte(0x33);
  3646  001272  0E33               	movlw	51
  3647  001274  EC31  F00A         	call	_write_byte
  3648                           
  3649                           ;ds18b20.c: 178: for (i = 0; i < 8; i++) {
  3650  001278  6A41               	clrf	ds18b20_readrom@i^0,c
  3651  00127A                     l2732:
  3652                           
  3653                           ;ds18b20.c: 179: temp_rom[i] = read_byte();
  3654  00127A  D824               	call	PL34	;call to abstracted procedure
  3655  00127C  EC16  F00A         	call	_read_byte	;wreg free
  3656  001280  6EDF               	movwf	indf2,c
  3657  001282  2A41               	incf	ds18b20_readrom@i^0,f,c
  3658  001284  0E07               	movlw	7
  3659  001286  6441               	cpfsgt	ds18b20_readrom@i^0,c
  3660  001288  D7F8               	goto	l2732
  3661  00128A                     u1720:
  3662                           
  3663                           ;ds18b20.c: 180: };ds18b20.c: 181: };ds18b20.c: 182: if (!(ds18b20_crc8(temp_rom, 8))) {
  3664  00128A  0E38               	movlw	low ds18b20_readrom@temp_rom
  3665  00128C  6E31               	movwf	ds18b20_crc8@data_in^0,c
  3666  00128E  0E08               	movlw	8
  3667  001290  6E32               	movwf	ds18b20_crc8@num_bytes^0,c
  3668  001292  EC8E  F009         	call	_ds18b20_crc8	;wreg free
  3669  001296  0900               	iorlw	0
  3670  001298  E114               	bnz	l2758
  3671                           
  3672                           ;ds18b20.c: 183: for (i = 0; i < 8; i++) {
  3673  00129A  6A41               	clrf	ds18b20_readrom@i^0,c
  3674  00129C                     l2746:
  3675                           
  3676                           ;ds18b20.c: 184: write_eep(((num_dq - 1)*8) + i, temp_rom[i]);
  3677  00129C  D813               	call	PL34	;call to abstracted procedure
  3678  00129E  50DF               	movf	indf2,w,c
  3679  0012A0  6E31               	movwf	write_eep@data^0,c
  3680  0012A2  5040               	movf	ds18b20_readrom@num_dq^0,w,c
  3681  0012A4  0D08               	mullw	8
  3682  0012A6  50F3               	movf	243,w,c
  3683  0012A8  2441               	addwf	ds18b20_readrom@i^0,w,c
  3684  0012AA  0FF8               	addlw	248
  3685  0012AC  ECAA  F00A         	call	_write_eep
  3686  0012B0  2A41               	incf	ds18b20_readrom@i^0,f,c
  3687  0012B2  0E07               	movlw	7
  3688  0012B4  6441               	cpfsgt	ds18b20_readrom@i^0,c
  3689  0012B6  D7F2               	goto	l2746
  3690                           
  3691                           ;ds18b20.c: 185: };ds18b20.c: 186: Delay_ms(10);
  3692  0012B8  ECF8  F006         	call	PL58	;call to abstracted procedure
  3693  0012BC  ECBC  F00A         	call	_Delay_ms	;wreg free
  3694                           
  3695                           ;ds18b20.c: 187: return 1;
  3696  0012C0  0C01               	retlw	1
  3697  0012C2                     l2758:
  3698                           
  3699                           ;ds18b20.c: 188: };ds18b20.c: 189: return 0;
  3700  0012C2  0C00               	retlw	0	;funcret
  3701  0012C4                     __end_of_ds18b20_readrom:
  3702                           	callstack 0
  3703  0012C4                     PL34:
  3704                           	callstack 26
  3705  0012C4  5041               	movf	ds18b20_readrom@i^0,w,c
  3706  0012C6  0F38               	addlw	low ds18b20_readrom@temp_rom
  3707  0012C8  6ED9               	movwf	fsr2l,c
  3708  0012CA  6ADA               	clrf	fsr2h,c
  3709  0012CC  0012               	return	
  3710  0012CE                     __end_ofPL34:
  3711                           	callstack 0
  3712                           
  3713 ;; *************** function _write_eep *****************
  3714 ;; Defined at:
  3715 ;;		line 5 in file "eeprom.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  address         1    wreg     unsigned char 
  3718 ;;  data            1    3[COMRAM] unsigned char 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  address         1    4[COMRAM] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1
  3730 ;;      Params:         1       0       0
  3731 ;;      Locals:         1       0       0
  3732 ;;      Temps:          0       0       0
  3733 ;;      Totals:         2       0       0
  3734 ;;Total ram usage:        2 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    2
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_main
  3741 ;;		_ds18b20_readrom
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text7
  3746  001554                     __ptext7:
  3747                           	callstack 0
  3748  001554                     _write_eep:
  3749                           	callstack 28
  3750                           
  3751                           ;incstack = 0
  3752                           ;write_eep@address stored from wreg
  3753  001554  6E32               	movwf	write_eep@address^0,c
  3754  001556                     
  3755                           ;eeprom.c: 8: {}
  3756  001556  B2A6               	btfsc	166,1,c	;volsfr
  3757  001558  D7FE               	goto	l2396
  3758                           
  3759                           ;eeprom.c: 11: EEADR = address;
  3760  00155A  C032  FFA9         	movff	write_eep@address,4009	;volatile
  3761                           
  3762                           ;eeprom.c: 12: EEDATA = data;
  3763  00155E  C031  FFA8         	movff	write_eep@data,4008	;volatile
  3764                           
  3765                           ;eeprom.c: 13: EECON1bits.EEPGD = 0;
  3766  001562  9EA6               	bcf	166,7,c	;volsfr
  3767                           
  3768                           ;eeprom.c: 14: EECON1bits.CFGS = 0;
  3769  001564  9CA6               	bcf	166,6,c	;volsfr
  3770                           
  3771                           ;eeprom.c: 15: EECON1bits.WREN = 1;
  3772  001566  84A6               	bsf	166,2,c	;volsfr
  3773                           
  3774                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  3775  001568  9EF2               	bcf	242,7,c	;volatile
  3776                           
  3777                           ;eeprom.c: 18: EECON2 = 0x55;
  3778  00156A  0E55               	movlw	85
  3779  00156C  6EA7               	movwf	167,c	;volsfr
  3780                           
  3781                           ;eeprom.c: 19: EECON2 = 0xAA;
  3782  00156E  0EAA               	movlw	170
  3783  001570  6EA7               	movwf	167,c	;volsfr
  3784                           
  3785                           ;eeprom.c: 20: EECON1bits.WR = 1;
  3786  001572  82A6               	bsf	166,1,c	;volsfr
  3787                           
  3788                           ;eeprom.c: 22: INTCONbits.GIE = 1;
  3789  001574  8EF2               	bsf	242,7,c	;volatile
  3790  001576  0CAA               	retlw	170	;funcret
  3791  001578                     __end_of_write_eep:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _Delay_ms *****************
  3795 ;; Defined at:
  3796 ;;		line 614 in file "main.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  delay           2    3[COMRAM] unsigned int 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  i               2    6[COMRAM] unsigned int 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1
  3810 ;;      Params:         2       0       0
  3811 ;;      Locals:         2       0       0
  3812 ;;      Temps:          1       0       0
  3813 ;;      Totals:         5       0       0
  3814 ;;Total ram usage:        5 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    2
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_main
  3821 ;;		_ds18b20_readrom
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text8
  3826  001578                     __ptext8:
  3827                           	callstack 0
  3828  001578                     _Delay_ms:
  3829                           	callstack 27
  3830                           
  3831                           ;main.c: 615: for (uint16_t i = 0; i <= delay; i++)
  3832                           
  3833                           ;incstack = 0
  3834  001578  6A34               	clrf	Delay_ms@i^0,c
  3835  00157A  6A35               	clrf	(Delay_ms@i+1)^0,c
  3836  00157C  D009               	goto	l289
  3837  00157E                     l2392:
  3838                           
  3839                           ;main.c: 616: _delay((unsigned long)((1)*(8000000/4000.0)));
  3840  00157E  0E03               	movlw	3
  3841  001580  6E33               	movwf	??_Delay_ms^0,c
  3842  001582  0E98               	movlw	152
  3843  001584                     u2637:
  3844  001584  2EE8               	decfsz	wreg,f,c
  3845  001586  D7FE               	bra	u2637
  3846  001588  2E33               	decfsz	??_Delay_ms^0,f,c
  3847  00158A  D7FC               	bra	u2637
  3848  00158C  4A34               	infsnz	Delay_ms@i^0,f,c
  3849  00158E  2A35               	incf	(Delay_ms@i+1)^0,f,c
  3850  001590                     l289:
  3851  001590  5034               	movf	Delay_ms@i^0,w,c
  3852  001592  5C31               	subwf	Delay_ms@delay^0,w,c
  3853  001594  5035               	movf	(Delay_ms@i+1)^0,w,c
  3854  001596  5832               	subwfb	(Delay_ms@delay+1)^0,w,c
  3855  001598  E2F2               	bc	l2392
  3856  00159A  0012               	return		;funcret
  3857  00159C                     __end_of_Delay_ms:
  3858                           	callstack 0
  3859                           
  3860 ;; *************** function _ds18b20_readTemp *****************
  3861 ;; Defined at:
  3862 ;;		line 117 in file "ds18b20.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  time_flag       1   10[COMRAM] PTR unsigned char 
  3865 ;;		 -> time_flag(1), 
  3866 ;;  timer_val       1   11[COMRAM] PTR unsigned char 
  3867 ;;		 -> timer_val(1), 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  j               1   16[COMRAM] unsigned char 
  3870 ;;  temp            2   14[COMRAM] unsigned int 
  3871 ;;  i               1   17[COMRAM] unsigned char 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      unsigned char 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1
  3881 ;;      Params:         2       0       0
  3882 ;;      Locals:         4       0       0
  3883 ;;      Temps:          2       0       0
  3884 ;;      Totals:         8       0       0
  3885 ;;Total ram usage:        8 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    4
  3888 ;; This function calls:
  3889 ;;		_ds18b20_crc8
  3890 ;;		_ow_reset
  3891 ;;		_read_byte
  3892 ;;		_write_byte
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text9
  3899  000EF8                     __ptext9:
  3900                           	callstack 0
  3901  000EF8                     _ds18b20_readTemp:
  3902                           	callstack 26
  3903                           
  3904                           ;ds18b20.c: 120: uint8_t i;;ds18b20.c: 122: switch (*time_flag) {
  3905                           
  3906                           ;incstack = 0
  3907  000EF8  D05D               	goto	l2688
  3908  000EFA                     l2608:
  3909                           
  3910                           ;ds18b20.c: 124: if (!ow_reset())
  3911  000EFA  EC7F  F00A         	call	_ow_reset	;wreg free
  3912  000EFE  0900               	iorlw	0
  3913  000F00  A4D8               	btfss	status,2,c
  3914  000F02  0C00               	retlw	0
  3915                           
  3916                           ;ds18b20.c: 125: {;ds18b20.c: 126: write_byte(0xCC);
  3917  000F04  0ECC               	movlw	204
  3918  000F06  EC31  F00A         	call	_write_byte
  3919                           
  3920                           ;ds18b20.c: 127: write_byte(0x44);
  3921  000F0A  0E44               	movlw	68
  3922  000F0C  EC31  F00A         	call	_write_byte
  3923                           
  3924                           ;ds18b20.c: 128: *timer_val = 0;
  3925  000F10  5039               	movf	ds18b20_readTemp@timer_val^0,w,c
  3926  000F12  6ED9               	movwf	fsr2l,c
  3927  000F14  6ADA               	clrf	fsr2h,c
  3928  000F16  6ADF               	clrf	indf2,c
  3929                           
  3930                           ;ds18b20.c: 129: *time_flag = 2;
  3931  000F18  5038               	movf	ds18b20_readTemp@time_flag^0,w,c
  3932  000F1A  6ED9               	movwf	fsr2l,c
  3933  000F1C  6ADA               	clrf	fsr2h,c
  3934  000F1E  0E02               	movlw	2
  3935  000F20  6EDF               	movwf	indf2,c
  3936                           
  3937                           ;ds18b20.c: 130: T1CONbits.TMR1ON = 1;
  3938  000F22  80CD               	bsf	205,0,c	;volatile
  3939                           
  3940                           ;ds18b20.c: 132: return 0;
  3941  000F24  0C00               	retlw	0
  3942  000F26                     l365:
  3943                           
  3944                           ;ds18b20.c: 136: for (uint8_t j = 0; j < 2; j++) {
  3945  000F26  6A3E               	clrf	ds18b20_readTemp@j^0,c
  3946  000F28                     l2626:
  3947                           
  3948                           ;ds18b20.c: 137: ow_reset();
  3949  000F28  EC7F  F00A         	call	_ow_reset	;wreg free
  3950                           
  3951                           ;ds18b20.c: 138: write_byte(0x55);
  3952  000F2C  0E55               	movlw	85
  3953  000F2E  EC31  F00A         	call	_write_byte
  3954                           
  3955                           ;ds18b20.c: 139: for (i = 0; i < 8; i++) {
  3956  000F32  6A3F               	clrf	ds18b20_readTemp@i^0,c
  3957  000F34                     l2636:
  3958                           
  3959                           ;ds18b20.c: 140: write_byte(rom_dq[j][i]);
  3960  000F34  503E               	movf	ds18b20_readTemp@j^0,w,c
  3961  000F36  0D08               	mullw	8
  3962  000F38  50F3               	movf	243,w,c
  3963  000F3A  0F01               	addlw	low _rom_dq
  3964  000F3C  243F               	addwf	ds18b20_readTemp@i^0,w,c
  3965  000F3E  6ED9               	movwf	fsr2l,c
  3966  000F40  6ADA               	clrf	fsr2h,c
  3967  000F42  50DF               	movf	indf2,w,c
  3968  000F44  EC31  F00A         	call	_write_byte
  3969  000F48  2A3F               	incf	ds18b20_readTemp@i^0,f,c
  3970  000F4A  0E07               	movlw	7
  3971  000F4C  643F               	cpfsgt	ds18b20_readTemp@i^0,c
  3972  000F4E  D7F2               	goto	l2636
  3973                           
  3974                           ;ds18b20.c: 141: };ds18b20.c: 142: write_byte(0xBE);
  3975  000F50  0EBE               	movlw	190
  3976  000F52  EC31  F00A         	call	_write_byte
  3977                           
  3978                           ;ds18b20.c: 143: (INTCONbits.GIE = 0);
  3979  000F56  9EF2               	bcf	242,7,c	;volatile
  3980                           
  3981                           ;ds18b20.c: 144: for (i = 0; i < 9; i++)
  3982  000F58  6A3F               	clrf	ds18b20_readTemp@i^0,c
  3983  000F5A                     l2652:
  3984                           
  3985                           ;ds18b20.c: 145: {;ds18b20.c: 146: scratch[i] = read_byte();
  3986  000F5A  503F               	movf	ds18b20_readTemp@i^0,w,c
  3987  000F5C  0F23               	addlw	low _scratch
  3988  000F5E  6ED9               	movwf	fsr2l,c
  3989  000F60  6ADA               	clrf	fsr2h,c
  3990  000F62  EC16  F00A         	call	_read_byte	;wreg free
  3991  000F66  6EDF               	movwf	indf2,c
  3992  000F68  2A3F               	incf	ds18b20_readTemp@i^0,f,c
  3993  000F6A  0E08               	movlw	8
  3994  000F6C  643F               	cpfsgt	ds18b20_readTemp@i^0,c
  3995  000F6E  D7F5               	goto	l2652
  3996                           
  3997                           ;ds18b20.c: 147: };ds18b20.c: 149: if (!(ds18b20_crc8(scratch, 9))) {
  3998  000F70  0E23               	movlw	low _scratch
  3999  000F72  6E31               	movwf	ds18b20_crc8@data_in^0,c
  4000  000F74  0E09               	movlw	9
  4001  000F76  6E32               	movwf	ds18b20_crc8@num_bytes^0,c
  4002  000F78  EC8E  F009         	call	_ds18b20_crc8	;wreg free
  4003  000F7C  0900               	iorlw	0
  4004  000F7E  E10C               	bnz	l2664
  4005                           
  4006                           ;ds18b20.c: 150: temp = (((uint16_t) scratch[1]) << 8) | ((uint16_t) scratch[0]);
  4007  000F80  5024               	movf	(_scratch+1)^0,w,c
  4008  000F82  6E3A               	movwf	??_ds18b20_readTemp^0,c
  4009  000F84  5023               	movf	_scratch^0,w,c
  4010  000F86  6E3C               	movwf	ds18b20_readTemp@temp^0,c
  4011  000F88  C03A  F03D         	movff	??_ds18b20_readTemp,ds18b20_readTemp@temp+1
  4012                           
  4013                           ;ds18b20.c: 151: temp_ready[j] = temp;
  4014  000F8C  D81C               	call	PL24	;call to abstracted procedure
  4015  000F8E  C03C  FFDE         	movff	ds18b20_readTemp@temp,postinc2
  4016  000F92  C03D  FFDD         	movff	ds18b20_readTemp@temp+1,postdec2
  4017                           
  4018                           ;ds18b20.c: 152: }else
  4019  000F96  D004               	goto	l2666
  4020  000F98                     l2664:
  4021                           
  4022                           ;ds18b20.c: 153: temp_ready[j] = 32767;
  4023  000F98  D816               	call	PL24	;call to abstracted procedure
  4024  000F9A  68DE               	setf	postinc2,c
  4025  000F9C  0E7F               	movlw	127
  4026  000F9E  6EDD               	movwf	postdec2,c
  4027  000FA0                     l2666:
  4028                           
  4029                           ;ds18b20.c: 154: (INTCONbits.GIE = 1);
  4030  000FA0  8EF2               	bsf	242,7,c	;volatile
  4031  000FA2  2A3E               	incf	ds18b20_readTemp@j^0,f,c
  4032  000FA4  0E01               	movlw	1
  4033  000FA6  643E               	cpfsgt	ds18b20_readTemp@j^0,c
  4034  000FA8  D7BF               	goto	l2626
  4035                           
  4036                           ;ds18b20.c: 155: };ds18b20.c: 156: *time_flag = 0;
  4037  000FAA  5038               	movf	ds18b20_readTemp@time_flag^0,w,c
  4038  000FAC  6ED9               	movwf	fsr2l,c
  4039  000FAE  6ADA               	clrf	fsr2h,c
  4040  000FB0  6ADF               	clrf	indf2,c
  4041                           
  4042                           ;ds18b20.c: 157: return 1;
  4043  000FB2  0C01               	retlw	1
  4044  000FB4                     l2688:
  4045  000FB4  5038               	movf	ds18b20_readTemp@time_flag^0,w,c
  4046  000FB6  6ED9               	movwf	fsr2l,c
  4047  000FB8  6ADA               	clrf	fsr2h,c
  4048  000FBA  50DF               	movf	indf2,w,c
  4049                           
  4050                           ; Switch size 1, requested type "space"
  4051                           ; Number of cases is 3, Range of values is 0 to 2
  4052                           ; switch strategies available:
  4053                           ; Name         Instructions Cycles
  4054                           ; simple_byte           10     6 (average)
  4055                           ;	Chosen strategy is simple_byte
  4056  000FBC  E09E               	bz	l2608
  4057  000FBE  0A01               	xorlw	1	; case 1
  4058  000FC0  E0B2               	bz	l365
  4059  000FC2  0A03               	xorlw	3	; case 2
  4060  000FC4  0C00               	retlw	0
  4061  000FC6                     __end_of_ds18b20_readTemp:
  4062                           	callstack 0
  4063  000FC6                     PL24:
  4064                           	callstack 26
  4065  000FC6  503E               	movf	ds18b20_readTemp@j^0,w,c
  4066  000FC8  0D02               	mullw	2
  4067  000FCA  50F3               	movf	243,w,c
  4068  000FCC  0F11               	addlw	low _temp_ready
  4069  000FCE  6ED9               	movwf	fsr2l,c
  4070  000FD0  6ADA               	clrf	fsr2h,c
  4071  000FD2  0012               	return	
  4072  000FD4                     __end_ofPL24:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _read_byte *****************
  4076 ;; Defined at:
  4077 ;;		line 50 in file "onewire.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  i               1    6[COMRAM] unsigned char 
  4082 ;;  val             1    5[COMRAM] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      unsigned char 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1
  4092 ;;      Params:         0       0       0
  4093 ;;      Locals:         2       0       0
  4094 ;;      Temps:          2       0       0
  4095 ;;      Totals:         4       0       0
  4096 ;;Total ram usage:        4 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:    3
  4099 ;; This function calls:
  4100 ;;		_read_bit
  4101 ;; This function is called by:
  4102 ;;		_ds18b20_readTemp
  4103 ;;		_ds18b20_readrom
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text10
  4108  00142C                     __ptext10:
  4109                           	callstack 0
  4110  00142C                     _read_byte:
  4111                           	callstack 26
  4112                           
  4113                           ;onewire.c: 52: uint8_t i;;onewire.c: 53: uint8_t val = 0;
  4114                           
  4115                           ;incstack = 0
  4116  00142C  6A33               	clrf	read_byte@val^0,c
  4117                           
  4118                           ;onewire.c: 55: for(i=0;i<8;i++)
  4119  00142E  6A34               	clrf	read_byte@i^0,c
  4120  001430                     l1474:
  4121                           
  4122                           ;onewire.c: 56: {;onewire.c: 57: if(read_bit()) val |= (0x01 << i);
  4123  001430  EC1B  F00B         	call	_read_bit	;wreg free
  4124  001434  0900               	iorlw	0
  4125  001436  E00C               	bz	l1478
  4126  001438  C034  F031         	movff	read_byte@i,??_read_byte
  4127  00143C  0E01               	movlw	1
  4128  00143E  6E32               	movwf	(??_read_byte+1)^0,c
  4129  001440  2A31               	incf	??_read_byte^0,f,c
  4130  001442  D002               	goto	u234
  4131  001444                     u235:
  4132  001444  90D8               	bcf	status,0,c
  4133  001446  3632               	rlcf	(??_read_byte+1)^0,f,c
  4134  001448                     u234:
  4135  001448  2E31               	decfsz	??_read_byte^0,f,c
  4136  00144A  D7FC               	goto	u235
  4137  00144C  5032               	movf	(??_read_byte+1)^0,w,c
  4138  00144E  1233               	iorwf	read_byte@val^0,f,c
  4139  001450                     l1478:
  4140                           
  4141                           ;onewire.c: 58: _delay((unsigned long)((120)*(8000000/4000000.0)));
  4142  001450  0E50               	movlw	80
  4143  001452                     u2647:
  4144  001452  2EE8               	decfsz	wreg,f,c
  4145  001454  D7FE               	bra	u2647
  4146  001456  2A34               	incf	read_byte@i^0,f,c
  4147  001458  0E07               	movlw	7
  4148  00145A  6434               	cpfsgt	read_byte@i^0,c
  4149  00145C  D7E9               	goto	l1474
  4150                           
  4151                           ;onewire.c: 59: };onewire.c: 61: return val;
  4152  00145E  5033               	movf	read_byte@val^0,w,c
  4153  001460  0012               	return		;funcret
  4154  001462                     __end_of_read_byte:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _read_bit *****************
  4158 ;; Defined at:
  4159 ;;		line 22 in file "onewire.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      unsigned char 
  4166 ;; Registers used:
  4167 ;;		wreg
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1
  4173 ;;      Params:         0       0       0
  4174 ;;      Locals:         0       0       0
  4175 ;;      Temps:          0       0       0
  4176 ;;      Totals:         0       0       0
  4177 ;;Total ram usage:        0 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    2
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_read_byte
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text11
  4188  001636                     __ptext11:
  4189                           	callstack 0
  4190  001636                     _read_bit:
  4191                           	callstack 26
  4192                           
  4193                           ;onewire.c: 24: PORTAbits.RA6 = 0;
  4194                           
  4195                           ;incstack = 0
  4196  001636  9C80               	bcf	128,6,c	;volatile
  4197                           
  4198                           ;onewire.c: 25: TRISAbits.TRISA6 = 0;
  4199  001638  9C92               	bcf	146,6,c	;volatile
  4200                           
  4201                           ;onewire.c: 26: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4202  00163A  D000               	nop2		;2 cycle nop
  4203                           
  4204                           ;onewire.c: 27: PORTAbits.RA6 = 1;
  4205  00163C  8C80               	bsf	128,6,c	;volatile
  4206                           
  4207                           ;onewire.c: 28: TRISAbits.TRISA6 = 1;
  4208  00163E  8C92               	bsf	146,6,c	;volatile
  4209                           
  4210                           ;onewire.c: 29: _delay((unsigned long)((6)*(8000000/4000000.0)));
  4211  001640  0E04               	movlw	4
  4212  001642                     u2657:
  4213  001642  2EE8               	decfsz	wreg,f,c
  4214  001644  D7FE               	bra	u2657
  4215                           
  4216                           ;onewire.c: 30: return(PORTAbits.RA6);
  4217  001646  BC80               	btfsc	128,6,c	;volatile
  4218  001648  0C01               	retlw	1
  4219  00164A  0C00               	retlw	0	;funcret
  4220  00164C                     __end_of_read_bit:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _ds18b20_crc8 *****************
  4224 ;; Defined at:
  4225 ;;		line 220 in file "ds18b20.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  data_in         1    3[COMRAM] PTR unsigned char 
  4228 ;;		 -> ds18b20_readrom@temp_rom(8), scratch(9), 
  4229 ;;  num_bytes       1    4[COMRAM] unsigned char 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  crc             1    9[COMRAM] unsigned char 
  4232 ;;  loop_count      1    8[COMRAM] unsigned char 
  4233 ;;  feedback_bit    1    7[COMRAM] unsigned char 
  4234 ;;  data            1    6[COMRAM] unsigned char 
  4235 ;;  bit_counter     1    5[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      unsigned char 
  4238 ;; Registers used:
  4239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1
  4245 ;;      Params:         2       0       0
  4246 ;;      Locals:         5       0       0
  4247 ;;      Temps:          0       0       0
  4248 ;;      Totals:         7       0       0
  4249 ;;Total ram usage:        7 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    2
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_ds18b20_readTemp
  4256 ;;		_ds18b20_readrom
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text12
  4261  00131C                     __ptext12:
  4262                           	callstack 0
  4263  00131C                     _ds18b20_crc8:
  4264                           	callstack 27
  4265                           
  4266                           ;ds18b20.c: 221: uint8_t crc;;ds18b20.c: 222: uint8_t loop_count;;ds18b20.c: 223: uint8_
      +                          t bit_counter;;ds18b20.c: 224: uint8_t data;;ds18b20.c: 225: uint8_t feedback_bit;;ds18b
      +                          20.c: 227: crc = 0x00;
  4267                           
  4268                           ;incstack = 0
  4269  00131C  6A37               	clrf	ds18b20_crc8@crc^0,c
  4270                           
  4271                           ;ds18b20.c: 229: for (loop_count = 0; loop_count != num_bytes; loop_count++) {
  4272  00131E  6A36               	clrf	ds18b20_crc8@loop_count^0,c
  4273  001320  D01D               	goto	l2510
  4274  001322                     l2490:
  4275                           
  4276                           ;ds18b20.c: 230: data = data_in[loop_count];
  4277  001322  5031               	movf	ds18b20_crc8@data_in^0,w,c
  4278  001324  2436               	addwf	ds18b20_crc8@loop_count^0,w,c
  4279  001326  6ED9               	movwf	fsr2l,c
  4280  001328  6ADA               	clrf	fsr2h,c
  4281  00132A  50DF               	movf	indf2,w,c
  4282  00132C  6E34               	movwf	ds18b20_crc8@data^0,c
  4283                           
  4284                           ;ds18b20.c: 232: bit_counter = 8;
  4285  00132E  0E08               	movlw	8
  4286  001330  6E33               	movwf	ds18b20_crc8@bit_counter^0,c
  4287  001332                     l2494:
  4288                           
  4289                           ;ds18b20.c: 234: feedback_bit = (crc ^ data) & 0x01;
  4290  001332  5037               	movf	ds18b20_crc8@crc^0,w,c
  4291  001334  1834               	xorwf	ds18b20_crc8@data^0,w,c
  4292  001336  0B01               	andlw	1
  4293  001338  6E35               	movwf	ds18b20_crc8@feedback_bit^0,c
  4294                           
  4295                           ;ds18b20.c: 236: if (feedback_bit == 0x01) {
  4296  00133A  0435               	decf	ds18b20_crc8@feedback_bit^0,w,c
  4297  00133C  E102               	bnz	l394
  4298                           
  4299                           ;ds18b20.c: 237: crc = crc ^ 0x18;
  4300  00133E  0E18               	movlw	24
  4301  001340  1A37               	xorwf	ds18b20_crc8@crc^0,f,c
  4302  001342                     l394:
  4303                           
  4304                           ;ds18b20.c: 238: };ds18b20.c: 239: crc = (crc >> 1) & 0x7F;
  4305  001342  90D8               	bcf	status,0,c
  4306  001344  3037               	rrcf	ds18b20_crc8@crc^0,w,c
  4307  001346  0B7F               	andlw	127
  4308  001348  6E37               	movwf	ds18b20_crc8@crc^0,c
  4309                           
  4310                           ;ds18b20.c: 240: if (feedback_bit == 0x01) {
  4311  00134A  0435               	decf	ds18b20_crc8@feedback_bit^0,w,c
  4312  00134C  E101               	bnz	l2502
  4313                           
  4314                           ;ds18b20.c: 241: crc = crc | 0x80;
  4315  00134E  8E37               	bsf	ds18b20_crc8@crc^0,7,c
  4316  001350                     l2502:
  4317                           
  4318                           ;ds18b20.c: 242: };ds18b20.c: 244: data = data >> 1;
  4319  001350  90D8               	bcf	status,0,c
  4320  001352  3234               	rrcf	ds18b20_crc8@data^0,f,c
  4321                           
  4322                           ;ds18b20.c: 245: bit_counter--;
  4323  001354  0633               	decf	ds18b20_crc8@bit_counter^0,f,c
  4324                           
  4325                           ;ds18b20.c: 247: } while (bit_counter > 0);
  4326  001356  5033               	movf	ds18b20_crc8@bit_counter^0,w,c
  4327  001358  E1EC               	bnz	l2494
  4328  00135A  2A36               	incf	ds18b20_crc8@loop_count^0,f,c
  4329  00135C                     l2510:
  4330  00135C  5032               	movf	ds18b20_crc8@num_bytes^0,w,c
  4331  00135E  1836               	xorwf	ds18b20_crc8@loop_count^0,w,c
  4332  001360  E1E0               	bnz	l2490
  4333                           
  4334                           ;ds18b20.c: 248: };ds18b20.c: 250: return crc;
  4335  001362  5037               	movf	ds18b20_crc8@crc^0,w,c
  4336  001364  0012               	return		;funcret
  4337  001366                     __end_of_ds18b20_crc8:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function _ds18b20_get_temp *****************
  4341 ;; Defined at:
  4342 ;;		line 197 in file "ds18b20.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  num_dq          1    wreg     unsigned char 
  4345 ;;  minus           1    3[COMRAM] PTR unsigned char 
  4346 ;;		 -> minus_2(1), minus_1(1), 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  num_dq          1    5[COMRAM] unsigned char 
  4349 ;;  temp            2    7[COMRAM] unsigned int 
  4350 ;;  tmp             1    6[COMRAM] unsigned char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  2    3[COMRAM] unsigned int 
  4353 ;; Registers used:
  4354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1
  4360 ;;      Params:         2       0       0
  4361 ;;      Locals:         4       0       0
  4362 ;;      Temps:          0       0       0
  4363 ;;      Totals:         6       0       0
  4364 ;;Total ram usage:        6 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:    2
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_main
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text13
  4375  00107C                     __ptext13:
  4376                           	callstack 0
  4377  00107C                     _ds18b20_get_temp:
  4378                           	callstack 28
  4379                           
  4380                           ;incstack = 0
  4381                           ;ds18b20_get_temp@num_dq stored from wreg
  4382  00107C  6E33               	movwf	ds18b20_get_temp@num_dq^0,c
  4383                           
  4384                           ;ds18b20.c: 198: uint16_t temp = temp_ready[num_dq-1];
  4385  00107E  5033               	movf	ds18b20_get_temp@num_dq^0,w,c
  4386  001080  0D02               	mullw	2
  4387  001082  50F3               	movf	243,w,c
  4388  001084  0F0F               	addlw	low (_temp_ready+254)
  4389  001086  6ED9               	movwf	fsr2l,c
  4390  001088  6ADA               	clrf	fsr2h,c
  4391  00108A  CFDE F035          	movff	postinc2,ds18b20_get_temp@temp
  4392  00108E  CFDD F036          	movff	postdec2,ds18b20_get_temp@temp+1
  4393                           
  4394                           ;ds18b20.c: 199: uint8_t tmp;;ds18b20.c: 200: *minus = '+';
  4395  001092  5031               	movf	ds18b20_get_temp@minus^0,w,c
  4396  001094  6ED9               	movwf	fsr2l,c
  4397  001096  6ADA               	clrf	fsr2h,c
  4398  001098  0E2B               	movlw	43
  4399  00109A  6EDF               	movwf	indf2,c
  4400                           
  4401                           ;ds18b20.c: 201: if(temp == 32767)
  4402  00109C  2835               	incf	ds18b20_get_temp@temp^0,w,c
  4403  00109E  E108               	bnz	l386
  4404  0010A0  0E7F               	movlw	127
  4405  0010A2  1836               	xorwf	(ds18b20_get_temp@temp+1)^0,w,c
  4406  0010A4  E105               	bnz	l386
  4407  0010A6                     u1690:
  4408                           
  4409                           ;ds18b20.c: 202: return temp;
  4410  0010A6  C035  F031         	movff	ds18b20_get_temp@temp,?_ds18b20_get_temp
  4411  0010AA  C036  F032         	movff	ds18b20_get_temp@temp+1,?_ds18b20_get_temp+1
  4412  0010AE  0012               	return	
  4413  0010B0                     l386:
  4414                           
  4415                           ;ds18b20.c: 203: if (temp & 0x8000) {
  4416  0010B0  AE36               	btfss	(ds18b20_get_temp@temp+1)^0,7,c
  4417  0010B2  D009               	goto	l2706
  4418                           
  4419                           ;ds18b20.c: 204: temp = -temp;
  4420  0010B4  6C35               	negf	ds18b20_get_temp@temp^0,c
  4421  0010B6  1E36               	comf	(ds18b20_get_temp@temp+1)^0,f,c
  4422  0010B8  B0D8               	btfsc	status,0,c
  4423  0010BA  2A36               	incf	(ds18b20_get_temp@temp+1)^0,f,c
  4424                           
  4425                           ;ds18b20.c: 205: *minus = '-';
  4426  0010BC  5031               	movf	ds18b20_get_temp@minus^0,w,c
  4427  0010BE  6ED9               	movwf	fsr2l,c
  4428  0010C0  6ADA               	clrf	fsr2h,c
  4429  0010C2  0E2D               	movlw	45
  4430  0010C4  6EDF               	movwf	indf2,c
  4431  0010C6                     l2706:
  4432                           
  4433                           ;ds18b20.c: 206: };ds18b20.c: 208: tmp = temp & 0x0f;
  4434  0010C6  5035               	movf	ds18b20_get_temp@temp^0,w,c
  4435  0010C8  0B0F               	andlw	15
  4436  0010CA  6E34               	movwf	ds18b20_get_temp@tmp^0,c
  4437                           
  4438                           ;ds18b20.c: 209: tmp = fract[tmp];
  4439  0010CC  0EE7               	movlw	low _fract
  4440  0010CE  2434               	addwf	ds18b20_get_temp@tmp^0,w,c
  4441  0010D0  6EF6               	movwf	tblptrl,c
  4442  0010D2  6AF7               	clrf	tblptrh,c
  4443  0010D4  0E1E               	movlw	high _fract
  4444  0010D6  22F7               	addwfc	tblptrh,f,c
  4445  0010D8                     	if	0	;There are less than 3 active tblptr bytes
  4446  0010D8                     	endif
  4447  0010D8  0008               	tblrd		*
  4448  0010DA  CFF5 F034          	movff	tablat,ds18b20_get_temp@tmp
  4449                           
  4450                           ;ds18b20.c: 210: temp = temp >> 4;
  4451  0010DE  3A35               	swapf	ds18b20_get_temp@temp^0,f,c
  4452  0010E0  3A36               	swapf	(ds18b20_get_temp@temp+1)^0,f,c
  4453  0010E2  0E0F               	movlw	15
  4454  0010E4  1635               	andwf	ds18b20_get_temp@temp^0,f,c
  4455  0010E6  5036               	movf	(ds18b20_get_temp@temp+1)^0,w,c
  4456  0010E8  0BF0               	andlw	240
  4457  0010EA  1235               	iorwf	ds18b20_get_temp@temp^0,f,c
  4458  0010EC  0E0F               	movlw	15
  4459  0010EE  1636               	andwf	(ds18b20_get_temp@temp+1)^0,f,c
  4460                           
  4461                           ;ds18b20.c: 211: temp = (temp & 0x00ff) * 10;
  4462  0010F0  5035               	movf	ds18b20_get_temp@temp^0,w,c
  4463  0010F2  0D0A               	mullw	10
  4464  0010F4  CFF3 F035          	movff	prodl,ds18b20_get_temp@temp
  4465  0010F8  CFF4 F036          	movff	prodh,ds18b20_get_temp@temp+1
  4466                           
  4467                           ;ds18b20.c: 212: temp = temp + tmp;
  4468  0010FC  5034               	movf	ds18b20_get_temp@tmp^0,w,c
  4469  0010FE  2635               	addwf	ds18b20_get_temp@temp^0,f,c
  4470  001100  0E00               	movlw	0
  4471  001102  2236               	addwfc	(ds18b20_get_temp@temp+1)^0,f,c
  4472  001104  D7D0               	goto	u1690
  4473  001106                     __end_of_ds18b20_get_temp:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function ___lwmod *****************
  4477 ;; Defined at:
  4478 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  dividend        2   10[COMRAM] unsigned int 
  4481 ;;  divisor         2   12[COMRAM] unsigned int 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  counter         1   14[COMRAM] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  2   10[COMRAM] unsigned int 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1
  4493 ;;      Params:         4       0       0
  4494 ;;      Locals:         1       0       0
  4495 ;;      Temps:          0       0       0
  4496 ;;      Totals:         5       0       0
  4497 ;;Total ram usage:        5 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    2
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_main
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text14
  4508  0013EE                     __ptext14:
  4509                           	callstack 0
  4510  0013EE                     ___lwmod:
  4511                           	callstack 28
  4512                           
  4513                           ;incstack = 0
  4514  0013EE  503A               	movf	___lwmod@divisor^0,w,c
  4515  0013F0  103B               	iorwf	(___lwmod@divisor+1)^0,w,c
  4516  0013F2  E017               	bz	l1030
  4517  0013F4  0E01               	movlw	1
  4518  0013F6  6E3C               	movwf	___lwmod@counter^0,c
  4519  0013F8  D004               	goto	l2834
  4520  0013FA                     l2832:
  4521  0013FA  90D8               	bcf	status,0,c
  4522  0013FC  363A               	rlcf	___lwmod@divisor^0,f,c
  4523  0013FE  363B               	rlcf	(___lwmod@divisor+1)^0,f,c
  4524  001400  2A3C               	incf	___lwmod@counter^0,f,c
  4525  001402                     l2834:
  4526  001402  AE3B               	btfss	(___lwmod@divisor+1)^0,7,c
  4527  001404  D7FA               	goto	l2832
  4528  001406                     u1830:
  4529  001406  503A               	movf	___lwmod@divisor^0,w,c
  4530  001408  5C38               	subwf	___lwmod@dividend^0,w,c
  4531  00140A  503B               	movf	(___lwmod@divisor+1)^0,w,c
  4532  00140C  5839               	subwfb	(___lwmod@dividend+1)^0,w,c
  4533  00140E  E304               	bnc	l2840
  4534  001410  503A               	movf	___lwmod@divisor^0,w,c
  4535  001412  5E38               	subwf	___lwmod@dividend^0,f,c
  4536  001414  503B               	movf	(___lwmod@divisor+1)^0,w,c
  4537  001416  5A39               	subwfb	(___lwmod@dividend+1)^0,f,c
  4538  001418                     l2840:
  4539  001418  90D8               	bcf	status,0,c
  4540  00141A  323B               	rrcf	(___lwmod@divisor+1)^0,f,c
  4541  00141C  323A               	rrcf	___lwmod@divisor^0,f,c
  4542  00141E  2E3C               	decfsz	___lwmod@counter^0,f,c
  4543  001420  D7F2               	goto	u1830
  4544  001422                     l1030:
  4545  001422  C038  F038         	movff	___lwmod@dividend,?___lwmod
  4546  001426  C039  F039         	movff	___lwmod@dividend+1,?___lwmod+1
  4547  00142A  0012               	return		;funcret
  4548  00142C                     __end_of___lwmod:
  4549                           	callstack 0
  4550                           
  4551 ;; *************** function ___lwdiv *****************
  4552 ;; Defined at:
  4553 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  dividend        2    3[COMRAM] unsigned int 
  4556 ;;  divisor         2    5[COMRAM] unsigned int 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  quotient        2    7[COMRAM] unsigned int 
  4559 ;;  counter         1    9[COMRAM] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  2    3[COMRAM] unsigned int 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1
  4569 ;;      Params:         4       0       0
  4570 ;;      Locals:         3       0       0
  4571 ;;      Temps:          0       0       0
  4572 ;;      Totals:         7       0       0
  4573 ;;Total ram usage:        7 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    2
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_main
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text15
  4584  001366                     __ptext15:
  4585                           	callstack 0
  4586  001366                     ___lwdiv:
  4587                           	callstack 28
  4588                           
  4589                           ;incstack = 0
  4590  001366  6A35               	clrf	___lwdiv@quotient^0,c
  4591  001368  6A36               	clrf	(___lwdiv@quotient+1)^0,c
  4592  00136A  5033               	movf	___lwdiv@divisor^0,w,c
  4593  00136C  1034               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4594  00136E  E01B               	bz	l1020
  4595  001370  0E01               	movlw	1
  4596  001372  6E37               	movwf	___lwdiv@counter^0,c
  4597  001374  D004               	goto	l2814
  4598  001376                     l2812:
  4599  001376  90D8               	bcf	status,0,c
  4600  001378  3633               	rlcf	___lwdiv@divisor^0,f,c
  4601  00137A  3634               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4602  00137C  2A37               	incf	___lwdiv@counter^0,f,c
  4603  00137E                     l2814:
  4604  00137E  AE34               	btfss	(___lwdiv@divisor+1)^0,7,c
  4605  001380  D7FA               	goto	l2812
  4606  001382                     u1800:
  4607  001382  90D8               	bcf	status,0,c
  4608  001384  3635               	rlcf	___lwdiv@quotient^0,f,c
  4609  001386  3636               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4610  001388  5033               	movf	___lwdiv@divisor^0,w,c
  4611  00138A  5C31               	subwf	___lwdiv@dividend^0,w,c
  4612  00138C  5034               	movf	(___lwdiv@divisor+1)^0,w,c
  4613  00138E  5832               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4614  001390  E305               	bnc	l2824
  4615  001392  5033               	movf	___lwdiv@divisor^0,w,c
  4616  001394  5E31               	subwf	___lwdiv@dividend^0,f,c
  4617  001396  5034               	movf	(___lwdiv@divisor+1)^0,w,c
  4618  001398  5A32               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4619  00139A  8035               	bsf	___lwdiv@quotient^0,0,c
  4620  00139C                     l2824:
  4621  00139C  90D8               	bcf	status,0,c
  4622  00139E  3234               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4623  0013A0  3233               	rrcf	___lwdiv@divisor^0,f,c
  4624  0013A2  2E37               	decfsz	___lwdiv@counter^0,f,c
  4625  0013A4  D7EE               	goto	u1800
  4626  0013A6                     l1020:
  4627  0013A6  C035  F031         	movff	___lwdiv@quotient,?___lwdiv
  4628  0013AA  C036  F032         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4629  0013AE  0012               	return		;funcret
  4630  0013B0                     __end_of___lwdiv:
  4631                           	callstack 0
  4632                           
  4633 ;; *************** function ___lbmod *****************
  4634 ;; Defined at:
  4635 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.30\pic\sources\c90\common\lbmod.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  dividend        1    wreg     unsigned char 
  4638 ;;  divisor         1    7[COMRAM] unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  dividend        1    8[COMRAM] unsigned char 
  4641 ;;  rem             1   10[COMRAM] unsigned char 
  4642 ;;  counter         1    9[COMRAM] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      unsigned char 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1
  4652 ;;      Params:         1       0       0
  4653 ;;      Locals:         3       0       0
  4654 ;;      Temps:          0       0       0
  4655 ;;      Totals:         4       0       0
  4656 ;;Total ram usage:        4 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    2
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_main
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text16
  4667  00152E                     __ptext16:
  4668                           	callstack 0
  4669  00152E                     ___lbmod:
  4670                           	callstack 28
  4671                           
  4672                           ;incstack = 0
  4673                           ;___lbmod@dividend stored from wreg
  4674  00152E  6E36               	movwf	___lbmod@dividend^0,c
  4675  001530  0E08               	movlw	8
  4676  001532  6E37               	movwf	___lbmod@counter^0,c
  4677  001534  6A38               	clrf	___lbmod@rem^0,c
  4678  001536                     l2792:
  4679  001536  90D8               	bcf	status,0,c
  4680  001538  3436               	rlcf	___lbmod@dividend^0,w,c
  4681  00153A  3438               	rlcf	___lbmod@rem^0,w,c
  4682  00153C  6E38               	movwf	___lbmod@rem^0,c
  4683  00153E  90D8               	bcf	status,0,c
  4684  001540  3636               	rlcf	___lbmod@dividend^0,f,c
  4685  001542  5035               	movf	___lbmod@divisor^0,w,c
  4686  001544  5C38               	subwf	___lbmod@rem^0,w,c
  4687  001546  E302               	bnc	l2800
  4688  001548  5035               	movf	___lbmod@divisor^0,w,c
  4689  00154A  5E38               	subwf	___lbmod@rem^0,f,c
  4690  00154C                     l2800:
  4691  00154C  2E37               	decfsz	___lbmod@counter^0,f,c
  4692  00154E  D7F3               	goto	l2792
  4693  001550  5038               	movf	___lbmod@rem^0,w,c
  4694  001552  0012               	return		;funcret
  4695  001554                     __end_of___lbmod:
  4696                           	callstack 0
  4697                           
  4698 ;; *************** function ___lbdiv *****************
  4699 ;; Defined at:
  4700 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.30\pic\sources\c90\common\lbdiv.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  dividend        1    wreg     unsigned char 
  4703 ;;  divisor         1    3[COMRAM] unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  dividend        1    4[COMRAM] unsigned char 
  4706 ;;  quotient        1    6[COMRAM] unsigned char 
  4707 ;;  counter         1    5[COMRAM] unsigned char 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      unsigned char 
  4710 ;; Registers used:
  4711 ;;		wreg, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1
  4717 ;;      Params:         1       0       0
  4718 ;;      Locals:         3       0       0
  4719 ;;      Temps:          0       0       0
  4720 ;;      Totals:         4       0       0
  4721 ;;Total ram usage:        4 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; Hardware stack levels required when called:    2
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_main
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text17
  4732  001498                     __ptext17:
  4733                           	callstack 0
  4734  001498                     ___lbdiv:
  4735                           	callstack 28
  4736                           
  4737                           ;incstack = 0
  4738                           ;___lbdiv@dividend stored from wreg
  4739  001498  6E32               	movwf	___lbdiv@dividend^0,c
  4740  00149A  6A34               	clrf	___lbdiv@quotient^0,c
  4741  00149C  5031               	movf	___lbdiv@divisor^0,w,c
  4742  00149E  E014               	bz	l2784
  4743  0014A0  0E01               	movlw	1
  4744  0014A2  6E33               	movwf	___lbdiv@counter^0,c
  4745  0014A4  D003               	goto	l2772
  4746  0014A6                     l2768:
  4747  0014A6  90D8               	bcf	status,0,c
  4748  0014A8  3631               	rlcf	___lbdiv@divisor^0,f,c
  4749  0014AA  2A33               	incf	___lbdiv@counter^0,f,c
  4750  0014AC                     l2772:
  4751  0014AC  AE31               	btfss	___lbdiv@divisor^0,7,c
  4752  0014AE  D7FB               	goto	l2768
  4753  0014B0                     u1760:
  4754  0014B0  90D8               	bcf	status,0,c
  4755  0014B2  3634               	rlcf	___lbdiv@quotient^0,f,c
  4756  0014B4  5031               	movf	___lbdiv@divisor^0,w,c
  4757  0014B6  5C32               	subwf	___lbdiv@dividend^0,w,c
  4758  0014B8  E303               	bnc	l2780
  4759  0014BA  5031               	movf	___lbdiv@divisor^0,w,c
  4760  0014BC  5E32               	subwf	___lbdiv@dividend^0,f,c
  4761  0014BE  8034               	bsf	___lbdiv@quotient^0,0,c
  4762  0014C0                     l2780:
  4763  0014C0  90D8               	bcf	status,0,c
  4764  0014C2  3231               	rrcf	___lbdiv@divisor^0,f,c
  4765  0014C4  2E33               	decfsz	___lbdiv@counter^0,f,c
  4766  0014C6  D7F4               	goto	u1760
  4767  0014C8                     l2784:
  4768  0014C8  5034               	movf	___lbdiv@quotient^0,w,c
  4769  0014CA  0012               	return		;funcret
  4770  0014CC                     __end_of___lbdiv:
  4771                           	callstack 0
  4772                           
  4773 ;; *************** function _Main_init *****************
  4774 ;; Defined at:
  4775 ;;		line 561 in file "main.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1
  4789 ;;      Params:         0       0       0
  4790 ;;      Locals:         0       0       0
  4791 ;;      Temps:          0       0       0
  4792 ;;      Totals:         0       0       0
  4793 ;;Total ram usage:        0 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    6
  4796 ;; This function calls:
  4797 ;;		_cgrom_char
  4798 ;;		_initLCD
  4799 ;;		_init_ds18b20
  4800 ;; This function is called by:
  4801 ;;		_main
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text18
  4806  001180                     __ptext18:
  4807                           	callstack 0
  4808  001180                     _Main_init:
  4809                           	callstack 24
  4810                           
  4811                           ;main.c: 564: PORTA = 0;
  4812                           
  4813                           ;incstack = 0
  4814  001180  6A80               	clrf	128,c	;volatile
  4815                           
  4816                           ;main.c: 565: LATA = 0;
  4817  001182  6A89               	clrf	137,c	;volatile
  4818                           
  4819                           ;main.c: 566: TRISA = 0;
  4820  001184  6A92               	clrf	146,c	;volatile
  4821                           
  4822                           ;main.c: 567: PORTB = 0;
  4823  001186  6A81               	clrf	129,c	;volatile
  4824                           
  4825                           ;main.c: 568: LATB = 0;
  4826  001188  6A8A               	clrf	138,c	;volatile
  4827                           
  4828                           ;main.c: 569: TRISB = 0b00000110;
  4829  00118A  0E06               	movlw	6
  4830  00118C  6E93               	movwf	147,c	;volatile
  4831                           
  4832                           ;main.c: 570: PORTC = 0;
  4833  00118E  6A82               	clrf	130,c	;volatile
  4834                           
  4835                           ;main.c: 571: LATC = 0;
  4836  001190  6A8B               	clrf	139,c	;volatile
  4837                           
  4838                           ;main.c: 572: TRISC = 0;
  4839  001192  6A94               	clrf	148,c	;volatile
  4840                           
  4841                           ;main.c: 573: OSCCONbits.SCS0 = 0;
  4842  001194  90D3               	bcf	211,0,c	;volatile
  4843                           
  4844                           ;main.c: 574: OSCCONbits.SCS1 = 1;
  4845  001196  82D3               	bsf	211,1,c	;volatile
  4846                           
  4847                           ;main.c: 575: OSCCONbits.IRCF = 0b111;
  4848  001198  0E70               	movlw	112
  4849  00119A  12D3               	iorwf	211,f,c	;volatile
  4850                           
  4851                           ;main.c: 576: ADCON1bits.PCFG = 0b1111;
  4852  00119C  0E0F               	movlw	15
  4853  00119E  12C1               	iorwf	193,f,c	;volatile
  4854                           
  4855                           ;main.c: 578: PORTAbits.RA6 = 1;
  4856  0011A0  8C80               	bsf	128,6,c	;volatile
  4857                           
  4858                           ;main.c: 580: init_ds18b20();
  4859  0011A2  ECFA  F008         	call	_init_ds18b20	;wreg free
  4860                           
  4861                           ;main.c: 582: T1CON = 0b10000000;
  4862  0011A6  0E80               	movlw	128
  4863  0011A8  6ECD               	movwf	205,c	;volatile
  4864                           
  4865                           ;main.c: 584: TMR1H = ((unsigned char)(((15536)>>8)&0xFF));
  4866  0011AA  0E3C               	movlw	60
  4867  0011AC  6ECF               	movwf	207,c	;volatile
  4868                           
  4869                           ;main.c: 585: TMR1L = ((unsigned char)((15536)&0xFF));
  4870  0011AE  0EB0               	movlw	176
  4871  0011B0  6ECE               	movwf	206,c	;volatile
  4872                           
  4873                           ;main.c: 586: IPR1bits.TMR1IP = 1;
  4874  0011B2  809F               	bsf	159,0,c	;volatile
  4875                           
  4876                           ;main.c: 588: T0CONbits.T0PS = 0b000;
  4877  0011B4  0EF8               	movlw	-8
  4878  0011B6  16D5               	andwf	213,f,c	;volatile
  4879                           
  4880                           ;main.c: 589: T0CONbits.PSA = 1;
  4881  0011B8  86D5               	bsf	213,3,c	;volatile
  4882                           
  4883                           ;main.c: 590: T0CONbits.T08BIT = 0;
  4884  0011BA  9CD5               	bcf	213,6,c	;volatile
  4885                           
  4886                           ;main.c: 591: T0CONbits.T0CS = 0;
  4887  0011BC  9AD5               	bcf	213,5,c	;volatile
  4888                           
  4889                           ;main.c: 592: T0CONbits.TMR0ON = 1;
  4890  0011BE  8ED5               	bsf	213,7,c	;volatile
  4891                           
  4892                           ;main.c: 593: TMR0H = ((unsigned char)(((45536)>>8)&0xFF));
  4893  0011C0  0EB1               	movlw	177
  4894  0011C2  6ED7               	movwf	215,c	;volatile
  4895                           
  4896                           ;main.c: 594: TMR0L = ((unsigned char)((45536)&0xFF));
  4897  0011C4  0EE0               	movlw	224
  4898  0011C6  6ED6               	movwf	214,c	;volatile
  4899                           
  4900                           ;main.c: 595: INTCONbits.T0IE = 1;
  4901  0011C8  8AF2               	bsf	242,5,c	;volatile
  4902                           
  4903                           ;main.c: 596: INTCON2bits.T0IP = 0;
  4904  0011CA  94F1               	bcf	241,2,c	;volatile
  4905                           
  4906                           ;main.c: 597: INTCON2bits.RBPU = 0;
  4907  0011CC  9EF1               	bcf	241,7,c	;volatile
  4908                           
  4909                           ;main.c: 601: PIE1bits.TMR1IE = 1;
  4910  0011CE  809D               	bsf	157,0,c	;volatile
  4911                           
  4912                           ;main.c: 602: RCONbits.IPEN = 1;
  4913  0011D0  8ED0               	bsf	208,7,c	;volatile
  4914                           
  4915                           ;main.c: 603: INTCONbits.PEIE = 1;
  4916  0011D2  8CF2               	bsf	242,6,c	;volatile
  4917                           
  4918                           ;main.c: 604: INTCONbits.GIE = 1;
  4919  0011D4  8EF2               	bsf	242,7,c	;volatile
  4920                           
  4921                           ;main.c: 605: initLCD();
  4922  0011D6  EC00  F007         	call	_initLCD	;wreg free
  4923                           
  4924                           ;main.c: 606: cgrom_char(symbol_4, 1);
  4925  0011DA  0EF7               	movlw	low _symbol_4
  4926  0011DC  6E35               	movwf	cgrom_char@symbol^0,c
  4927  0011DE  0E1E               	movlw	high _symbol_4
  4928  0011E0  6E36               	movwf	(cgrom_char@symbol+1)^0,c
  4929  0011E2  0E01               	movlw	1
  4930  0011E4  6E37               	movwf	cgrom_char@address^0,c
  4931  0011E6  EC66  F00A         	call	_cgrom_char	;wreg free
  4932                           
  4933                           ;main.c: 607: LATCbits.LATC4 = 0;
  4934  0011EA  988B               	bcf	139,4,c	;volatile
  4935                           
  4936                           ;main.c: 608: snd_k = 0;
  4937  0011EC  9C45               	bcf	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  4938                           
  4939                           ;main.c: 609: snd_b = 0;
  4940  0011EE  9A45               	bcf	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  4941                           
  4942                           ;main.c: 610: snd_all = 0;
  4943  0011F0  9845               	bcf	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  4944  0011F2  0012               	return		;funcret
  4945  0011F4                     __end_of_Main_init:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function _init_ds18b20 *****************
  4949 ;; Defined at:
  4950 ;;		line 18 in file "ds18b20.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  i               1   12[COMRAM] unsigned char 
  4955 ;;  q               1   11[COMRAM] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1
  4965 ;;      Params:         0       0       0
  4966 ;;      Locals:         2       0       0
  4967 ;;      Temps:          2       0       0
  4968 ;;      Totals:         4       0       0
  4969 ;;Total ram usage:        4 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    4
  4972 ;; This function calls:
  4973 ;;		_ow_reset
  4974 ;;		_read_eep
  4975 ;;		_write_byte
  4976 ;; This function is called by:
  4977 ;;		_Main_init
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text19
  4982  0011F4                     __ptext19:
  4983                           	callstack 0
  4984  0011F4                     _init_ds18b20:
  4985                           	callstack 25
  4986                           
  4987                           ;ds18b20.c: 20: if (!ow_reset())
  4988                           
  4989                           ;incstack = 0
  4990  0011F4  EC7F  F00A         	call	_ow_reset	;wreg free
  4991  0011F8  0900               	iorlw	0
  4992  0011FA  E10F               	bnz	l2422
  4993                           
  4994                           ;ds18b20.c: 21: {;ds18b20.c: 23: write_byte(0xCC);
  4995  0011FC  0ECC               	movlw	204
  4996  0011FE  EC31  F00A         	call	_write_byte
  4997                           
  4998                           ;ds18b20.c: 24: write_byte(0x4E);
  4999  001202  0E4E               	movlw	78
  5000  001204  EC31  F00A         	call	_write_byte
  5001                           
  5002                           ;ds18b20.c: 25: write_byte(0x00);
  5003  001208  0E00               	movlw	0
  5004  00120A  EC31  F00A         	call	_write_byte
  5005                           
  5006                           ;ds18b20.c: 26: write_byte(0x00);
  5007  00120E  0E00               	movlw	0
  5008  001210  EC31  F00A         	call	_write_byte
  5009                           
  5010                           ;ds18b20.c: 27: write_byte(0x7F);
  5011  001214  0E7F               	movlw	127
  5012  001216  EC31  F00A         	call	_write_byte
  5013  00121A                     l2422:
  5014                           
  5015                           ;ds18b20.c: 28: };ds18b20.c: 30: for (uint8_t q = 0; q < 2; q++) {
  5016  00121A  6A39               	clrf	init_ds18b20@q^0,c
  5017  00121C                     l353:
  5018                           
  5019                           ;ds18b20.c: 31: for (uint8_t i = 0; i < 8; i++) {
  5020  00121C  6A3A               	clrf	init_ds18b20@i^0,c
  5021  00121E                     l2432:
  5022                           
  5023                           ;ds18b20.c: 32: rom_dq[q][i] = read_eep((q*8) + i);
  5024  00121E  5039               	movf	init_ds18b20@q^0,w,c
  5025  001220  0D08               	mullw	8
  5026  001222  50F3               	movf	243,w,c
  5027  001224  0F01               	addlw	low _rom_dq
  5028  001226  243A               	addwf	init_ds18b20@i^0,w,c
  5029  001228  6ED9               	movwf	fsr2l,c
  5030  00122A  6ADA               	clrf	fsr2h,c
  5031  00122C  5039               	movf	init_ds18b20@q^0,w,c
  5032  00122E  6E37               	movwf	??_init_ds18b20^0,c
  5033  001230  6A38               	clrf	(??_init_ds18b20+1)^0,c
  5034  001232  90D8               	bcf	status,0,c
  5035  001234  3637               	rlcf	??_init_ds18b20^0,f,c
  5036  001236  3638               	rlcf	(??_init_ds18b20+1)^0,f,c
  5037  001238  90D8               	bcf	status,0,c
  5038  00123A  3637               	rlcf	??_init_ds18b20^0,f,c
  5039  00123C  3638               	rlcf	(??_init_ds18b20+1)^0,f,c
  5040  00123E  90D8               	bcf	status,0,c
  5041  001240  3637               	rlcf	??_init_ds18b20^0,f,c
  5042  001242  3638               	rlcf	(??_init_ds18b20+1)^0,f,c
  5043  001244  503A               	movf	init_ds18b20@i^0,w,c
  5044  001246  2437               	addwf	??_init_ds18b20^0,w,c
  5045  001248  6E31               	movwf	read_eep@address^0,c
  5046  00124A  0E00               	movlw	0
  5047  00124C  2038               	addwfc	(??_init_ds18b20+1)^0,w,c
  5048  00124E  6E32               	movwf	(read_eep@address+1)^0,c
  5049  001250  EC26  F00B         	call	_read_eep	;wreg free
  5050  001254  6EDF               	movwf	indf2,c
  5051  001256  2A3A               	incf	init_ds18b20@i^0,f,c
  5052  001258  0E07               	movlw	7
  5053  00125A  643A               	cpfsgt	init_ds18b20@i^0,c
  5054  00125C  D7E0               	goto	l2432
  5055  00125E  2A39               	incf	init_ds18b20@q^0,f,c
  5056  001260  0E01               	movlw	1
  5057  001262  6439               	cpfsgt	init_ds18b20@q^0,c
  5058  001264  D7DB               	goto	l353
  5059  001266  0C01               	retlw	1
  5060  001268                     __end_of_init_ds18b20:
  5061                           	callstack 0
  5062                           
  5063 ;; *************** function _write_byte *****************
  5064 ;; Defined at:
  5065 ;;		line 66 in file "onewire.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  val             1    wreg     unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  val             1    6[COMRAM] unsigned char 
  5070 ;;  i               1    8[COMRAM] unsigned char 
  5071 ;;  temp            1    7[COMRAM] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1
  5081 ;;      Params:         0       0       0
  5082 ;;      Locals:         3       0       0
  5083 ;;      Temps:          2       0       0
  5084 ;;      Totals:         5       0       0
  5085 ;;Total ram usage:        5 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    3
  5088 ;; This function calls:
  5089 ;;		_write_bit
  5090 ;; This function is called by:
  5091 ;;		_init_ds18b20
  5092 ;;		_ds18b20_readTemp
  5093 ;;		_ds18b20_readrom
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	text20
  5098  001462                     __ptext20:
  5099                           	callstack 0
  5100  001462                     _write_byte:
  5101                           	callstack 26
  5102                           
  5103                           ;incstack = 0
  5104                           ;write_byte@val stored from wreg
  5105  001462  6E34               	movwf	write_byte@val^0,c
  5106                           
  5107                           ;onewire.c: 68: uint8_t i;;onewire.c: 69: uint8_t temp;;onewire.c: 71: for (i=0;i<8;i++)
  5108  001464  6A36               	clrf	write_byte@i^0,c
  5109  001466                     l1346:
  5110                           
  5111                           ;onewire.c: 72: {;onewire.c: 73: temp = val >> i;
  5112  001466  C036  F032         	movff	write_byte@i,??_write_byte
  5113  00146A  C034  F033         	movff	write_byte@val,??_write_byte+1
  5114  00146E  2A32               	incf	??_write_byte^0,f,c
  5115  001470  D002               	goto	u124
  5116  001472                     u125:
  5117  001472  90D8               	bcf	status,0,c
  5118  001474  3233               	rrcf	(??_write_byte+1)^0,f,c
  5119  001476                     u124:
  5120  001476  2E32               	decfsz	??_write_byte^0,f,c
  5121  001478  D7FC               	goto	u125
  5122  00147A  5033               	movf	(??_write_byte+1)^0,w,c
  5123  00147C  6E35               	movwf	write_byte@temp^0,c
  5124                           
  5125                           ;onewire.c: 74: temp &= 0x01;
  5126  00147E  0E01               	movlw	1
  5127  001480  1635               	andwf	write_byte@temp^0,f,c
  5128                           
  5129                           ;onewire.c: 75: write_bit(temp);
  5130  001482  5035               	movf	write_byte@temp^0,w,c
  5131  001484  ECF1  F00A         	call	_write_bit
  5132  001488  2A36               	incf	write_byte@i^0,f,c
  5133  00148A  0E07               	movlw	7
  5134  00148C  6436               	cpfsgt	write_byte@i^0,c
  5135  00148E  D7EB               	goto	l1346
  5136                           
  5137                           ;onewire.c: 76: };onewire.c: 78: _delay((unsigned long)((105)*(8000000/4000000.0)));
  5138  001490  0E46               	movlw	70
  5139  001492                     u2667:
  5140  001492  2EE8               	decfsz	wreg,f,c
  5141  001494  D7FE               	bra	u2667
  5142  001496  0012               	return		;funcret
  5143  001498                     __end_of_write_byte:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function _write_bit *****************
  5147 ;; Defined at:
  5148 ;;		line 34 in file "onewire.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  bitval          1    wreg     unsigned char 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  bitval          1    3[COMRAM] unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1
  5162 ;;      Params:         0       0       0
  5163 ;;      Locals:         1       0       0
  5164 ;;      Temps:          0       0       0
  5165 ;;      Totals:         1       0       0
  5166 ;;Total ram usage:        1 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    2
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_write_byte
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text21
  5177  0015E2                     __ptext21:
  5178                           	callstack 0
  5179  0015E2                     _write_bit:
  5180                           	callstack 26
  5181                           
  5182                           ;incstack = 0
  5183                           ;write_bit@bitval stored from wreg
  5184  0015E2  6E31               	movwf	write_bit@bitval^0,c
  5185                           
  5186                           ;onewire.c: 36: PORTAbits.RA6 = 0;
  5187  0015E4  9C80               	bcf	128,6,c	;volatile
  5188                           
  5189                           ;onewire.c: 37: TRISAbits.TRISA6 = 0;
  5190  0015E6  9C92               	bcf	146,6,c	;volatile
  5191                           
  5192                           ;onewire.c: 38: if(bitval == 1) {
  5193  0015E8  0431               	decf	write_bit@bitval^0,w,c
  5194  0015EA  E104               	bnz	l1312
  5195                           
  5196                           ;onewire.c: 39: _delay((unsigned long)((2)*(8000000/4000000.0)));
  5197  0015EC  D000               	nop2		;2 cycle nop
  5198  0015EE  D000               	nop2		;2 cycle nop
  5199                           
  5200                           ;onewire.c: 40: PORTAbits.RA6 = 1;
  5201  0015F0  8C80               	bsf	128,6,c	;volatile
  5202                           
  5203                           ;onewire.c: 41: TRISAbits.TRISA6 = 1;
  5204  0015F2  8C92               	bsf	146,6,c	;volatile
  5205  0015F4                     l1312:
  5206                           
  5207                           ;onewire.c: 42: };onewire.c: 43: _delay((unsigned long)((105)*(8000000/4000000.0)));
  5208  0015F4  0E46               	movlw	70
  5209  0015F6                     u2677:
  5210  0015F6  2EE8               	decfsz	wreg,f,c
  5211  0015F8  D7FE               	bra	u2677
  5212                           
  5213                           ;onewire.c: 44: PORTAbits.RA6 = 1;
  5214  0015FA  8C80               	bsf	128,6,c	;volatile
  5215                           
  5216                           ;onewire.c: 45: TRISAbits.TRISA6 = 1;
  5217  0015FC  8C92               	bsf	146,6,c	;volatile
  5218  0015FE  0012               	return		;funcret
  5219  001600                     __end_of_write_bit:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function _read_eep *****************
  5223 ;; Defined at:
  5224 ;;		line 25 in file "eeprom.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  address         2    3[COMRAM] unsigned short 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      unsigned char 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1
  5238 ;;      Params:         2       0       0
  5239 ;;      Locals:         0       0       0
  5240 ;;      Temps:          0       0       0
  5241 ;;      Totals:         2       0       0
  5242 ;;Total ram usage:        2 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    2
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_main
  5249 ;;		_init_ds18b20
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text22
  5254  00164C                     __ptext22:
  5255                           	callstack 0
  5256  00164C                     _read_eep:
  5257                           	callstack 28
  5258                           
  5259                           ;eeprom.c: 28: {}
  5260                           
  5261                           ;incstack = 0
  5262  00164C  B2A6               	btfsc	166,1,c	;volsfr
  5263  00164E  D7FE               	goto	_read_eep
  5264                           
  5265                           ;eeprom.c: 30: EEADR = address;
  5266  001650  C031  FFA9         	movff	read_eep@address,4009	;volatile
  5267                           
  5268                           ;eeprom.c: 31: EECON1bits.EEPGD = 0;
  5269  001654  9EA6               	bcf	166,7,c	;volsfr
  5270                           
  5271                           ;eeprom.c: 32: EECON1bits.CFGS = 0;
  5272  001656  9CA6               	bcf	166,6,c	;volsfr
  5273                           
  5274                           ;eeprom.c: 33: EECON1bits.RD = 1;
  5275  001658  80A6               	bsf	166,0,c	;volsfr
  5276                           
  5277                           ;eeprom.c: 34: return( EEDATA );
  5278  00165A  50A8               	movf	168,w,c	;volatile
  5279  00165C  0012               	return		;funcret
  5280  00165E                     __end_of_read_eep:
  5281                           	callstack 0
  5282                           
  5283 ;; *************** function _ow_reset *****************
  5284 ;; Defined at:
  5285 ;;		line 5 in file "onewire.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;		None
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  presence        1    3[COMRAM] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      unsigned char 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1
  5299 ;;      Params:         0       0       0
  5300 ;;      Locals:         1       0       0
  5301 ;;      Temps:          0       0       0
  5302 ;;      Totals:         1       0       0
  5303 ;;Total ram usage:        1 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    2
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_init_ds18b20
  5310 ;;		_ds18b20_readTemp
  5311 ;;		_ds18b20_readrom
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text23
  5316  0014FE                     __ptext23:
  5317                           	callstack 0
  5318  0014FE                     _ow_reset:
  5319                           	callstack 27
  5320                           
  5321                           ;onewire.c: 7: uint8_t presence;;onewire.c: 8: PORTAbits.RA6 = 0;
  5322                           
  5323                           ;incstack = 0
  5324  0014FE  9C80               	bcf	128,6,c	;volatile
  5325                           
  5326                           ;onewire.c: 9: TRISAbits.TRISA6 = 0;
  5327  001500  9C92               	bcf	146,6,c	;volatile
  5328                           
  5329                           ;onewire.c: 10: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5330  001502  0EC8               	movlw	200
  5331  001504                     u2687:
  5332  001504  D000               	nop2	
  5333  001506  2EE8               	decfsz	wreg,f,c
  5334  001508  D7FD               	bra	u2687
  5335                           
  5336                           ;onewire.c: 11: PORTAbits.RA6 = 1;
  5337  00150A  8C80               	bsf	128,6,c	;volatile
  5338                           
  5339                           ;onewire.c: 12: TRISAbits.TRISA6 = 1;
  5340  00150C  8C92               	bsf	146,6,c	;volatile
  5341                           
  5342                           ;onewire.c: 13: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5343  00150E  0E42               	movlw	66
  5344  001510                     u2697:
  5345  001510  2EE8               	decfsz	wreg,f,c
  5346  001512  D7FE               	bra	u2697
  5347  001514  D000               	nop2	
  5348                           
  5349                           ;onewire.c: 14: presence = PORTAbits.RA6;
  5350  001516  0E00               	movlw	0
  5351  001518  BC80               	btfsc	128,6,c	;volatile
  5352  00151A  0E01               	movlw	1
  5353  00151C  6E31               	movwf	ow_reset@presence^0,c
  5354                           
  5355                           ;onewire.c: 15: _delay((unsigned long)((424)*(8000000/4000000.0)));
  5356  00151E  0EA9               	movlw	169
  5357  001520                     u2707:
  5358  001520  D000               	nop2	
  5359  001522  2EE8               	decfsz	wreg,f,c
  5360  001524  D7FD               	bra	u2707
  5361  001526  D000               	nop2	
  5362  001528  F000               	nop	
  5363                           
  5364                           ;onewire.c: 16: return(presence);
  5365  00152A  5031               	movf	ow_reset@presence^0,w,c
  5366  00152C  0012               	return		;funcret
  5367  00152E                     __end_of_ow_reset:
  5368                           	callstack 0
  5369                           
  5370 ;; *************** function _initLCD *****************
  5371 ;; Defined at:
  5372 ;;		line 10 in file "hd44780.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;		None
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;		None
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      void 
  5379 ;; Registers used:
  5380 ;;		wreg, status,2, status,0, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1
  5386 ;;      Params:         0       0       0
  5387 ;;      Locals:         0       0       0
  5388 ;;      Temps:          1       0       0
  5389 ;;      Totals:         1       0       0
  5390 ;;Total ram usage:        1 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    5
  5393 ;; This function calls:
  5394 ;;		_clearLCD
  5395 ;;		_lcdNibble
  5396 ;;		_lcdWrite
  5397 ;; This function is called by:
  5398 ;;		_Main_init
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text24
  5403  000E00                     __ptext24:
  5404                           	callstack 0
  5405  000E00                     _initLCD:
  5406                           	callstack 24
  5407                           
  5408                           ;hd44780.c: 11: LATAbits.LATA2 = 0;
  5409                           
  5410                           ;incstack = 0
  5411  000E00  9489               	bcf	137,2,c	;volatile
  5412                           
  5413                           ;hd44780.c: 12: LATAbits.LATA1 = 0;
  5414  000E02  9289               	bcf	137,1,c	;volatile
  5415                           
  5416                           ;hd44780.c: 14: _delay((unsigned long)((10)*(8000000/4000.0)));
  5417  000E04  0E1A               	movlw	26
  5418  000E06  6E36               	movwf	??_initLCD^0,c
  5419  000E08  0EF8               	movlw	248
  5420  000E0A                     u2717:
  5421  000E0A  2EE8               	decfsz	wreg,f,c
  5422  000E0C  D7FE               	bra	u2717
  5423  000E0E  2E36               	decfsz	??_initLCD^0,f,c
  5424  000E10  D7FC               	bra	u2717
  5425  000E12  D000               	nop2	
  5426                           
  5427                           ;hd44780.c: 15: _delay((unsigned long)((10)*(8000000/4000.0)));
  5428  000E14  0E1A               	movlw	26
  5429  000E16  6E36               	movwf	??_initLCD^0,c
  5430  000E18  0EF8               	movlw	248
  5431  000E1A                     u2727:
  5432  000E1A  2EE8               	decfsz	wreg,f,c
  5433  000E1C  D7FE               	bra	u2727
  5434  000E1E  2E36               	decfsz	??_initLCD^0,f,c
  5435  000E20  D7FC               	bra	u2727
  5436  000E22  D000               	nop2	
  5437                           
  5438                           ;hd44780.c: 16: _delay((unsigned long)((10)*(8000000/4000.0)));
  5439  000E24  0E1A               	movlw	26
  5440  000E26  6E36               	movwf	??_initLCD^0,c
  5441  000E28  0EF8               	movlw	248
  5442  000E2A                     u2737:
  5443  000E2A  2EE8               	decfsz	wreg,f,c
  5444  000E2C  D7FE               	bra	u2737
  5445  000E2E  2E36               	decfsz	??_initLCD^0,f,c
  5446  000E30  D7FC               	bra	u2737
  5447  000E32  D000               	nop2	
  5448                           
  5449                           ;hd44780.c: 17: _delay((unsigned long)((10)*(8000000/4000.0)));
  5450  000E34  0E1A               	movlw	26
  5451  000E36  6E36               	movwf	??_initLCD^0,c
  5452  000E38  0EF8               	movlw	248
  5453  000E3A                     u2747:
  5454  000E3A  2EE8               	decfsz	wreg,f,c
  5455  000E3C  D7FE               	bra	u2747
  5456  000E3E  2E36               	decfsz	??_initLCD^0,f,c
  5457  000E40  D7FC               	bra	u2747
  5458  000E42  D000               	nop2	
  5459                           
  5460                           ;hd44780.c: 21: lcdNibble(0b0011);
  5461  000E44  0E03               	movlw	3
  5462  000E46  EC83  F008         	call	_lcdNibble
  5463                           
  5464                           ;hd44780.c: 22: _delay((unsigned long)((5)*(8000000/4000.0)));
  5465  000E4A  0E0D               	movlw	13
  5466  000E4C  6E36               	movwf	??_initLCD^0,c
  5467  000E4E  0EFC               	movlw	252
  5468  000E50                     u2757:
  5469  000E50  2EE8               	decfsz	wreg,f,c
  5470  000E52  D7FE               	bra	u2757
  5471  000E54  2E36               	decfsz	??_initLCD^0,f,c
  5472  000E56  D7FC               	bra	u2757
  5473                           
  5474                           ;hd44780.c: 23: lcdNibble(0b0011);
  5475  000E58  0E03               	movlw	3
  5476  000E5A  EC83  F008         	call	_lcdNibble
  5477                           
  5478                           ;hd44780.c: 24: _delay((unsigned long)((5)*(8000000/4000.0)));
  5479  000E5E  0E0D               	movlw	13
  5480  000E60  6E36               	movwf	??_initLCD^0,c
  5481  000E62  0EFC               	movlw	252
  5482  000E64                     u2767:
  5483  000E64  2EE8               	decfsz	wreg,f,c
  5484  000E66  D7FE               	bra	u2767
  5485  000E68  2E36               	decfsz	??_initLCD^0,f,c
  5486  000E6A  D7FC               	bra	u2767
  5487                           
  5488                           ;hd44780.c: 25: lcdNibble(0b0011);
  5489  000E6C  0E03               	movlw	3
  5490  000E6E  EC83  F008         	call	_lcdNibble
  5491                           
  5492                           ;hd44780.c: 26: _delay((unsigned long)((5)*(8000000/4000.0)));
  5493  000E72  0E0D               	movlw	13
  5494  000E74  6E36               	movwf	??_initLCD^0,c
  5495  000E76  0EFC               	movlw	252
  5496  000E78                     u2777:
  5497  000E78  2EE8               	decfsz	wreg,f,c
  5498  000E7A  D7FE               	bra	u2777
  5499  000E7C  2E36               	decfsz	??_initLCD^0,f,c
  5500  000E7E  D7FC               	bra	u2777
  5501                           
  5502                           ;hd44780.c: 27: lcdNibble(0b0010);
  5503  000E80  0E02               	movlw	2
  5504  000E82  EC83  F008         	call	_lcdNibble
  5505                           
  5506                           ;hd44780.c: 28: _delay((unsigned long)((5)*(8000000/4000.0)));
  5507  000E86  0E0D               	movlw	13
  5508  000E88  6E36               	movwf	??_initLCD^0,c
  5509  000E8A  0EFC               	movlw	252
  5510  000E8C                     u2787:
  5511  000E8C  2EE8               	decfsz	wreg,f,c
  5512  000E8E  D7FE               	bra	u2787
  5513  000E90  2E36               	decfsz	??_initLCD^0,f,c
  5514  000E92  D7FC               	bra	u2787
  5515                           
  5516                           ;hd44780.c: 31: lcdWrite(((0b0010 << 4) | (1 << 3)), COMMAND);
  5517  000E94  0E00               	movlw	0
  5518  000E96  6E33               	movwf	lcdWrite@type^0,c
  5519  000E98  0E28               	movlw	40
  5520  000E9A  ECCE  F00A         	call	_lcdWrite
  5521                           
  5522                           ;hd44780.c: 32: _delay((unsigned long)((5)*(8000000/4000.0)));
  5523  000E9E  0E0D               	movlw	13
  5524  000EA0  6E36               	movwf	??_initLCD^0,c
  5525  000EA2  0EFC               	movlw	252
  5526  000EA4                     u2797:
  5527  000EA4  2EE8               	decfsz	wreg,f,c
  5528  000EA6  D7FE               	bra	u2797
  5529  000EA8  2E36               	decfsz	??_initLCD^0,f,c
  5530  000EAA  D7FC               	bra	u2797
  5531                           
  5532                           ;hd44780.c: 33: lcdWrite(((0b1100) | (0 << 1) | (0 << 0)), COMMAND);
  5533  000EAC  0E00               	movlw	0
  5534  000EAE  6E33               	movwf	lcdWrite@type^0,c
  5535  000EB0  0E0C               	movlw	12
  5536  000EB2  ECCE  F00A         	call	_lcdWrite
  5537                           
  5538                           ;hd44780.c: 34: _delay((unsigned long)((8)*(8000000/4000.0)));
  5539  000EB6  0E15               	movlw	21
  5540  000EB8  6E36               	movwf	??_initLCD^0,c
  5541  000EBA  0EC6               	movlw	198
  5542  000EBC                     u2807:
  5543  000EBC  2EE8               	decfsz	wreg,f,c
  5544  000EBE  D7FE               	bra	u2807
  5545  000EC0  2E36               	decfsz	??_initLCD^0,f,c
  5546  000EC2  D7FC               	bra	u2807
  5547  000EC4  D000               	nop2	
  5548                           
  5549                           ;hd44780.c: 35: clearLCD();
  5550  000EC6  EC0E  F00B         	call	_clearLCD	;wreg free
  5551                           
  5552                           ;hd44780.c: 36: _delay((unsigned long)((5)*(8000000/4000.0)));
  5553  000ECA  0E0D               	movlw	13
  5554  000ECC  6E36               	movwf	??_initLCD^0,c
  5555  000ECE  0EFC               	movlw	252
  5556  000ED0                     u2817:
  5557  000ED0  2EE8               	decfsz	wreg,f,c
  5558  000ED2  D7FE               	bra	u2817
  5559  000ED4  2E36               	decfsz	??_initLCD^0,f,c
  5560  000ED6  D7FC               	bra	u2817
  5561                           
  5562                           ;hd44780.c: 37: lcdWrite(0x06, COMMAND);
  5563  000ED8  0E00               	movlw	0
  5564  000EDA  6E33               	movwf	lcdWrite@type^0,c
  5565  000EDC  0E06               	movlw	6
  5566  000EDE  ECCE  F00A         	call	_lcdWrite
  5567                           
  5568                           ;hd44780.c: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
  5569  000EE2  0E0D               	movlw	13
  5570  000EE4  6E36               	movwf	??_initLCD^0,c
  5571  000EE6  0EFC               	movlw	252
  5572  000EE8                     u2827:
  5573  000EE8  2EE8               	decfsz	wreg,f,c
  5574  000EEA  D7FE               	bra	u2827
  5575  000EEC  2E36               	decfsz	??_initLCD^0,f,c
  5576  000EEE  D7FC               	bra	u2827
  5577                           
  5578                           ;hd44780.c: 39: clearLCD();
  5579  000EF0  EC0E  F00B         	call	_clearLCD	;wreg free
  5580                           
  5581                           ;hd44780.c: 41: LATAbits.LATA2 = 1;
  5582  000EF4  8489               	bsf	137,2,c	;volatile
  5583  000EF6  0012               	return		;funcret
  5584  000EF8                     __end_of_initLCD:
  5585                           	callstack 0
  5586                           
  5587 ;; *************** function _clearLCD *****************
  5588 ;; Defined at:
  5589 ;;		line 45 in file "hd44780.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1
  5603 ;;      Params:         0       0       0
  5604 ;;      Locals:         0       0       0
  5605 ;;      Temps:          1       0       0
  5606 ;;      Totals:         1       0       0
  5607 ;;Total ram usage:        1 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    4
  5610 ;; This function calls:
  5611 ;;		_lcdWrite
  5612 ;; This function is called by:
  5613 ;;		_main
  5614 ;;		_initLCD
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text25
  5619  00161C                     __ptext25:
  5620                           	callstack 0
  5621  00161C                     _clearLCD:
  5622                           	callstack 0
  5623                           
  5624                           ;hd44780.c: 46: lcdWrite(0x01, COMMAND);
  5625                           
  5626                           ;incstack = 0
  5627  00161C  EC3B  F008         	call	PL60	;call to abstracted procedure
  5628  001620  ECCE  F00A         	call	_lcdWrite
  5629                           
  5630                           ;hd44780.c: 47: _delay((unsigned long)((2)*(8000000/4000.0)));
  5631  001624  0E06               	movlw	6
  5632  001626  6E35               	movwf	??_clearLCD^0,c
  5633  001628  0E30               	movlw	48
  5634  00162A                     u2837:
  5635  00162A  2EE8               	decfsz	wreg,f,c
  5636  00162C  D7FE               	bra	u2837
  5637  00162E  2E35               	decfsz	??_clearLCD^0,f,c
  5638  001630  D7FC               	bra	u2837
  5639  001632  D000               	nop2	
  5640  001634  0012               	return		;funcret
  5641  001636                     __end_of_clearLCD:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function _cgrom_char *****************
  5645 ;; Defined at:
  5646 ;;		line 127 in file "hd44780.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  symbol          2    7[COMRAM] PTR unsigned char 
  5649 ;;		 -> symbol_4(8), 
  5650 ;;  address         1    9[COMRAM] unsigned char 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  i               1   10[COMRAM] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1
  5662 ;;      Params:         3       0       0
  5663 ;;      Locals:         1       0       0
  5664 ;;      Temps:          0       0       0
  5665 ;;      Totals:         4       0       0
  5666 ;;Total ram usage:        4 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    4
  5669 ;; This function calls:
  5670 ;;		_lcdWrite
  5671 ;; This function is called by:
  5672 ;;		_Main_init
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text26
  5677  0014CC                     __ptext26:
  5678                           	callstack 0
  5679  0014CC                     _cgrom_char:
  5680                           	callstack 25
  5681                           
  5682                           ;hd44780.c: 128: uint8_t i;;hd44780.c: 129: lcdWrite(0x40 | (address * 8), COMMAND);
  5683                           
  5684                           ;incstack = 0
  5685  0014CC  6A33               	clrf	lcdWrite@type^0,c
  5686  0014CE  5037               	movf	cgrom_char@address^0,w,c
  5687  0014D0  0D08               	mullw	8
  5688  0014D2  50F3               	movf	243,w,c
  5689  0014D4  0940               	iorlw	64
  5690  0014D6  ECCE  F00A         	call	_lcdWrite
  5691                           
  5692                           ;hd44780.c: 130: for (i = 0; i < 8; i++)
  5693  0014DA  6A38               	clrf	cgrom_char@i^0,c
  5694  0014DC                     l2480:
  5695                           
  5696                           ;hd44780.c: 131: lcdWrite(*symbol++, DATA);
  5697  0014DC  0E01               	movlw	1
  5698  0014DE  6E33               	movwf	lcdWrite@type^0,c
  5699  0014E0  C035  FFF6         	movff	cgrom_char@symbol,tblptrl
  5700  0014E4  C036  FFF7         	movff	cgrom_char@symbol+1,tblptrh
  5701  0014E8                     	if	0	;tblptru may be non-zero
  5702  0014E8                     	endif
  5703  0014E8                     	if	0	;tblptru may be non-zero
  5704  0014E8                     	endif
  5705  0014E8  0008               	tblrd		*
  5706  0014EA  50F5               	movf	tablat,w,c
  5707  0014EC  ECCE  F00A         	call	_lcdWrite
  5708  0014F0  4A35               	infsnz	cgrom_char@symbol^0,f,c
  5709  0014F2  2A36               	incf	(cgrom_char@symbol+1)^0,f,c
  5710  0014F4  2A38               	incf	cgrom_char@i^0,f,c
  5711  0014F6  0E07               	movlw	7
  5712  0014F8  6438               	cpfsgt	cgrom_char@i^0,c
  5713  0014FA  D7F0               	goto	l2480
  5714  0014FC  0C07               	retlw	7
  5715  0014FE                     __end_of_cgrom_char:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _lcdWrite *****************
  5719 ;; Defined at:
  5720 ;;		line 50 in file "hd44780.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  byte            1    wreg     unsigned char 
  5723 ;;  type            1    5[COMRAM] enum E2011
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  byte            1    6[COMRAM] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1
  5735 ;;      Params:         1       0       0
  5736 ;;      Locals:         1       0       0
  5737 ;;      Temps:          0       0       0
  5738 ;;      Totals:         2       0       0
  5739 ;;Total ram usage:        2 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    3
  5742 ;; This function calls:
  5743 ;;		_lcdNibble
  5744 ;; This function is called by:
  5745 ;;		_initLCD
  5746 ;;		_clearLCD
  5747 ;;		_lcd_gotoxy
  5748 ;;		_lcd_putc
  5749 ;;		_lcdPrint
  5750 ;;		_cgrom_char
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text27
  5755  00159C                     __ptext27:
  5756                           	callstack 0
  5757  00159C                     _lcdWrite:
  5758                           	callstack 26
  5759                           
  5760                           ;incstack = 0
  5761                           ;lcdWrite@byte stored from wreg
  5762  00159C  6E34               	movwf	lcdWrite@byte^0,c
  5763                           
  5764                           ;hd44780.c: 51: if (type == COMMAND)
  5765  00159E  5033               	movf	lcdWrite@type^0,w,c
  5766  0015A0  E102               	bnz	l423
  5767                           
  5768                           ;hd44780.c: 52: LATAbits.LATA2 = 0;
  5769  0015A2  9489               	bcf	137,2,c	;volatile
  5770  0015A4  D001               	goto	l2366
  5771  0015A6                     l423:
  5772                           
  5773                           ;hd44780.c: 53: else;hd44780.c: 54: LATAbits.LATA2 = 1;
  5774  0015A6  8489               	bsf	137,2,c	;volatile
  5775  0015A8                     l2366:
  5776                           
  5777                           ;hd44780.c: 56: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5778  0015A8  0E42               	movlw	66
  5779  0015AA                     u2847:
  5780  0015AA  2EE8               	decfsz	wreg,f,c
  5781  0015AC  D7FE               	bra	u2847
  5782  0015AE  D000               	nop2	
  5783                           
  5784                           ;hd44780.c: 58: lcdNibble(byte >> 4);
  5785  0015B0  3834               	swapf	lcdWrite@byte^0,w,c
  5786  0015B2  0B0F               	andlw	15
  5787  0015B4  EC83  F008         	call	_lcdNibble
  5788                           
  5789                           ;hd44780.c: 59: lcdNibble(byte & 0x0F);
  5790  0015B8  5034               	movf	lcdWrite@byte^0,w,c
  5791  0015BA  0B0F               	andlw	15
  5792  0015BC  EF83  F008         	goto	_lcdNibble
  5793  0015C0                     __end_of_lcdWrite:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function _lcdNibble *****************
  5797 ;; Defined at:
  5798 ;;		line 63 in file "hd44780.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  nibble          1    wreg     unsigned char 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  nibble          1    4[COMRAM] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1
  5812 ;;      Params:         0       0       0
  5813 ;;      Locals:         1       0       0
  5814 ;;      Temps:          1       0       0
  5815 ;;      Totals:         2       0       0
  5816 ;;Total ram usage:        2 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    2
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_initLCD
  5823 ;;		_lcdWrite
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text28
  5828  001106                     __ptext28:
  5829                           	callstack 0
  5830  001106                     _lcdNibble:
  5831                           	callstack 26
  5832                           
  5833                           ;incstack = 0
  5834                           ;lcdNibble@nibble stored from wreg
  5835  001106  6E32               	movwf	lcdNibble@nibble^0,c
  5836                           
  5837                           ;hd44780.c: 64: LATCbits.LATC0 = (nibble & 0x01) ? 1 : 0;
  5838  001108  A032               	btfss	lcdNibble@nibble^0,0,c
  5839  00110A  D003               	goto	u10
  5840  00110C  6A31               	clrf	??_lcdNibble^0,c
  5841  00110E  2A31               	incf	??_lcdNibble^0,f,c
  5842  001110  D001               	goto	u28
  5843  001112                     u10:
  5844  001112  6A31               	clrf	??_lcdNibble^0,c
  5845  001114                     u28:
  5846  001114  508B               	movf	139,w,c	;volatile
  5847  001116  1831               	xorwf	??_lcdNibble^0,w,c
  5848  001118  0BFE               	andlw	-2
  5849  00111A  1831               	xorwf	??_lcdNibble^0,w,c
  5850  00111C  6E8B               	movwf	139,c	;volatile
  5851                           
  5852                           ;hd44780.c: 65: LATCbits.LATC1 = (nibble & 0x02) ? 1 : 0;
  5853  00111E  A232               	btfss	lcdNibble@nibble^0,1,c
  5854  001120  D003               	goto	u30
  5855  001122  6A31               	clrf	??_lcdNibble^0,c
  5856  001124  2A31               	incf	??_lcdNibble^0,f,c
  5857  001126  D001               	goto	u48
  5858  001128                     u30:
  5859  001128  6A31               	clrf	??_lcdNibble^0,c
  5860  00112A                     u48:
  5861  00112A  4631               	rlncf	??_lcdNibble^0,f,c
  5862  00112C  508B               	movf	139,w,c	;volatile
  5863  00112E  1831               	xorwf	??_lcdNibble^0,w,c
  5864  001130  0BFD               	andlw	-3
  5865  001132  1831               	xorwf	??_lcdNibble^0,w,c
  5866  001134  6E8B               	movwf	139,c	;volatile
  5867                           
  5868                           ;hd44780.c: 66: LATCbits.LATC2 = (nibble & 0x04) ? 1 : 0;
  5869  001136  A432               	btfss	lcdNibble@nibble^0,2,c
  5870  001138  D003               	goto	u50
  5871  00113A  6A31               	clrf	??_lcdNibble^0,c
  5872  00113C  2A31               	incf	??_lcdNibble^0,f,c
  5873  00113E  D001               	goto	u68
  5874  001140                     u50:
  5875  001140  6A31               	clrf	??_lcdNibble^0,c
  5876  001142                     u68:
  5877  001142  D819               	call	PL38	;call to abstracted procedure
  5878  001144  0BFB               	andlw	-5
  5879  001146  1831               	xorwf	??_lcdNibble^0,w,c
  5880  001148  6E8B               	movwf	139,c	;volatile
  5881                           
  5882                           ;hd44780.c: 67: LATCbits.LATC3 = (nibble & 0x08) ? 1 : 0;
  5883  00114A  A632               	btfss	lcdNibble@nibble^0,3,c
  5884  00114C  D003               	goto	u70
  5885  00114E  6A31               	clrf	??_lcdNibble^0,c
  5886  001150  2A31               	incf	??_lcdNibble^0,f,c
  5887  001152  D001               	goto	u88
  5888  001154                     u70:
  5889  001154  6A31               	clrf	??_lcdNibble^0,c
  5890  001156                     u88:
  5891  001156  4631               	rlncf	??_lcdNibble^0,f,c
  5892  001158  D80E               	call	PL38	;call to abstracted procedure
  5893  00115A  0BF7               	andlw	-9
  5894  00115C  1831               	xorwf	??_lcdNibble^0,w,c
  5895  00115E  6E8B               	movwf	139,c	;volatile
  5896                           
  5897                           ;hd44780.c: 70: LATAbits.LATA1 = 1;
  5898  001160  8289               	bsf	137,1,c	;volatile
  5899                           
  5900                           ;hd44780.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5901  001162  0E42               	movlw	66
  5902  001164                     u2857:
  5903  001164  2EE8               	decfsz	wreg,f,c
  5904  001166  D7FE               	bra	u2857
  5905  001168  D000               	nop2	
  5906                           
  5907                           ;hd44780.c: 72: LATAbits.LATA1 = 0;
  5908  00116A  9289               	bcf	137,1,c	;volatile
  5909                           
  5910                           ;hd44780.c: 73: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5911  00116C  0E42               	movlw	66
  5912  00116E                     u2867:
  5913  00116E  2EE8               	decfsz	wreg,f,c
  5914  001170  D7FE               	bra	u2867
  5915  001172  D000               	nop2	
  5916  001174  0012               	return		;funcret
  5917  001176                     __end_of_lcdNibble:
  5918                           	callstack 0
  5919  001176                     PL38:
  5920                           	callstack 26
  5921  001176  4631               	rlncf	??_lcdNibble^0,f,c
  5922  001178  4631               	rlncf	??_lcdNibble^0,f,c
  5923  00117A  508B               	movf	139,w,c	;volatile
  5924  00117C  1831               	xorwf	??_lcdNibble^0,w,c
  5925  00117E  0012               	return	
  5926  001180                     __end_ofPL38:
  5927                           	callstack 0
  5928                           
  5929 ;; *************** function _myIntL *****************
  5930 ;; Defined at:
  5931 ;;		line 638 in file "main.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;		None
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;		None
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, status,2, status,0
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1
  5945 ;;      Params:         0       0       0
  5946 ;;      Locals:         0       0       0
  5947 ;;      Temps:          3       0       0
  5948 ;;      Totals:         3       0       0
  5949 ;;Total ram usage:        3 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    1
  5952 ;; This function calls:
  5953 ;;		Nothing
  5954 ;; This function is called by:
  5955 ;;		Interrupt level 1
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	intcodelo
  5960  000018                     __pintcodelo:
  5961                           	callstack 0
  5962  000018                     _myIntL:
  5963                           	callstack 24
  5964                           
  5965                           ;incstack = 0
  5966  000018  8050               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5967  00001A  CFD8 F02E          	movff	status,??_myIntL
  5968  00001E  CFE8 F02F          	movff	wreg,??_myIntL+1
  5969  000022  CFE0 F030          	movff	bsr,??_myIntL+2
  5970                           
  5971                           ;main.c: 639: static uint8_t snd_delay;;main.c: 641: if (INTCONbits.T0IF == 1) {
  5972  000026  A4F2               	btfss	242,2,c	;volatile
  5973  000028  D02F               	goto	i1l320
  5974                           
  5975                           ;main.c: 642: INTCONbits.T0IF = 0;
  5976  00002A  94F2               	bcf	242,2,c	;volatile
  5977                           
  5978                           ;main.c: 643: TMR0H = ((unsigned char)(((45536)>>8)&0xFF));
  5979  00002C  0EB1               	movlw	177
  5980  00002E  6ED7               	movwf	215,c	;volatile
  5981                           
  5982                           ;main.c: 644: TMR0L = ((unsigned char)((45536)&0xFF));
  5983  000030  0EE0               	movlw	224
  5984  000032  6ED6               	movwf	214,c	;volatile
  5985                           
  5986                           ;main.c: 645: read_key = 1;
  5987  000034  8246               	bsf	(_read_key/(0+8))^0,_read_key& (0+7),c
  5988                           
  5989                           ;main.c: 646: if (en_sound) {
  5990  000036  A046               	btfss	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  5991  000038  D026               	goto	i1l307
  5992                           
  5993                           ;main.c: 647: snd_delay++;
  5994  00003A  2A1C               	incf	myIntL@snd_delay^0,f,c
  5995                           
  5996                           ;main.c: 648: if (snd_k) {
  5997  00003C  AC45               	btfss	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  5998  00003E  D00A               	goto	i1l308
  5999                           
  6000                           ;main.c: 649: if (snd_delay <= 10) {
  6001  000040  0E0B               	movlw	11
  6002  000042  601C               	cpfslt	myIntL@snd_delay^0,c
  6003  000044  D002               	goto	i1l309
  6004                           
  6005                           ;main.c: 650: LATCbits.LATC4 = 1;
  6006  000046  888B               	bsf	139,4,c	;volatile
  6007                           
  6008                           ;main.c: 651: } else
  6009  000048  D001               	goto	i1l2342
  6010  00004A                     i1l309:
  6011                           
  6012                           ;main.c: 652: LATCbits.LATC4 = 0;
  6013  00004A  988B               	bcf	139,4,c	;volatile
  6014  00004C                     i1l2342:
  6015                           
  6016                           ;main.c: 653: if (snd_delay > 80)
  6017  00004C  0E50               	movlw	80
  6018  00004E  641C               	cpfsgt	myIntL@snd_delay^0,c
  6019  000050  D001               	goto	i1l308
  6020                           
  6021                           ;main.c: 654: snd_delay = 0;
  6022  000052  6A1C               	clrf	myIntL@snd_delay^0,c
  6023  000054                     i1l308:
  6024                           
  6025                           ;main.c: 655: };main.c: 656: if (snd_b) {
  6026  000054  AA45               	btfss	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  6027  000056  D00A               	goto	i1l312
  6028                           
  6029                           ;main.c: 657: if (snd_delay <= 15) {
  6030  000058  0E10               	movlw	16
  6031  00005A  601C               	cpfslt	myIntL@snd_delay^0,c
  6032  00005C  D002               	goto	i1l313
  6033                           
  6034                           ;main.c: 658: LATCbits.LATC4 = 1;
  6035  00005E  888B               	bsf	139,4,c	;volatile
  6036                           
  6037                           ;main.c: 659: } else
  6038  000060  D001               	goto	i1l2350
  6039  000062                     i1l313:
  6040                           
  6041                           ;main.c: 660: LATCbits.LATC4 = 0;
  6042  000062  988B               	bcf	139,4,c	;volatile
  6043  000064                     i1l2350:
  6044                           
  6045                           ;main.c: 661: if (snd_delay > 50)
  6046  000064  0E32               	movlw	50
  6047  000066  641C               	cpfsgt	myIntL@snd_delay^0,c
  6048  000068  D001               	goto	i1l312
  6049                           
  6050                           ;main.c: 662: snd_delay = 0;
  6051  00006A  6A1C               	clrf	myIntL@snd_delay^0,c
  6052  00006C                     i1l312:
  6053                           
  6054                           ;main.c: 663: };main.c: 664: if (snd_all) {
  6055  00006C  A845               	btfss	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  6056  00006E  D00C               	goto	i1l320
  6057                           
  6058                           ;main.c: 665: if (snd_delay <= 10) {
  6059  000070  0E0B               	movlw	11
  6060  000072  601C               	cpfslt	myIntL@snd_delay^0,c
  6061  000074  D002               	goto	i1l317
  6062                           
  6063                           ;main.c: 666: LATCbits.LATC4 = 1;
  6064  000076  888B               	bsf	139,4,c	;volatile
  6065                           
  6066                           ;main.c: 667: } else
  6067  000078  D001               	goto	i1l2358
  6068  00007A                     i1l317:
  6069                           
  6070                           ;main.c: 668: LATCbits.LATC4 = 0;
  6071  00007A  988B               	bcf	139,4,c	;volatile
  6072  00007C                     i1l2358:
  6073                           
  6074                           ;main.c: 669: if (snd_delay > 25)
  6075  00007C  0E19               	movlw	25
  6076  00007E  641C               	cpfsgt	myIntL@snd_delay^0,c
  6077  000080  D003               	goto	i1l320
  6078                           
  6079                           ;main.c: 670: snd_delay = 0;
  6080  000082  6A1C               	clrf	myIntL@snd_delay^0,c
  6081  000084  D001               	goto	i1l320
  6082  000086                     i1l307:
  6083                           
  6084                           ;main.c: 673: LATCbits.LATC4 = 0;
  6085  000086  988B               	bcf	139,4,c	;volatile
  6086  000088                     i1l320:
  6087  000088  C030  FFE0         	movff	??_myIntL+2,bsr
  6088  00008C  C02F  FFE8         	movff	??_myIntL+1,wreg
  6089  000090  C02E  FFD8         	movff	??_myIntL,status
  6090  000094  9050               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6091  000096  0010               	retfie	
  6092  000098                     __end_of_myIntL:
  6093                           	callstack 0
  6094                           
  6095 ;; *************** function _myIntH *****************
  6096 ;; Defined at:
  6097 ;;		line 619 in file "main.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      void 
  6104 ;; Registers used:
  6105 ;;		wreg, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1
  6111 ;;      Params:         0       0       0
  6112 ;;      Locals:         0       0       0
  6113 ;;      Temps:          0       0       0
  6114 ;;      Totals:         0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		Interrupt level 2
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	intcode
  6125  000008                     __pintcode:
  6126                           	callstack 0
  6127  000008                     _myIntH:
  6128                           	callstack 24
  6129                           
  6130                           ;incstack = 0
  6131  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6132  00000A  EFE0  F00A         	goto	int_func
  6133                           
  6134                           	psect	intcode_body
  6135  0015C0                     __pintcode_body:
  6136                           	callstack 24
  6137  0015C0                     int_func:
  6138                           	callstack 24
  6139                           
  6140                           ;main.c: 621: if (PIR1bits.TMR1IF == 1) {
  6141  0015C0  A09E               	btfss	158,0,c	;volatile
  6142  0015C2  D00D               	goto	i2l299
  6143                           
  6144                           ;main.c: 622: PIR1bits.TMR1IF = 0;
  6145  0015C4  909E               	bcf	158,0,c	;volatile
  6146                           
  6147                           ;main.c: 623: TMR1H = ((unsigned char)(((15536)>>8)&0xFF));
  6148  0015C6  0E3C               	movlw	60
  6149  0015C8  6ECF               	movwf	207,c	;volatile
  6150                           
  6151                           ;main.c: 624: TMR1L = ((unsigned char)((15536)&0xFF));
  6152  0015CA  0EB0               	movlw	176
  6153  0015CC  6ECE               	movwf	206,c	;volatile
  6154                           
  6155                           ;main.c: 625: if (++timer_val >= 30)
  6156  0015CE  2A2D               	incf	_timer_val^0,f,c
  6157  0015D0  0E1D               	movlw	29
  6158  0015D2  642D               	cpfsgt	_timer_val^0,c
  6159  0015D4  D004               	goto	i2l299
  6160                           
  6161                           ;main.c: 626: {;main.c: 627: timer_val = 0;
  6162  0015D6  6A2D               	clrf	_timer_val^0,c
  6163                           
  6164                           ;main.c: 628: time_flag = 1;
  6165  0015D8  0E01               	movlw	1
  6166  0015DA  6E2C               	movwf	_time_flag^0,c
  6167                           
  6168                           ;main.c: 629: T1CONbits.TMR1ON = 0;
  6169  0015DC  90CD               	bcf	205,0,c	;volatile
  6170  0015DE                     i2l299:
  6171  0015DE  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6172  0015E0  0011               	retfie		f
  6173  0015E2                     __end_of_myIntH:
  6174                           	callstack 0
  6175                           
  6176                           	psect	rparam
  6177  0000                     
  6178                           	psect	temp
  6179  000050                     btemp:
  6180                           	callstack 0
  6181  000050                     	ds	1
  6182  0000                     int$flags	set	btemp
  6183  0000                     wtemp8	set	btemp+1
  6184  0000                     ttemp5	set	btemp+1
  6185  0000                     ttemp6	set	btemp+4
  6186  0000                     ttemp7	set	btemp+8
  6187                           
  6188                           	psect	idloc
  6189                           
  6190                           ;Config register IDLOC0 @ 0x200000
  6191                           ;	unspecified, using default values
  6192  200000                     	org	2097152
  6193  200000  FF                 	db	255
  6194                           
  6195                           ;Config register IDLOC1 @ 0x200001
  6196                           ;	unspecified, using default values
  6197  200001                     	org	2097153
  6198  200001  FF                 	db	255
  6199                           
  6200                           ;Config register IDLOC2 @ 0x200002
  6201                           ;	unspecified, using default values
  6202  200002                     	org	2097154
  6203  200002  FF                 	db	255
  6204                           
  6205                           ;Config register IDLOC3 @ 0x200003
  6206                           ;	unspecified, using default values
  6207  200003                     	org	2097155
  6208  200003  FF                 	db	255
  6209                           
  6210                           ;Config register IDLOC4 @ 0x200004
  6211                           ;	unspecified, using default values
  6212  200004                     	org	2097156
  6213  200004  FF                 	db	255
  6214                           
  6215                           ;Config register IDLOC5 @ 0x200005
  6216                           ;	unspecified, using default values
  6217  200005                     	org	2097157
  6218  200005  FF                 	db	255
  6219                           
  6220                           ;Config register IDLOC6 @ 0x200006
  6221                           ;	unspecified, using default values
  6222  200006                     	org	2097158
  6223  200006  FF                 	db	255
  6224                           
  6225                           ;Config register IDLOC7 @ 0x200007
  6226                           ;	unspecified, using default values
  6227  200007                     	org	2097159
  6228  200007  FF                 	db	255
  6229                           
  6230                           	psect	config
  6231                           
  6232                           ; Padding undefined space
  6233  300000                     	org	3145728
  6234  300000  FF                 	db	255
  6235                           
  6236                           ;Config register CONFIG1H @ 0x300001
  6237                           ;	Oscillator Selection bits
  6238                           ;	OSC = INTIO2, Internal RC oscillator, port function on RA6 and port function on RA7
  6239                           ;	Fail-Safe Clock Monitor Enable bit
  6240                           ;	FSCM = OFF, Fail-Safe Clock Monitor disabled
  6241                           ;	Internal/External Switchover bit
  6242                           ;	IESO = OFF, Internal/External Switchover mode disabled
  6243  300001                     	org	3145729
  6244  300001  08                 	db	8
  6245                           
  6246                           ;Config register CONFIG2L @ 0x300002
  6247                           ;	Power-up Timer enable bit
  6248                           ;	PWRT = ON, PWRT enabled
  6249                           ;	Brown-out Reset enable bit
  6250                           ;	BOR = ON, Brown-out Reset enabled
  6251                           ;	Brown-out Reset Voltage bits
  6252                           ;	BORV = 27, VBOR set to 2.7V
  6253  300002                     	org	3145730
  6254  300002  0A                 	db	10
  6255                           
  6256                           ;Config register CONFIG2H @ 0x300003
  6257                           ;	Watchdog Timer Enable bit
  6258                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6259                           ;	Watchdog Timer Postscale Select bits
  6260                           ;	WDTPS = 32768, 1:32768
  6261  300003                     	org	3145731
  6262  300003  1E                 	db	30
  6263                           
  6264                           ; Padding undefined space
  6265  300004                     	org	3145732
  6266  300004  FF                 	db	255
  6267                           
  6268                           ;Config register CONFIG3H @ 0x300005
  6269                           ;	CCP2 MUX bit
  6270                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  6271                           ;	PORTB A/D Enable bit
  6272                           ;	PBAD = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  6273                           ;	MCLR Pin Enable bit
  6274                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6275  300005                     	org	3145733
  6276  300005  81                 	db	129
  6277                           
  6278                           ;Config register CONFIG4L @ 0x300006
  6279                           ;	Stack Full/Underflow Reset Enable bit
  6280                           ;	STVR = ON, Stack full/underflow will cause Reset
  6281                           ;	Single-Supply ICSP Enable bit
  6282                           ;	LVP = OFF, Single-Supply ICSP disabled
  6283                           ;	Background Debugger Enable bit
  6284                           ;	DEBUG = 0x1, unprogrammed default
  6285  300006                     	org	3145734
  6286  300006  81                 	db	129
  6287                           
  6288                           ; Padding undefined space
  6289  300007                     	org	3145735
  6290  300007  FF                 	db	255
  6291                           
  6292                           ;Config register CONFIG5L @ 0x300008
  6293                           ;	Code Protection bit
  6294                           ;	CP0 = OFF, Block 0 (000200-0007FFh) not code-protected
  6295                           ;	Code Protection bit
  6296                           ;	CP1 = OFF, Block 1 (000800-000FFFh) not code-protected
  6297                           ;	Code Protection bit
  6298                           ;	CP2 = OFF, Block 2 (001000-0017FFh) not code-protected
  6299                           ;	Code Protection bit
  6300                           ;	CP3 = OFF, Block 3 (001800-001FFFh) not code-protected
  6301  300008                     	org	3145736
  6302  300008  0F                 	db	15
  6303                           
  6304                           ;Config register CONFIG5H @ 0x300009
  6305                           ;	Boot Block Code Protection bit
  6306                           ;	CPB = OFF, Boot block (000000-0001FFh) is not code-protected
  6307                           ;	Data EEPROM Code Protection bit
  6308                           ;	CPD = OFF, Data EEPROM is not code-protected
  6309  300009                     	org	3145737
  6310  300009  C0                 	db	192
  6311                           
  6312                           ;Config register CONFIG6L @ 0x30000A
  6313                           ;	Write Protection bit
  6314                           ;	WRT0 = OFF, Block 0 (000200-0007FFh) not write-protected
  6315                           ;	Write Protection bit
  6316                           ;	WRT1 = OFF, Block 1 (000800-000FFFh) not write-protected
  6317                           ;	Write Protection bit
  6318                           ;	WRT2 = OFF, Block 2 (001000-0017FFh) not write-protected
  6319                           ;	Write Protection bit
  6320                           ;	WRT3 = OFF, Block 3 (001800-001FFFh) not write-protected
  6321  30000A                     	org	3145738
  6322  30000A  0F                 	db	15
  6323                           
  6324                           ;Config register CONFIG6H @ 0x30000B
  6325                           ;	Configuration Register Write Protection bit
  6326                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  6327                           ;	Boot Block Write Protection bit
  6328                           ;	WRTB = OFF, Boot block (000000-0001FFh) is not write-protected
  6329                           ;	Data EEPROM Write Protection bit
  6330                           ;	WRTD = OFF, Data EEPROM is not write-protected
  6331  30000B                     	org	3145739
  6332  30000B  E0                 	db	224
  6333                           
  6334                           ;Config register CONFIG7L @ 0x30000C
  6335                           ;	Table Read Protection bit
  6336                           ;	EBTR0 = OFF, Block 0 (000200-0007FFh) not protected from table reads executed in other
      +                           blocks
  6337                           ;	Table Read Protection bit
  6338                           ;	EBTR1 = OFF, Block 1 (000800-000FFFh) not protected from table reads executed in other
      +                           blocks
  6339                           ;	Table Read Protection bit
  6340                           ;	EBTR2 = OFF, Block 2 (001000-0017FFh) not protected from table reads executed in other
      +                           blocks
  6341                           ;	Table Read Protection bit
  6342                           ;	EBTR3 = OFF, Block 3 (001800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6343  30000C                     	org	3145740
  6344  30000C  0F                 	db	15
  6345                           
  6346                           ;Config register CONFIG7H @ 0x30000D
  6347                           ;	Boot Block Table Read Protection bit
  6348                           ;	EBTRB = OFF, Boot block (000000-0001FFh) is not protected from table reads executed in
      +                           other blocks
  6349  30000D                     	org	3145741
  6350  30000D  40                 	db	64
  6351                           tosu	equ	0xFFF
  6352                           tosh	equ	0xFFE
  6353                           tosl	equ	0xFFD
  6354                           stkptr	equ	0xFFC
  6355                           pclatu	equ	0xFFB
  6356                           pclath	equ	0xFFA
  6357                           pcl	equ	0xFF9
  6358                           tblptru	equ	0xFF8
  6359                           tblptrh	equ	0xFF7
  6360                           tblptrl	equ	0xFF6
  6361                           tablat	equ	0xFF5
  6362                           prodh	equ	0xFF4
  6363                           prodl	equ	0xFF3
  6364                           indf0	equ	0xFEF
  6365                           postinc0	equ	0xFEE
  6366                           postdec0	equ	0xFED
  6367                           preinc0	equ	0xFEC
  6368                           plusw0	equ	0xFEB
  6369                           fsr0h	equ	0xFEA
  6370                           fsr0l	equ	0xFE9
  6371                           wreg	equ	0xFE8
  6372                           indf1	equ	0xFE7
  6373                           postinc1	equ	0xFE6
  6374                           postdec1	equ	0xFE5
  6375                           preinc1	equ	0xFE4
  6376                           plusw1	equ	0xFE3
  6377                           fsr1h	equ	0xFE2
  6378                           fsr1l	equ	0xFE1
  6379                           bsr	equ	0xFE0
  6380                           indf2	equ	0xFDF
  6381                           postinc2	equ	0xFDE
  6382                           postdec2	equ	0xFDD
  6383                           preinc2	equ	0xFDC
  6384                           plusw2	equ	0xFDB
  6385                           fsr2h	equ	0xFDA
  6386                           fsr2l	equ	0xFD9
  6387                           status	equ	0xFD8

Data Sizes:
    Strings     255
    Constant    88
    Data        9
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     23      79
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    cgrom_char@symbol	PTR unsigned char  size(2) Largest target is 8
		 -> symbol_4(CODE[8]), 

    lcdPrint@t	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_19(CODE[16]), STR_18(CODE[15]), STR_17(CODE[11]), STR_16(CODE[13]), 
		 -> STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[15]), STR_12(CODE[15]), 
		 -> STR_11(CODE[14]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[16]), 
		 -> STR_7(CODE[7]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[13]), 
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    ds18b20_crc8@data_in	PTR unsigned char  size(1) Largest target is 9
		 -> ds18b20_readrom@temp_rom(COMRAM[8]), scratch(COMRAM[9]), 

    ds18b20_get_temp@minus	PTR unsigned char  size(1) Largest target is 1
		 -> minus_2(COMRAM[1]), minus_1(COMRAM[1]), 

    ds18b20_readTemp@time_flag	PTR unsigned char  size(1) Largest target is 1
		 -> time_flag(COMRAM[1]), 

    ds18b20_readTemp@timer_val	PTR unsigned char  size(1) Largest target is 1
		 -> timer_val(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_ds18b20_readrom
    _lcd_putc->_lcdWrite
    _lcdPrint->_lcd_gotoxy
    _lcd_gotoxy->_lcdWrite
    _ds18b20_readrom->_ds18b20_crc8
    _ds18b20_readTemp->_ds18b20_crc8
    ___lwmod->___lwdiv
    ___lbmod->___lbdiv
    _Main_init->_init_ds18b20
    _init_ds18b20->_write_byte
    _write_byte->_write_bit
    _initLCD->_clearLCD
    _clearLCD->_lcdWrite
    _cgrom_char->_lcdWrite
    _lcdWrite->_lcdNibble

Critical Paths under _myIntL in COMRAM

    None.

Critical Paths under _myIntH in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIntL in BANK0

    None.

Critical Paths under _myIntH in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIntL in BANK1

    None.

Critical Paths under _myIntH in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   33162
                                             20 COMRAM     3     3      0
                           _Delay_ms
                          _Main_init
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                           _clearLCD
                   _ds18b20_get_temp
                   _ds18b20_readTemp
                    _ds18b20_readrom
                         _key_GetKey
                          _key_press
                           _lcdPrint
                         _lcd_gotoxy
                           _lcd_putc
                           _read_eep
                          _write_eep
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             1     1      0    1060
                                              7 COMRAM     1     1      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             6     4      2    6056
                                             10 COMRAM     6     4      2
                           _lcdWrite
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           3     2      1    3463
                                              7 COMRAM     3     2      1
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _key_press                                            1     1      0      45
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _key_GetKey                                           1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ds18b20_readrom                                     10    10      0    1898
                                             10 COMRAM    10    10      0
                           _Delay_ms
                       _ds18b20_crc8
                           _ow_reset
                          _read_byte
                         _write_byte
                          _write_eep
 ---------------------------------------------------------------------------------
 (1) _write_eep                                            2     1      1     576
                                              3 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             5     3      2     350
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ds18b20_readTemp                                     8     6      2    1234
                                             10 COMRAM     8     6      2
                       _ds18b20_crc8
                           _ow_reset
                          _read_byte
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            4     4      0      60
                                              3 COMRAM     4     4      0
                           _read_bit
 ---------------------------------------------------------------------------------
 (3) _read_bit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_crc8                                         7     5      2     557
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _ds18b20_get_temp                                     6     4      2     423
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    5783
                                             10 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    4266
                                              3 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1    1375
                                              7 COMRAM     4     3      1
                            ___lbdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     770
                                              3 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Main_init                                            0     0      0    4256
                         _cgrom_char
                            _initLCD
                       _init_ds18b20
 ---------------------------------------------------------------------------------
 (2) _init_ds18b20                                         4     4      0     839
                                              9 COMRAM     4     4      0
                           _ow_reset
                           _read_eep
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0      90
                                              4 COMRAM     5     5      0
                          _write_bit
 ---------------------------------------------------------------------------------
 (3) _write_bit                                            1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_eep                                             2     0      2     554
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ow_reset                                             1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0    2136
                                              8 COMRAM     1     1      0
                           _clearLCD
                          _lcdNibble
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _clearLCD                                             1     1      0    1038
                                              7 COMRAM     1     1      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (2) _cgrom_char                                           4     1      3    1281
                                              7 COMRAM     4     1      3
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (2) _lcdWrite                                             2     1      1    1038
                                              5 COMRAM     2     1      1
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      60
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myIntL                                               3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _myIntH                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _Main_init
     _cgrom_char
       _lcdWrite
         _lcdNibble
     _initLCD
       _clearLCD
         _lcdWrite
           _lcdNibble
       _lcdNibble
       _lcdWrite
         _lcdNibble
     _init_ds18b20
       _ow_reset
       _read_eep
       _write_byte
         _write_bit
   ___lbdiv
   ___lbmod
     ___lbdiv (ARG)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _clearLCD
     _lcdWrite
       _lcdNibble
   _ds18b20_get_temp
   _ds18b20_readTemp
     _ds18b20_crc8
     _ow_reset
     _read_byte
       _read_bit
     _write_byte
       _write_bit
   _ds18b20_readrom
     _Delay_ms
     _ds18b20_crc8
     _ow_reset
     _read_byte
       _read_bit
     _write_byte
       _write_bit
     _write_eep
   _key_GetKey
   _key_press
   _lcdPrint
     _lcdWrite
       _lcdNibble
     _lcd_gotoxy
       _lcdWrite
         _lcdNibble
   _lcd_gotoxy
     _lcdWrite
       _lcdNibble
   _lcd_putc
     _lcdWrite
       _lcdNibble
   _read_eep
   _write_eep

 _myIntL (ROOT)

 _myIntH (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       2       0        1.6%
COMRAM              7E     17      4F       1       62.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F       7        0.0%
DATA                 0      0      4F       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Dec 21 20:10:53 2020

                       PL2 0D12                         PL4 0D22                         PL6 0D2A  
                       PL8 0D36                         u10 1112                         u30 1128  
                       u50 1140                         u28 1114                         u70 1154  
                       u48 112A                         u68 1142                         u88 1156  
                       bsr 000FE0               lcdWrite@byte 0034                        PL10 0D42  
                      PL20 0D6C                        PL12 0D4E                        PL30 0D90  
                      PL22 0D72                        PL14 1068                        PL40 0DAA  
                      PL32 0D98                        PL24 0FC6                        PL16 0D58  
                      PL50 0DD0                        PL42 0DB4                        PL34 12C4  
                      PL26 0D78                        PL18 0D62                        PL60 1076  
                      PL52 0DD8                        PL44 0DBE                        PL36 0DA2  
                      PL28 0D84                        PL62 0DF8                        PL54 0DE0  
                      PL46 0DC4                        PL38 1176                        PL56 0DE8  
                      PL48 0DCA                        PL58 0DF0               lcdWrite@type 0033  
                      l200 0814                        l202 0822                        l213 087A  
                      l241 09E2                        l233 0994                        l180 0604  
                      l172 038A                        l173 07A2                        l423 15A6  
                      l431 160C                        l191 07E4                        l184 061C  
                      l168 0370                        l353 121C                        l530 1316  
                      l195 07E6                        l524 12D8                        l365 0F26  
                      l197 0802                        l189 0830                        l526 12E0  
                      l199 0804                        l528 12EA                        l289 1590  
                      l386 10B0                        l394 1342                        u124 1476  
                      u125 1472                        u234 1448                        u235 1444  
                      wreg 000FE8            lcdNibble@nibble 0032              write_eep@data 0031  
              lcd_gotoxy@x 0036                lcd_gotoxy@y 0035                       l1020 13A6  
                     l1030 1422                       l1312 15F4                       l3012 0898  
                     l3004 0872                       l3014 08A0                       l3200 0B64  
                     l3016 08A8                       l1346 1466                       l3210 0B8A  
                     l3106 09E6                       l3042 08FE                       l3034 08DA  
                     l3026 08CA                       l1620 1302                       l3212 0B98  
                     l3140 0A58                       l3124 0A18                       l3116 0A08  
                     l3044 0902                       l2422 121A                       l2502 1350  
                     l2510 135C                       l1614 12EC                       l3230 0C00  
                     l3222 0BF0                       l2432 121E                       l2600 104E  
                     l3080 098E                       l3072 0970                       l1474 1430  
                     l1626 1308                       l2602 105E                       l3074 0978  
                     l3058 0930                       l2604 1062                       l3156 0AAC  
                     l3068 094E                       l2366 15A8                       l1478 1450  
                     l3270 0CCA                       l3238 0C20                       l3182 0B18  
                     l3174 0AF8                       l3166 0AE8                       l3086 09AA  
                     l2480 14DC                       l2800 154C                       l2608 0EFA  
                     l2392 157E                       l3256 0C8E                       l3248 0C7E  
                     l3192 0B54                       l3088 09B0                       l2706 10C6  
                     l2490 1322                       l2626 0F28                       l2386 160E  
                     l3274 0CDA                       l2812 1376                       l2652 0F5A  
                     l2636 0F34                       l2396 1556                       l2732 127A  
                     l2814 137E                       l2494 1332                       l2590 0FF8  
                     l2824 139C                       l2840 1418                       l2832 13FA  
                     l2664 0F98                       l2592 1004                       l2584 0FD6  
                     l2904 0258                       l2834 1402                       l2666 0FA0  
                     l2746 129C                       l2930 056A                       l2914 0384  
                     l2906 02C4                       l2780 14C0                       l2772 14AC  
                     l2596 1020                       l2588 0FEE                       l2932 05DA  
                     l2916 045A                       l2908 0346                       l2758 12C2  
                     l2768 14A6                       l2784 14C8                       l2792 1536  
                     l2688 0FB4                       l2952 073A                       l2928 0504  
                     l2880 0162                       l2872 010A                       l2938 0616  
                     l2948 06BE                       l2892 01AE                       l2956 0794  
                     l2982 0834                       l2886 016C                       l2888 0176  
                     l2996 0862                       STR_1 1F1F                       STR_2 1F2F  
                     STR_3 1F3F                       STR_4 1FC4                       STR_5 1FEF  
                     STR_6 1FE7                       STR_7 1FF7                       STR_8 1F5F  
                     STR_9 1F4F           ow_reset@presence 0031                       u2010 07D6  
                     u2020 07E0            _ds18b20_readrom 1268                       u2050 07FE  
                     _LATA 000F89                       u2310 09CC                       u2230 0960  
                     _LATB 000F8A                       _LATC 000F8B                       u2325 09CE  
                     u1800 1382                       u1720 128A                       u2280 09BC  
                     u2248 0962                       u1830 1406                       u2295 09BE  
                     u1760 14B0                       u1920 047A                       u1690 10A6  
                     u2707 1520                       u2627 0FE2                       u2717 0E0A  
                     u2637 1584                       u2807 0EBC                       u2727 0E1A  
                     u2647 1452                       u1880 01CE                       u2817 0ED0  
                     u2737 0E2A                       u2657 1642                       u2827 0EE8  
                     u2747 0E3A                       u2667 1492                       u2837 162A  
                     u2757 0E50                       u2677 15F6                       u2847 15AA  
                     u2767 0E64                       u2687 1504                       u2857 1164  
                     u2777 0E78                       u2697 1510                       u2867 116E  
                     u2787 0E8C                       u2797 0EA4                       _main 009C  
                     fsr2h 000FDA                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 0050              write_byte@val 0034  
                     prodh 000FF4                       prodl 000FF3                       start 0098  
             ___param_bank 000000           _ds18b20_get_temp 107C           _ds18b20_readTemp 0EF8  
                    ?_main 002E            __end_of___lbdiv 14CC                      _EEADR 000FA9  
                    STR_10 1EFF                      STR_11 1F9C                      STR_12 1F8D  
                    STR_13 1F6F                      STR_14 1FB7                      STR_15 1FD1  
                    STR_16 1FAA                      STR_17 1FDC                      STR_18 1F7E  
                    STR_19 1F0F            __end_of___lbmod 1554                      _T1CON 000FCD  
          __end_of___lwdiv 13B0                      i1l320 0088                      i1l312 006C  
                    i1l313 0062                      i1l307 0086                      i1l308 0054  
                    i1l317 007A                      i1l309 004A            __end_of___lwmod 142C  
                    i2l299 15DE                      _TMR0H 000FD7                      _TMR1H 000FCF  
                    _TMR0L 000FD6                      _TMR1L 000FCE                      _PORTA 000F80  
                    _PORTB 000F81                      _PORTC 000F82                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94            __end_of_initLCD 0EF8  
                    _fract 1EE7                      _snd_b 022D                      _snd_k 022E  
           write_byte@temp 0035             __pbitbssCOMRAM 0228                      tablat 000FF5  
                    ttemp5 0051                      ttemp6 0054                      ttemp7 0058  
                    status 000FD8                      wtemp8 0051            ___lbdiv@divisor 0031  
          ___lbdiv@counter 0033           __end_of_Delay_ms 159C            write_bit@bitval 0031  
          __initialization 13B0            ds18b20_crc8@crc 0037               __end_of_main 0D12  
      ds18b20_crc8@data_in 0031                     ??_main 0042              __activetblptr 000002  
            ?_init_ds18b20 002E    __end_of_ds18b20_readrom 12C4                     _EEDATA 000FA8  
                   _EECON2 000FA7         __size_of_Main_init 0074                     i1l2350 0064  
                   i1l2342 004C                     i1l2358 007C           __end_of_clearLCD 1636  
         __end_of_lcdPrint 1068           __end_of_lcdWrite 15C0           __end_of_lcd_putc 166A  
                ??___lbdiv 0032                  ??___lbmod 0036                  ??___lwdiv 0035  
                ??___lwmod 003C                     _dq_num 004B              Delay_ms@delay 0031  
                   _myIntH 0008                     _myIntL 0018           __end_of_read_eep 165E  
         __end_of_read_bit 164C                     clear_0 13DA                     _select 004D  
                   _rom_dq 0001             ??_init_ds18b20 0037                  ??_initLCD 0036  
             __pdataCOMRAM 0047               __mediumconst 1EA6           __end_of_ow_reset 152E  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
         ___lbdiv@dividend 0032           __end_of_symbol_4 1EFF            ___lbmod@divisor 0035  
               __accesstop 0080    __end_of__initialization 13E0            ___lbmod@counter 0037  
            ___rparam_used 000001           write_eep@address 0032           ds18b20_crc8@data 0034  
           __pcstackCOMRAM 002E              __end_of_fract 1EF7          __end_of_Main_init 11F4  
   ds18b20_crc8@loop_count 0036                 __end_ofPL2 0D22                 __end_ofPL4 0D2A  
               __end_ofPL6 0D36                 __end_ofPL8 0D42           ___lbdiv@quotient 0034  
            ?_ds18b20_crc8 0031         __size_of_lcdNibble 0070       ds18b20_readTemp@temp 003C  
         ?_ds18b20_readrom 002E                  ?_Delay_ms 0031          lcd_gotoxy@address 0037  
 __end_of_ds18b20_get_temp 1106   __end_of_ds18b20_readTemp 0FC6         __size_of_key_press 004E  
       __size_of_read_byte 0036    ds18b20_crc8@bit_counter 0033           ds18b20_readrom@i 0041  
      __end_of_HD44780_CYR 1EE7                    ?_myIntH 002E                    ?_myIntL 002E  
           ??_ds18b20_crc8 0033                 _cgrom_char 14CC                  ?_clearLCD 002E  
               ??_Delay_ms 0033                 _lcd_gotoxy 1600                  ?_lcdPrint 0038  
                ?_lcdWrite 0033                  ?_lcd_putc 002E                  ?_read_eep 0031  
                ?_read_bit 002E                 _key_GetKey 166A       __end_of_init_ds18b20 1268  
        __end_of_lcdNibble 1176         __size_of_write_bit 001E         __size_of_write_eep 0024  
                  __Hparam 0000                    __Lparam 0000                  ?_ow_reset 002E  
                  ___lbdiv 1498                    ___lbmod 152E                    ___lwdiv 1366  
                  ___lwmod 13EE                    __pcinit 13B0            __size_of_myIntH 15DA  
          __size_of_myIntL 0080    ds18b20_readrom@temp_rom 0038                    __ramtop 0200  
                  __ptext0 009C                    __ptext1 165E                    __ptext2 0FD4  
                  __ptext3 1600                    __ptext4 12CE                    __ptext5 166A  
                  __ptext6 1268                    __ptext7 1554                    __ptext8 1578  
                  __ptext9 0EF8                  _T0CONbits 000FD5                    _initLCD 0E00  
                _T1CONbits 000FCD          __end_of_key_press 131C          __end_of_read_byte 1462  
               ??_clearLCD 0035                    _minus_1 004F                    _minus_2 004E  
                  _scratch 0023                    _snd_b_b 022A                    _snd_all 022C  
                  _snd_k_b 022B                    _sub_sel 0021                 ??_lcdPrint 003A  
               ??_lcdWrite 0034             __pintcode_body 15C0                 ??_lcd_putc 0035  
     end_of_initialization 13E0                  Delay_ms@i 0034               key_press@key 0031  
            __Lmediumconst 1EA6                    int_func 15C0                 ??_read_eep 0033  
               ??_read_bit 0031                _HD44780_CYR 1EA7                 ??_ow_reset 0031  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc2 000FDE                 _temp_ready 0011               read_byte@val 0033  
      ds18b20_get_temp@tmp 0034                ?_cgrom_char 0035                  _PORTAbits 000F80  
            key_GetKey@key 0031          __end_of_write_bit 1600          __end_of_write_eep 1578  
         ___lbmod@dividend 0036                  _TRISAbits 000F92                ?_lcd_gotoxy 0035  
              ___lbmod@rem 0038       __end_of_ds18b20_crc8 1366                ?_key_GetKey 002E  
            __pidataCOMRAM 1674                 _write_byte 1462             __end_of_myIntH 15E2  
           __end_of_myIntL 0098                  _Main_init 1180                __end_ofPL10 0D4E  
              __end_ofPL20 0D72                __end_ofPL12 0D58                __end_ofPL30 0D98  
              __end_ofPL22 0D78                __end_ofPL14 1076                __end_ofPL40 0DB4  
              __end_ofPL32 0DA2                __end_ofPL24 0FD4                __end_ofPL16 0D62  
              __end_ofPL50 0DD8                __end_ofPL42 0DBE                __end_ofPL34 12CE  
              __end_ofPL26 0D84                __end_ofPL18 0D6C                __end_ofPL60 107C  
              __end_ofPL52 0DE0                __end_ofPL44 0DC4                __end_ofPL36 0DAA  
              __end_ofPL28 0D90                __end_ofPL62 0E00                __end_ofPL54 0DE8  
              __end_ofPL46 0DCA                __end_ofPL38 1180                __end_ofPL56 0DF0  
              __end_ofPL48 0DD0                __end_ofPL58 0DF8        start_initialization 13B0  
        __size_of_Delay_ms 0024      __size_of_init_ds18b20 0074          ?_ds18b20_get_temp 0031  
       ??_ds18b20_get_temp 0033        __size_of_cgrom_char 0032          ?_ds18b20_readTemp 0038  
       ??_ds18b20_readTemp 003A   ds18b20_crc8@feedback_bit 0035        __size_of_lcd_gotoxy 001C  
                 ??_myIntH 002E                   ??_myIntL 002E            read_eep@address 0031  
               read_byte@i 0034                 ?_Main_init 002E        __size_of_key_GetKey 000A  
             _init_ds18b20 11F4                __pbssCOMRAM 0001          __size_of_clearLCD 001A  
        __size_of_lcdPrint 0094          __size_of_lcdWrite 0024   __size_of_ds18b20_readrom 005C  
        __size_of_lcd_putc 000C      ds18b20_crc8@num_bytes 0032          ds18b20_readTemp@i 003F  
        ds18b20_readTemp@j 003E          __size_of_read_eep 0012          __size_of_read_bit 0016  
         ___lwdiv@dividend 0031                  __pintcode 0008              __pmediumconst 1EA6  
                _lcdNibble 1106                   ?___lbdiv 0031                   ?___lbmod 0035  
                 ?___lwdiv 0031                   ?___lwmod 0038          __size_of_ow_reset 0030  
              __pintcodelo 0018                ?_write_byte 002E                   ?_initLCD 002E  
    __size_of_ds18b20_crc8 004A           ___lwdiv@quotient 0035                  _key_press 12CE  
                _read_byte 142C                   _LATAbits 000F89                   _LATCbits 000F8B  
                _temp1_fix 0017                   _IPR1bits 000F9F                   _PIE1bits 000F9D  
            _set_t_dq2_100 001E                   _PIR1bits 000F9E                  _set_t_dq2 0019  
            _set_t_dq1_dwn 001F                   _RCONbits 000FD0                 ?_lcdNibble 002E  
                _time_flag 002C                  _timer_val 002D                  lcdPrint@t 0038  
             ??_cgrom_char 0038                 _ADCON1bits 000FC1               _ds18b20_crc8 131C  
              ??_Main_init 003B                  _sound_yes 022F                  lcd_putc@c 0035  
              write_byte@i 0036                   _Delay_ms 1578               ??_lcd_gotoxy 0036  
               ?_key_press 002E                  _write_bit 15E2                  _write_eep 1554  
              _INTCON2bits 000FF1                 ?_read_byte 002E                  copy_data0 13C4  
            init_ds18b20@i 003A              init_ds18b20@q 0039        __size_of_write_byte 0036  
             ??_key_GetKey 0031                 _EECON1bits 000FA6         __end_of_cgrom_char 14FE  
                 __Hrparam 0000                   __Lrparam 0000          ??_ds18b20_readrom 0038  
       __end_of_lcd_gotoxy 161C             key_press@count 0015           __size_of___lbdiv 0034  
         __size_of___lbmod 0026           __size_of___lwdiv 004A           __size_of___lwmod 003E  
            _temperature_1 0049              _temperature_2 0047           __size_of_initLCD 00F8  
                 _clearLCD 161C                _key_pressed 001B         __end_of_key_GetKey 1674  
          ___lwdiv@divisor 0033            myIntL@snd_delay 001C            ___lwdiv@counter 0037  
                 __ptext10 142C                   __ptext11 1636                   __ptext20 1462  
                 __ptext12 131C                   __ptext21 15E2                   __ptext13 107C  
                 __ptext22 164C                   __ptext14 13EE                   __ptext23 14FE  
                 __ptext15 1366                   __ptext24 0E00                   __ptext16 152E  
                 __ptext25 161C                   __ptext17 1498                   __ptext26 14CC  
                 __ptext18 1180                   __ptext27 159C                   __ptext19 11F4  
                 __ptext28 1106                   _lcdPrint 0FD4                   _en_snd_b 0228  
                 _lcdWrite 159C                   _en_snd_k 0229                 ?_write_eep 0031  
               ?_write_bit 002E                   _en_sound 0230                   _lcd_putc 165E  
   ds18b20_get_temp@num_dq 0033              __size_of_main 0C76                   _read_bit 1636  
                 _read_eep 164C      ds18b20_readrom@num_dq 0040                   _read_key 0231  
        cgrom_char@address 0037               _set_t_dq2_10 001D               _set_t_dq1_up 0020  
              ??_lcdNibble 0031                   _ow_reset 14FE                   int$flags 0050  
                 _sub_main 004C  __size_of_ds18b20_get_temp 008A                   _symbol_4 1EF7  
__size_of_ds18b20_readTemp 00CE                 _INTCONbits 000FF2                ??_key_press 0031  
              ??_read_byte 0031                   intlevel1 0000                   intlevel2 0000  
         ___lwmod@dividend 0038      ds18b20_get_temp@minus 0031                 _OSCCONbits 000FD3  
ds18b20_readTemp@time_flag 0038  ds18b20_readTemp@timer_val 0039           cgrom_char@symbol 0035  
             ??_write_byte 0032            ___lwmod@divisor 003A       ds18b20_get_temp@temp 0035  
          ___lwmod@counter 003C                cgrom_char@i 0038                ??_write_eep 0032  
              ??_write_bit 0031                _pressed_key 0022         __end_of_write_byte 1498  
