

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Dec 03 13:48:43 2020

Microchip MPLAB XC8 C Compiler v2.31 (Pro license) build 20201012212115 Og9s 
     1                           	processor	18F2320
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47                           	psect	pa_nodes0,global,class=CODE,delta=1
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F2320 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  00125A                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _dq_num
    89  00125A  01                 	db	1
    90                           
    91                           ;initializer for _sub_main
    92  00125B  01                 	db	1
    93                           
    94                           ;initializer for _select
    95  00125C  01                 	db	1
    96                           
    97                           ;initializer for _minus_2
    98  00125D  2B                 	db	43
    99                           
   100                           ;initializer for _minus_1
   101  00125E  2B                 	db	43
   102                           
   103                           	psect	mediumconst
   104  001EDA                     __pmediumconst:
   105                           	callstack 0
   106  001EDA  00                 	db	0
   107  001EDB                     _HD44780_CYR:
   108                           	callstack 0
   109  001EDB  41                 	db	65
   110  001EDC  A0                 	db	160
   111  001EDD  42                 	db	66
   112  001EDE  A1                 	db	161
   113  001EDF  E0                 	db	224
   114  001EE0  45                 	db	69
   115  001EE1  A3                 	db	163
   116  001EE2  A4                 	db	164
   117  001EE3  A5                 	db	165
   118  001EE4  A6                 	db	166
   119  001EE5  4B                 	db	75
   120  001EE6  A7                 	db	167
   121  001EE7  4D                 	db	77
   122  001EE8  48                 	db	72
   123  001EE9  4F                 	db	79
   124  001EEA  A8                 	db	168
   125  001EEB  50                 	db	80
   126  001EEC  43                 	db	67
   127  001EED  54                 	db	84
   128  001EEE  A9                 	db	169
   129  001EEF  AA                 	db	170
   130  001EF0  58                 	db	88
   131  001EF1  E1                 	db	225
   132  001EF2  AB                 	db	171
   133  001EF3  AC                 	db	172
   134  001EF4  E2                 	db	226
   135  001EF5  AD                 	db	173
   136  001EF6  AE                 	db	174
   137  001EF7  62                 	db	98
   138  001EF8  AF                 	db	175
   139  001EF9  B0                 	db	176
   140  001EFA  B1                 	db	177
   141  001EFB  61                 	db	97
   142  001EFC  B2                 	db	178
   143  001EFD  B3                 	db	179
   144  001EFE  B4                 	db	180
   145  001EFF  E3                 	db	227
   146  001F00  65                 	db	101
   147  001F01  B6                 	db	182
   148  001F02  B7                 	db	183
   149  001F03  B8                 	db	184
   150  001F04  B9                 	db	185
   151  001F05  BA                 	db	186
   152  001F06  BB                 	db	187
   153  001F07  BC                 	db	188
   154  001F08  BD                 	db	189
   155  001F09  6F                 	db	111
   156  001F0A  BE                 	db	190
   157  001F0B  70                 	db	112
   158  001F0C  63                 	db	99
   159  001F0D  BF                 	db	191
   160  001F0E  79                 	db	121
   161  001F0F  E4                 	db	228
   162  001F10  78                 	db	120
   163  001F11  E5                 	db	229
   164  001F12  C0                 	db	192
   165  001F13  C1                 	db	193
   166  001F14  E6                 	db	230
   167  001F15  C2                 	db	194
   168  001F16  C3                 	db	195
   169  001F17  C4                 	db	196
   170  001F18  C5                 	db	197
   171  001F19  C6                 	db	198
   172  001F1A  C7                 	db	199
   173  001F1B                     __end_of_HD44780_CYR:
   174                           	callstack 0
   175  001F1B                     _fract:
   176                           	callstack 0
   177  001F1B  00                 	db	0
   178  001F1C  01                 	db	1
   179  001F1D  01                 	db	1
   180  001F1E  02                 	db	2
   181  001F1F  02                 	db	2
   182  001F20  03                 	db	3
   183  001F21  04                 	db	4
   184  001F22  04                 	db	4
   185  001F23  05                 	db	5
   186  001F24  06                 	db	6
   187  001F25  06                 	db	6
   188  001F26  07                 	db	7
   189  001F27  07                 	db	7
   190  001F28  08                 	db	8
   191  001F29  09                 	db	9
   192  001F2A  09                 	db	9
   193  001F2B                     __end_of_fract:
   194                           	callstack 0
   195  001F2B                     _symbol_4:
   196                           	callstack 0
   197  001F2B  06                 	db	6
   198  001F2C  09                 	db	9
   199  001F2D  09                 	db	9
   200  001F2E  06                 	db	6
   201  001F2F  00                 	db	0
   202  001F30  00                 	db	0
   203  001F31  00                 	db	0
   204  001F32  00                 	db	0
   205  001F33                     __end_of_symbol_4:
   206                           	callstack 0
   207  0000                     _EECON2	set	4007
   208  0000                     _EEDATA	set	4008
   209  0000                     _EEADR	set	4009
   210  0000                     _EECON1bits	set	4006
   211  0000                     _TRISAbits	set	3986
   212  0000                     _PORTCbits	set	3970
   213  0000                     _T1CONbits	set	4045
   214  0000                     _PIR1bits	set	3998
   215  0000                     _PIE1bits	set	3997
   216  0000                     _INTCON2bits	set	4081
   217  0000                     _INTCONbits	set	4082
   218  0000                     _TMR0L	set	4054
   219  0000                     _TMR0H	set	4055
   220  0000                     _T0CONbits	set	4053
   221  0000                     _TMR1L	set	4046
   222  0000                     _TMR1H	set	4047
   223  0000                     _T1CON	set	4045
   224  0000                     _PORTAbits	set	3968
   225  0000                     _ADCON1bits	set	4033
   226  0000                     _OSCCONbits	set	4051
   227  0000                     _TRISC	set	3988
   228  0000                     _LATC	set	3979
   229  0000                     _PORTC	set	3970
   230  0000                     _TRISB	set	3987
   231  0000                     _LATB	set	3978
   232  0000                     _TRISA	set	3986
   233  0000                     _LATA	set	3977
   234  0000                     _PORTA	set	3968
   235  0000                     _LATCbits	set	3979
   236  0000                     _PORTB	set	3969
   237  001F33                     STR_9:
   238  001F33  20                 	db	32
   239  001F34  CA                 	db	-54
   240  001F35  EE                 	db	-18
   241  001F36  E4                 	db	-28
   242  001F37  20                 	db	32
   243  001F38  EF                 	db	-17
   244  001F39  F0                 	db	-16
   245  001F3A  EE                 	db	-18
   246  001F3B  F7                 	db	-9
   247  001F3C  E8                 	db	-24
   248  001F3D  F2                 	db	-14
   249  001F3E  E0                 	db	-32
   250  001F3F  ED                 	db	-19
   251  001F40  EE                 	db	-18
   252  001F41  20                 	db	32
   253  001F42  00                 	db	0
   254  001F43                     STR_1:
   255  001F43  2D                 	db	45
   256  001F44  2D                 	db	45
   257  001F45  2D                 	db	45
   258  001F46  D2                 	db	-46
   259  001F47  C5                 	db	-59
   260  001F48  D0                 	db	-48
   261  001F49  CC                 	db	-52
   262  001F4A  CE                 	db	-50
   263  001F4B  CC                 	db	-52
   264  001F4C  C5                 	db	-59
   265  001F4D  D2                 	db	-46
   266  001F4E  D0                 	db	-48
   267  001F4F  2D                 	db	45
   268  001F50  2D                 	db	45
   269  001F51  2D                 	db	45
   270  001F52  00                 	db	0
   271  001F53                     STR_2:
   272  001F53  28                 	db	40
   273  001F54  63                 	db	99	;'c'
   274  001F55  29                 	db	41
   275  001F56  49                 	db	73	;'I'
   276  001F57  76                 	db	118	;'v'
   277  001F58  61                 	db	97	;'a'
   278  001F59  6E                 	db	110	;'n'
   279  001F5A  5F                 	db	95	;'_'
   280  001F5B  66                 	db	102	;'f'
   281  001F5C  64                 	db	100	;'d'
   282  001F5D  20                 	db	32
   283  001F5E  76                 	db	118	;'v'
   284  001F5F  31                 	db	49	;'1'
   285  001F60  2E                 	db	46
   286  001F61  30                 	db	48	;'0'
   287  001F62  00                 	db	0
   288  001F63                     STR_3:
   289  001F63  C4                 	db	-60
   290  001F64  E0                 	db	-32
   291  001F65  F2                 	db	-14
   292  001F66  F7                 	db	-9
   293  001F67  E8                 	db	-24
   294  001F68  EA                 	db	-22
   295  001F69  20                 	db	32
   296  001F6A  31                 	db	49	;'1'
   297  001F6B  2C                 	db	44
   298  001F6C  20                 	db	32
   299  001F6D  E0                 	db	-32
   300  001F6E  E1                 	db	-31
   301  001F6F  EE                 	db	-18
   302  001F70  20                 	db	32
   303  001F71  32                 	db	50	;'2'
   304  001F72  00                 	db	0
   305  001F73                     STR_7:
   306  001F73  20                 	db	32
   307  001F74  CF                 	db	-49
   308  001F75  EE                 	db	-18
   309  001F76  F0                 	db	-16
   310  001F77  69                 	db	105	;'i'
   311  001F78  E3                 	db	-29
   312  001F79  20                 	db	32
   313  001F7A  20                 	db	32
   314  001F7B  D1                 	db	-47
   315  001F7C  E8                 	db	-24
   316  001F7D  E3                 	db	-29
   317  001F7E  ED                 	db	-19
   318  001F7F  E0                 	db	-32
   319  001F80  EB                 	db	-21
   320  001F81  00                 	db	0
   321  001F82                     STR_10:
   322  001F82  20                 	db	32
   323  001F83  20                 	db	32
   324  001F84  C3                 	db	-61
   325  001F85  69                 	db	105	;'i'
   326  001F86  F1                 	db	-15
   327  001F87  F2                 	db	-14
   328  001F88  E5                 	db	-27
   329  001F89  F0                 	db	-16
   330  001F8A  E5                 	db	-27
   331  001F8B  E7                 	db	-25
   332  001F8C  E8                 	db	-24
   333  001F8D  F1                 	db	-15
   334  001F8E  20                 	db	32
   335  001F8F  20                 	db	32
   336  001F90  00                 	db	0
   337  001F91                     STR_16:
   338  001F91  D2                 	db	-46
   339  001F92  E5                 	db	-27
   340  001F93  EC                 	db	-20
   341  001F94  EF                 	db	-17
   342  001F95  20                 	db	32
   343  001F96  CD                 	db	-51
   344  001F97  E8                 	db	-24
   345  001F98  E7                 	db	-25
   346  001F99  3A                 	db	58	;':'
   347  001F9A  20                 	db	32
   348  001F9B  20                 	db	32
   349  001F9C  20                 	db	32
   350  001F9D  20                 	db	32
   351  001F9E  20                 	db	32
   352  001F9F  00                 	db	0
   353  001FA0                     STR_11:
   354  001FA0  CA                 	db	-54
   355  001FA1  EE                 	db	-18
   356  001FA2  EB                 	db	-21
   357  001FA3  28                 	db	40
   358  001FA4  31                 	db	49	;'1'
   359  001FA5  29                 	db	41
   360  001FA6  2F                 	db	47
   361  001FA7  C3                 	db	-61
   362  001FA8  EE                 	db	-18
   363  001FA9  EB                 	db	-21
   364  001FAA  28                 	db	40
   365  001FAB  32                 	db	50	;'2'
   366  001FAC  29                 	db	41
   367  001FAD  3A                 	db	58	;':'
   368  001FAE  00                 	db	0
   369  001FAF                     STR_14:
   370  001FAF  20                 	db	32
   371  001FB0  20                 	db	32
   372  001FB1  20                 	db	32
   373  001FB2  20                 	db	32
   374  001FB3  C3                 	db	-61
   375  001FB4  EE                 	db	-18
   376  001FB5  EB                 	db	-21
   377  001FB6  EE                 	db	-18
   378  001FB7  E2                 	db	-30
   379  001FB8  E0                 	db	-32
   380  001FB9  20                 	db	32
   381  001FBA  20                 	db	32
   382  001FBB  00                 	db	0
   383  001FBC                     STR_12:
   384  001FBC  20                 	db	32
   385  001FBD  20                 	db	32
   386  001FBE  20                 	db	32
   387  001FBF  20                 	db	32
   388  001FC0  CA                 	db	-54
   389  001FC1  EE                 	db	-18
   390  001FC2  EB                 	db	-21
   391  001FC3  EE                 	db	-18
   392  001FC4  ED                 	db	-19
   393  001FC5  E0                 	db	-32
   394  001FC6  20                 	db	32
   395  001FC7  20                 	db	32
   396  001FC8  00                 	db	0
   397  001FC9                     STR_4:
   398  001FC9  C2                 	db	-62
   399  001FCA  E8                 	db	-24
   400  001FCB  E1                 	db	-31
   401  001FCC  69                 	db	105	;'i'
   402  001FCD  F0                 	db	-16
   403  001FCE  20                 	db	32
   404  001FCF  31                 	db	49	;'1'
   405  001FD0  38                 	db	56	;'8'
   406  001FD1  42                 	db	66	;'B'
   407  001FD2  32                 	db	50	;'2'
   408  001FD3  30                 	db	48	;'0'
   409  001FD4  3A                 	db	58	;':'
   410  001FD5  00                 	db	0
   411  001FD6                     STR_8:
   412  001FD6  20                 	db	32
   413  001FD7  20                 	db	32
   414  001FD8  4F                 	db	79	;'O'
   415  001FD9  4B                 	db	75	;'K'
   416  001FDA  20                 	db	32
   417  001FDB  20                 	db	32
   418  001FDC  20                 	db	32
   419  001FDD  20                 	db	32
   420  001FDE  20                 	db	32
   421  001FDF  20                 	db	32
   422  001FE0  55                 	db	85	;'U'
   423  001FE1  50                 	db	80	;'P'
   424  001FE2  00                 	db	0
   425  001FE3                     STR_13:
   426  001FE3  D2                 	db	-46
   427  001FE4  E5                 	db	-27
   428  001FE5  EC                 	db	-20
   429  001FE6  EF                 	db	-17
   430  001FE7  20                 	db	32
   431  001FE8  C2                 	db	-62
   432  001FE9  E5                 	db	-27
   433  001FEA  F0                 	db	-16
   434  001FEB  F5                 	db	-11
   435  001FEC  3A                 	db	58	;':'
   436  001FED  00                 	db	0
   437  001FEE                     STR_6:
   438  001FEE  C3                 	db	-61
   439  001FEF  EE                 	db	-18
   440  001FF0  EB                 	db	-21
   441  001FF1  EE                 	db	-18
   442  001FF2  E2                 	db	-30
   443  001FF3  E0                 	db	-32
   444  001FF4  3A                 	db	58	;':'
   445  001FF5  00                 	db	0
   446  001FF6                     STR_5:
   447  001FF6  CA                 	db	-54
   448  001FF7  EE                 	db	-18
   449  001FF8  EB                 	db	-21
   450  001FF9  EE                 	db	-18
   451  001FFA  ED                 	db	-19
   452  001FFB  E0                 	db	-32
   453  001FFC  3A                 	db	58	;':'
   454  001FFD  00                 	db	0
   455  001FFE  00                 	db	0	; dummy byte at the end
   456  0000                     
   457                           ; #config settings
   458                           
   459                           	psect	cinit
   460  000FF8                     __pcinit:
   461                           	callstack 0
   462  000FF8                     start_initialization:
   463                           	callstack 0
   464  000FF8                     __initialization:
   465                           	callstack 0
   466                           
   467                           ; Initialize objects allocated to COMRAM (5 bytes)
   468                           ; load TBLPTR registers with __pidataCOMRAM
   469  000FF8  0E5A               	movlw	low __pidataCOMRAM
   470  000FFA  6EF6               	movwf	tblptrl,c
   471  000FFC  0E12               	movlw	high __pidataCOMRAM
   472  000FFE  6EF7               	movwf	tblptrh,c
   473  001000  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   474  001002  6EF8               	movwf	tblptru,c
   475  001004  EE00  F045         	lfsr	0,__pdataCOMRAM
   476  001008  EE10 F005          	lfsr	1,5
   477  00100C                     copy_data0:
   478  00100C  0009               	tblrd		*+
   479  00100E  CFF5 FFEE          	movff	tablat,postinc0
   480  001012  50E5               	movf	postdec1,w,c
   481  001014  50E1               	movf	fsr1l,w,c
   482  001016  E1FA               	bnz	copy_data0
   483                           
   484                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   485  001018  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   486                           
   487                           ; Clear objects allocated to COMRAM (49 bytes)
   488  00101A  EE00  F001         	lfsr	0,__pbssCOMRAM
   489  00101E  0E31               	movlw	49
   490  001020                     clear_0:
   491  001020  6AEE               	clrf	postinc0,c
   492  001022  06E8               	decf	wreg,f,c
   493  001024  E1FD               	bnz	clear_0
   494  001026                     end_of_initialization:
   495                           	callstack 0
   496  001026                     __end_of__initialization:
   497                           	callstack 0
   498  001026  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   499  001028  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   500  00102A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   501  00102C  6EF8               	movwf	tblptru,c
   502  00102E  0100               	movlb	0
   503  001030  EF2F  F000         	goto	_main	;jump to C main() function
   504                           
   505                           	psect	bitbssCOMRAM
   506  000250                     __pbitbssCOMRAM:
   507                           	callstack 0
   508  000250                     _sound_yes:
   509                           	callstack 0
   510  000250                     	ds	1
   511  000251                     _en_sound:
   512                           	callstack 0
   513  000251                     	ds	1
   514  000252                     _read_key:
   515                           	callstack 0
   516  000252                     	ds	1
   517                           
   518                           	psect	bssCOMRAM
   519  000001                     __pbssCOMRAM:
   520                           	callstack 0
   521  000001                     _rom_dq:
   522                           	callstack 0
   523  000001                     	ds	16
   524  000011                     _temp_ready:
   525                           	callstack 0
   526  000011                     	ds	4
   527  000015                     key_press@count:
   528                           	callstack 0
   529  000015                     	ds	2
   530  000017                     _temp2_fix:
   531                           	callstack 0
   532  000017                     	ds	2
   533  000019                     _temp1_fix:
   534                           	callstack 0
   535  000019                     	ds	2
   536  00001B                     _temperature_2:
   537                           	callstack 0
   538  00001B                     	ds	2
   539  00001D                     _temperature_1:
   540                           	callstack 0
   541  00001D                     	ds	2
   542  00001F                     _key_pressed:
   543                           	callstack 0
   544  00001F                     	ds	1
   545  000020                     myInt@snd_delay:
   546                           	callstack 0
   547  000020                     	ds	1
   548  000021                     _set_t_dq2_dwn:
   549                           	callstack 0
   550  000021                     	ds	1
   551  000022                     _set_t_dq2_up:
   552                           	callstack 0
   553  000022                     	ds	1
   554  000023                     _set_t_dq1_dwn:
   555                           	callstack 0
   556  000023                     	ds	1
   557  000024                     _set_t_dq1_up:
   558                           	callstack 0
   559  000024                     	ds	1
   560  000025                     _sub_sel:
   561                           	callstack 0
   562  000025                     	ds	1
   563  000026                     _pressed_key:
   564                           	callstack 0
   565  000026                     	ds	1
   566  000027                     _scratch:
   567                           	callstack 0
   568  000027                     	ds	9
   569  000030                     _time_flag:
   570                           	callstack 0
   571  000030                     	ds	1
   572  000031                     _timer_val:
   573                           	callstack 0
   574  000031                     	ds	1
   575                           
   576                           	psect	dataCOMRAM
   577  000045                     __pdataCOMRAM:
   578                           	callstack 0
   579  000045                     _dq_num:
   580                           	callstack 0
   581  000045                     	ds	1
   582  000046                     _sub_main:
   583                           	callstack 0
   584  000046                     	ds	1
   585  000047                     _select:
   586                           	callstack 0
   587  000047                     	ds	1
   588  000048                     _minus_2:
   589                           	callstack 0
   590  000048                     	ds	1
   591  000049                     _minus_1:
   592                           	callstack 0
   593  000049                     	ds	1
   594                           
   595                           	psect	cstackCOMRAM
   596  000032                     __pcstackCOMRAM:
   597                           	callstack 0
   598  000032                     ??_read_byte:
   599  000032                     ??_lcdNibble:
   600  000032                     ?_ds18b20_get_temp:
   601                           	callstack 0
   602  000032                     ?___lwdiv:
   603                           	callstack 0
   604  000032                     ds18b20_get_temp@minus:
   605                           	callstack 0
   606  000032                     ds18b20_crc8@data_in:
   607                           	callstack 0
   608  000032                     ow_reset@presence:
   609                           	callstack 0
   610  000032                     write_bit@bitval:
   611                           	callstack 0
   612  000032                     write_eep@data:
   613                           	callstack 0
   614  000032                     key_press@key:
   615                           	callstack 0
   616  000032                     key_GetKey@key:
   617                           	callstack 0
   618  000032                     ___lbdiv@divisor:
   619                           	callstack 0
   620  000032                     Delay_ms@delay:
   621                           	callstack 0
   622  000032                     read_eep@address:
   623                           	callstack 0
   624  000032                     ___lwdiv@dividend:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x0
   628  000032                     	ds	1
   629  000033                     ??_write_byte:
   630  000033                     ds18b20_crc8@num_bytes:
   631                           	callstack 0
   632  000033                     lcdNibble@nibble:
   633                           	callstack 0
   634  000033                     write_eep@address:
   635                           	callstack 0
   636  000033                     ___lbdiv@dividend:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x1
   640  000033                     	ds	1
   641  000034                     ??_Delay_ms:
   642  000034                     ds18b20_get_temp@num_dq:
   643                           	callstack 0
   644  000034                     ds18b20_crc8@bit_counter:
   645                           	callstack 0
   646  000034                     lcdWrite@type:
   647                           	callstack 0
   648  000034                     read_byte@val:
   649                           	callstack 0
   650  000034                     ___lbdiv@counter:
   651                           	callstack 0
   652  000034                     ___lwdiv@divisor:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x2
   656  000034                     	ds	1
   657  000035                     ds18b20_get_temp@tmp:
   658                           	callstack 0
   659  000035                     ds18b20_crc8@data:
   660                           	callstack 0
   661  000035                     lcdWrite@byte:
   662                           	callstack 0
   663  000035                     read_byte@i:
   664                           	callstack 0
   665  000035                     write_byte@val:
   666                           	callstack 0
   667  000035                     ___lbdiv@quotient:
   668                           	callstack 0
   669  000035                     Delay_ms@i:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x3
   673  000035                     	ds	1
   674  000036                     ??_clearLCD:
   675  000036                     ds18b20_crc8@feedback_bit:
   676                           	callstack 0
   677  000036                     lcd_gotoxy@y:
   678                           	callstack 0
   679  000036                     lcd_putc@c:
   680                           	callstack 0
   681  000036                     write_byte@temp:
   682                           	callstack 0
   683  000036                     ___lbmod@divisor:
   684                           	callstack 0
   685  000036                     ds18b20_get_temp@temp:
   686                           	callstack 0
   687  000036                     cgrom_char@symbol:
   688                           	callstack 0
   689  000036                     ___lwdiv@quotient:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x4
   693  000036                     	ds	1
   694  000037                     ??_initLCD:
   695  000037                     ds18b20_crc8@loop_count:
   696                           	callstack 0
   697  000037                     lcd_gotoxy@x:
   698                           	callstack 0
   699  000037                     write_byte@i:
   700                           	callstack 0
   701  000037                     ___lbmod@dividend:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x5
   705  000037                     	ds	1
   706  000038                     ??_init_ds18b20:
   707  000038                     ds18b20_crc8@crc:
   708                           	callstack 0
   709  000038                     lcd_gotoxy@address:
   710                           	callstack 0
   711  000038                     cgrom_char@address:
   712                           	callstack 0
   713  000038                     ___lbmod@counter:
   714                           	callstack 0
   715  000038                     ___lwdiv@counter:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x6
   719  000038                     	ds	1
   720  000039                     ?___lwmod:
   721                           	callstack 0
   722  000039                     ds18b20_readTemp@time_flag:
   723                           	callstack 0
   724  000039                     cgrom_char@i:
   725                           	callstack 0
   726  000039                     ___lbmod@rem:
   727                           	callstack 0
   728  000039                     lcdPrint@t:
   729                           	callstack 0
   730  000039                     ___lwmod@dividend:
   731                           	callstack 0
   732  000039                     ds18b20_readrom@temp_rom:
   733                           	callstack 0
   734                           
   735                           ; 8 bytes @ 0x7
   736  000039                     	ds	1
   737  00003A                     init_ds18b20@q:
   738                           	callstack 0
   739  00003A                     ds18b20_readTemp@timer_val:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x8
   743  00003A                     	ds	1
   744  00003B                     ??_lcdPrint:
   745  00003B                     ??_ds18b20_readTemp:
   746  00003B                     init_ds18b20@i:
   747                           	callstack 0
   748  00003B                     ___lwmod@divisor:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x9
   752  00003B                     	ds	1
   753  00003C                     
   754                           ; 1 bytes @ 0xA
   755  00003C                     	ds	1
   756  00003D                     ___lwmod@counter:
   757                           	callstack 0
   758  00003D                     ds18b20_readTemp@temp:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0xB
   762  00003D                     	ds	2
   763  00003F                     ds18b20_readTemp@j:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0xD
   767  00003F                     	ds	1
   768  000040                     ds18b20_readTemp@i:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0xE
   772  000040                     	ds	1
   773  000041                     ds18b20_readrom@num_dq:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0xF
   777  000041                     	ds	1
   778  000042                     ds18b20_readrom@i:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x10
   782  000042                     	ds	1
   783  000043                     ??_main:
   784                           
   785                           ; 1 bytes @ 0x11
   786  000043                     	ds	2
   787                           
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 31 in file "main.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1
   807 ;;      Params:         0       0       0
   808 ;;      Locals:         0       0       0
   809 ;;      Temps:          2       0       0
   810 ;;      Totals:         2       0       0
   811 ;;Total ram usage:        2 bytes
   812 ;; Hardware stack levels required when called:    6
   813 ;; This function calls:
   814 ;;		_Delay_ms
   815 ;;		_Main_init
   816 ;;		___lbdiv
   817 ;;		___lbmod
   818 ;;		___lwdiv
   819 ;;		___lwmod
   820 ;;		_clearLCD
   821 ;;		_ds18b20_get_temp
   822 ;;		_ds18b20_readTemp
   823 ;;		_ds18b20_readrom
   824 ;;		_key_GetKey
   825 ;;		_key_press
   826 ;;		_lcdPrint
   827 ;;		_lcd_gotoxy
   828 ;;		_lcd_putc
   829 ;;		_read_eep
   830 ;;		_write_eep
   831 ;; This function is called by:
   832 ;;		Startup code after reset
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text0
   837  00005E                     __ptext0:
   838                           	callstack 0
   839  00005E                     _main:
   840                           	callstack 25
   841                           
   842                           ;main.c: 32: Main_init();
   843                           
   844                           ;incstack = 0
   845  00005E  EC38  F007         	call	_Main_init	;wreg free
   846                           
   847                           ;main.c: 34: lcd_gotoxy(1, 1);
   848  000062  0E01               	movlw	1
   849  000064  6E36               	movwf	lcd_gotoxy@y^0,c
   850  000066  ECF3  F008         	call	_lcd_gotoxy
   851                           
   852                           ;main.c: 35: lcdPrint("---ÒÅÐÌÎÌÅÒÐ---");
   853  00006A  0E43               	movlw	low STR_1
   854  00006C  6E39               	movwf	lcdPrint@t^0,c
   855  00006E  0E1F               	movlw	high STR_1
   856  000070  6E3A               	movwf	(lcdPrint@t+1)^0,c
   857  000072  ECF4  F005         	call	_lcdPrint	;wreg free
   858                           
   859                           ;main.c: 36: lcd_gotoxy(1, 2);
   860  000076  ECB5  F004         	call	PL16	;call to abstracted procedure
   861  00007A  ECF3  F008         	call	_lcd_gotoxy
   862                           
   863                           ;main.c: 37: lcdPrint("(c)Ivan_fd v1.0");
   864  00007E  0E53               	movlw	low STR_2
   865  000080  6E39               	movwf	lcdPrint@t^0,c
   866  000082  0E1F               	movlw	high STR_2
   867  000084  6E3A               	movwf	(lcdPrint@t+1)^0,c
   868  000086  ECF4  F005         	call	_lcdPrint	;wreg free
   869                           
   870                           ;main.c: 38: Delay_ms(2000);
   871  00008A  0E07               	movlw	7
   872  00008C  6E33               	movwf	(Delay_ms@delay+1)^0,c
   873  00008E  0ED0               	movlw	208
   874  000090  6E32               	movwf	Delay_ms@delay^0,c
   875  000092  ECC0  F008         	call	_Delay_ms	;wreg free
   876                           
   877                           ;main.c: 39: clearLCD();
   878  000096  EC01  F009         	call	_clearLCD	;wreg free
   879                           
   880                           ;main.c: 40: if ((PORTB & (1 << 1)) == 0) {
   881  00009A  B281               	btfsc	129,1,c	;volatile
   882  00009C  D017               	goto	l2651
   883                           
   884                           ;main.c: 41: clearLCD();
   885  00009E  EC01  F009         	call	_clearLCD	;wreg free
   886                           
   887                           ;main.c: 42: select = 2;
   888  0000A2  0E02               	movlw	2
   889                           
   890                           ;main.c: 43: lcd_gotoxy(1, 1);
   891  0000A4  ECE6  F004         	call	PL42	;call to abstracted procedure
   892  0000A8  ECF3  F008         	call	_lcd_gotoxy
   893                           
   894                           ;main.c: 44: lcdPrint("Äàò÷èê 1, àáî 2");
   895  0000AC  0E63               	movlw	low STR_3
   896  0000AE  6E39               	movwf	lcdPrint@t^0,c
   897  0000B0  0E1F               	movlw	high STR_3
   898  0000B2  6E3A               	movwf	(lcdPrint@t+1)^0,c
   899  0000B4  ECF4  F005         	call	_lcdPrint	;wreg free
   900                           
   901                           ;main.c: 45: lcd_gotoxy(1, 2);
   902  0000B8  ECB5  F004         	call	PL16	;call to abstracted procedure
   903  0000BC  ECF3  F008         	call	_lcd_gotoxy
   904                           
   905                           ;main.c: 46: lcdPrint("Âèáið 18B20:");
   906  0000C0  0EC9               	movlw	low STR_4
   907  0000C2  6E39               	movwf	lcdPrint@t^0,c
   908  0000C4  0E1F               	movlw	high STR_4
   909  0000C6  6E3A               	movwf	(lcdPrint@t+1)^0,c
   910  0000C8  ECF4  F005         	call	_lcdPrint	;wreg free
   911  0000CC                     l2651:
   912                           
   913                           ;main.c: 48: };main.c: 50: set_t_dq1_up = read_eep(16);
   914  0000CC  6A33               	clrf	(read_eep@address+1)^0,c
   915  0000CE  0E10               	movlw	16
   916  0000D0  6E32               	movwf	read_eep@address^0,c
   917  0000D2  EC19  F009         	call	_read_eep	;wreg free
   918  0000D6  6E24               	movwf	_set_t_dq1_up^0,c
   919                           
   920                           ;main.c: 51: set_t_dq1_dwn = read_eep(17);
   921  0000D8  6A33               	clrf	(read_eep@address+1)^0,c
   922  0000DA  0E11               	movlw	17
   923  0000DC  6E32               	movwf	read_eep@address^0,c
   924  0000DE  EC19  F009         	call	_read_eep	;wreg free
   925  0000E2  6E23               	movwf	_set_t_dq1_dwn^0,c
   926                           
   927                           ;main.c: 52: set_t_dq2_up = read_eep(18);
   928  0000E4  6A33               	clrf	(read_eep@address+1)^0,c
   929  0000E6  0E12               	movlw	18
   930  0000E8  6E32               	movwf	read_eep@address^0,c
   931  0000EA  EC19  F009         	call	_read_eep	;wreg free
   932  0000EE  6E22               	movwf	_set_t_dq2_up^0,c
   933                           
   934                           ;main.c: 53: set_t_dq2_dwn = read_eep(19);
   935  0000F0  6A33               	clrf	(read_eep@address+1)^0,c
   936  0000F2  0E13               	movlw	19
   937  0000F4  6E32               	movwf	read_eep@address^0,c
   938  0000F6  EC19  F009         	call	_read_eep	;wreg free
   939  0000FA  6E21               	movwf	_set_t_dq2_dwn^0,c
   940                           
   941                           ;main.c: 54: temp1_fix = read_eep(20);
   942  0000FC  6A33               	clrf	(read_eep@address+1)^0,c
   943  0000FE  0E14               	movlw	20
   944  000100  6E32               	movwf	read_eep@address^0,c
   945  000102  EC19  F009         	call	_read_eep	;wreg free
   946  000106  6E19               	movwf	_temp1_fix^0,c
   947  000108  6A1A               	clrf	(_temp1_fix+1)^0,c
   948                           
   949                           ;main.c: 55: temp2_fix = read_eep(21);
   950  00010A  6A33               	clrf	(read_eep@address+1)^0,c
   951  00010C  0E15               	movlw	21
   952  00010E  6E32               	movwf	read_eep@address^0,c
   953  000110  EC19  F009         	call	_read_eep	;wreg free
   954  000114  6E17               	movwf	_temp2_fix^0,c
   955  000116  6A18               	clrf	(_temp2_fix+1)^0,c
   956  000118                     l2663:
   957                           
   958                           ;main.c: 60: if (read_key) {
   959  000118  A44A               	btfss	(_read_key/(0+8))^0,_read_key& (0+7),c
   960  00011A  D003               	goto	l2669
   961                           
   962                           ;main.c: 61: key_press();
   963  00011C  EC6C  F007         	call	_key_press	;wreg free
   964                           
   965                           ;main.c: 62: read_key = 0;
   966  000120  944A               	bcf	(_read_key/(0+8))^0,_read_key& (0+7),c
   967  000122                     l2669:
   968                           
   969                           ;main.c: 63: };main.c: 64: pressed_key = key_GetKey();
   970  000122  EC28  F009         	call	_key_GetKey	;wreg free
   971  000126  6E26               	movwf	_pressed_key^0,c
   972                           
   973                           ;main.c: 66: switch (select) {
   974  000128  D3E7               	goto	l2967
   975  00012A                     l2671:
   976                           
   977                           ;main.c: 68: if (ds18b20_readTemp(&time_flag, &timer_val)) {
   978  00012A  0E30               	movlw	low _time_flag
   979  00012C  6E39               	movwf	ds18b20_readTemp@time_flag^0,c
   980  00012E  0E31               	movlw	low _timer_val
   981  000130  6E3A               	movwf	ds18b20_readTemp@timer_val^0,c
   982  000132  EC86  F005         	call	_ds18b20_readTemp	;wreg free
   983  000136  0900               	iorlw	0
   984  000138  E101 D1E2          	bz	l2709
   985                           
   986                           ;main.c: 69: temperature_1 = ds18b20_get_temp(1, &minus_1);
   987  00013C  0E49               	movlw	low _minus_1
   988  00013E  6E32               	movwf	ds18b20_get_temp@minus^0,c
   989  000140  0E01               	movlw	1
   990  000142  EC48  F006         	call	_ds18b20_get_temp
   991  000146  C032  F01D         	movff	?_ds18b20_get_temp,_temperature_1
   992  00014A  C033  F01E         	movff	?_ds18b20_get_temp+1,_temperature_1+1
   993                           
   994                           ;main.c: 70: temperature_2 = ds18b20_get_temp(2, &minus_2);
   995  00014E  0E48               	movlw	low _minus_2
   996  000150  6E32               	movwf	ds18b20_get_temp@minus^0,c
   997  000152  0E02               	movlw	2
   998  000154  EC48  F006         	call	_ds18b20_get_temp
   999  000158  C032  F01B         	movff	?_ds18b20_get_temp,_temperature_2
  1000  00015C  C033  F01C         	movff	?_ds18b20_get_temp+1,_temperature_2+1
  1001  000160  D1CF               	goto	l2709
  1002  000162                     l2675:
  1003                           
  1004                           ;main.c: 79: lcd_gotoxy(1, 1);
  1005  000162  0E01               	movlw	1
  1006  000164  6E36               	movwf	lcd_gotoxy@y^0,c
  1007  000166  ECF3  F008         	call	_lcd_gotoxy
  1008                           
  1009                           ;main.c: 80: lcdPrint("Êîëîíà:");
  1010  00016A  0EF6               	movlw	low STR_5
  1011  00016C  6E39               	movwf	lcdPrint@t^0,c
  1012  00016E  0E1F               	movlw	high STR_5
  1013  000170  6E3A               	movwf	(lcdPrint@t+1)^0,c
  1014  000172  ECF4  F005         	call	_lcdPrint	;wreg free
  1015                           
  1016                           ;main.c: 81: lcd_gotoxy(8, 1);
  1017  000176  ECEA  F004         	call	PL44	;call to abstracted procedure
  1018  00017A  ECF3  F008         	call	_lcd_gotoxy
  1019                           
  1020                           ;main.c: 82: if (!(temperature_1 == 32767)) {
  1021  00017E  281D               	incf	_temperature_1^0,w,c
  1022  000180  E103               	bnz	u1580
  1023  000182  0E7F               	movlw	127
  1024  000184  181E               	xorwf	(_temperature_1+1)^0,w,c
  1025  000186  E062               	bz	l2689
  1026  000188                     u1580:
  1027                           
  1028                           ;main.c: 83: if (((temperature_1 / 100) % 10) == 0) {
  1029  000188  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1030  00018A  0E64               	movlw	100
  1031  00018C  DBD8               	call	PL8	;call to abstracted procedure
  1032  00018E  ECB8  F007         	call	___lwdiv	;wreg free
  1033  000192  DBC9               	call	PL2	;call to abstracted procedure
  1034  000194  ECDD  F007         	call	___lwmod	;wreg free
  1035  000198  5039               	movf	?___lwmod^0,w,c
  1036  00019A  103A               	iorwf	(?___lwmod+1)^0,w,c
  1037  00019C  E127               	bnz	l2687
  1038                           
  1039                           ;main.c: 84: lcd_putc(minus_1);
  1040  00019E  5049               	movf	_minus_1^0,w,c
  1041  0001A0  EC22  F009         	call	_lcd_putc
  1042                           
  1043                           ;main.c: 86: lcd_putc(((temperature_1 / 10) % 10) + 48);
  1044  0001A4  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1045  0001A6  0E0A               	movlw	10
  1046  0001A8  DBCA               	call	PL8	;call to abstracted procedure
  1047  0001AA  ECB8  F007         	call	___lwdiv	;wreg free
  1048  0001AE  DBBB               	call	PL2	;call to abstracted procedure
  1049  0001B0  ECDD  F007         	call	___lwmod	;wreg free
  1050  0001B4  5039               	movf	?___lwmod^0,w,c
  1051  0001B6  0F30               	addlw	48
  1052  0001B8  EC22  F009         	call	_lcd_putc
  1053                           
  1054                           ;main.c: 87: lcd_putc('.');
  1055  0001BC  0E2E               	movlw	46
  1056  0001BE  EC22  F009         	call	_lcd_putc
  1057                           
  1058                           ;main.c: 88: lcd_putc(((temperature_1 % 10) + 48));
  1059  0001C2  DBC9               	call	PL12	;call to abstracted procedure
  1060  0001C4  DBB8               	call	PL6	;call to abstracted procedure
  1061  0001C6  ECDD  F007         	call	___lwmod	;wreg free
  1062  0001CA  5039               	movf	?___lwmod^0,w,c
  1063  0001CC  0F30               	addlw	48
  1064  0001CE  EC22  F009         	call	_lcd_putc
  1065                           
  1066                           ;main.c: 89: lcd_putc(0x01);
  1067  0001D2  0E01               	movlw	1
  1068  0001D4  EC22  F009         	call	_lcd_putc
  1069                           
  1070                           ;main.c: 90: lcd_putc('C');
  1071  0001D8  0E43               	movlw	67
  1072  0001DA  EC22  F009         	call	_lcd_putc
  1073                           
  1074                           ;main.c: 91: lcd_putc(' ');
  1075  0001DE  0E20               	movlw	32
  1076  0001E0  EC22  F009         	call	_lcd_putc
  1077                           
  1078                           ;main.c: 92: lcd_putc(' ');
  1079  0001E4  0E20               	movlw	32
  1080  0001E6  EC22  F009         	call	_lcd_putc
  1081                           
  1082                           ;main.c: 93: } else {
  1083  0001EA  D045               	goto	l148
  1084  0001EC                     l2687:
  1085                           
  1086                           ;main.c: 94: lcd_putc(minus_1);
  1087  0001EC  5049               	movf	_minus_1^0,w,c
  1088  0001EE  EC22  F009         	call	_lcd_putc
  1089                           
  1090                           ;main.c: 95: lcd_putc(((temperature_1 / 100) % 10) + 48);
  1091  0001F2  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1092  0001F4  0E64               	movlw	100
  1093  0001F6  DBA3               	call	PL8	;call to abstracted procedure
  1094  0001F8  ECB8  F007         	call	___lwdiv	;wreg free
  1095  0001FC  DB94               	call	PL2	;call to abstracted procedure
  1096  0001FE  ECDD  F007         	call	___lwmod	;wreg free
  1097  000202  5039               	movf	?___lwmod^0,w,c
  1098  000204  0F30               	addlw	48
  1099  000206  EC22  F009         	call	_lcd_putc
  1100                           
  1101                           ;main.c: 96: lcd_putc(((temperature_1 / 10) % 10) + 48);
  1102  00020A  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1103  00020C  0E0A               	movlw	10
  1104  00020E  DB97               	call	PL8	;call to abstracted procedure
  1105  000210  ECB8  F007         	call	___lwdiv	;wreg free
  1106  000214  DB88               	call	PL2	;call to abstracted procedure
  1107  000216  ECDD  F007         	call	___lwmod	;wreg free
  1108  00021A  5039               	movf	?___lwmod^0,w,c
  1109  00021C  0F30               	addlw	48
  1110  00021E  EC22  F009         	call	_lcd_putc
  1111                           
  1112                           ;main.c: 97: lcd_putc('.');
  1113  000222  0E2E               	movlw	46
  1114  000224  EC22  F009         	call	_lcd_putc
  1115                           
  1116                           ;main.c: 98: lcd_putc(((temperature_1 % 10) + 48));
  1117  000228  DB96               	call	PL12	;call to abstracted procedure
  1118  00022A  DB85               	call	PL6	;call to abstracted procedure
  1119  00022C  ECDD  F007         	call	___lwmod	;wreg free
  1120  000230  5039               	movf	?___lwmod^0,w,c
  1121  000232  0F30               	addlw	48
  1122  000234  EC22  F009         	call	_lcd_putc
  1123                           
  1124                           ;main.c: 99: lcd_putc(0x01);
  1125  000238  0E01               	movlw	1
  1126  00023A  EC22  F009         	call	_lcd_putc
  1127                           
  1128                           ;main.c: 100: lcd_putc('C');
  1129  00023E  0E43               	movlw	67
  1130  000240  EC22  F009         	call	_lcd_putc
  1131                           
  1132                           ;main.c: 101: lcd_putc(' ');
  1133  000244  0E20               	movlw	32
  1134  000246  EC22  F009         	call	_lcd_putc
  1135  00024A  D015               	goto	l148
  1136  00024C                     l2689:
  1137                           
  1138                           ;main.c: 105: lcd_putc('-');
  1139  00024C  0E2D               	movlw	45
  1140  00024E  EC22  F009         	call	_lcd_putc
  1141                           
  1142                           ;main.c: 106: lcd_putc('-');
  1143  000252  0E2D               	movlw	45
  1144  000254  EC22  F009         	call	_lcd_putc
  1145                           
  1146                           ;main.c: 107: lcd_putc('-');
  1147  000258  0E2D               	movlw	45
  1148  00025A  EC22  F009         	call	_lcd_putc
  1149                           
  1150                           ;main.c: 108: lcd_putc(' ');
  1151  00025E  0E20               	movlw	32
  1152  000260  EC22  F009         	call	_lcd_putc
  1153                           
  1154                           ;main.c: 109: lcd_putc(' ');
  1155  000264  0E20               	movlw	32
  1156  000266  EC22  F009         	call	_lcd_putc
  1157                           
  1158                           ;main.c: 110: lcd_putc(' ');
  1159  00026A  0E20               	movlw	32
  1160  00026C  EC22  F009         	call	_lcd_putc
  1161                           
  1162                           ;main.c: 111: lcd_putc(' ');
  1163  000270  0E20               	movlw	32
  1164  000272  EC22  F009         	call	_lcd_putc
  1165  000276                     l148:
  1166                           
  1167                           ;main.c: 112: };main.c: 113: lcd_gotoxy(1, 2);
  1168  000276  DB79               	call	PL16	;call to abstracted procedure
  1169  000278  ECF3  F008         	call	_lcd_gotoxy
  1170                           
  1171                           ;main.c: 114: lcd_putc(0xCE);
  1172  00027C  0ECE               	movlw	206
  1173  00027E  EC22  F009         	call	_lcd_putc
  1174                           
  1175                           ;main.c: 115: lcd_putc(((temp1_fix / 100) % 10) + 48);
  1176  000282  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1177  000284  0E64               	movlw	100
  1178  000286  DB7A               	call	PL22	;call to abstracted procedure
  1179  000288  ECB8  F007         	call	___lwdiv	;wreg free
  1180  00028C  DB4C               	call	PL2	;call to abstracted procedure
  1181  00028E  ECDD  F007         	call	___lwmod	;wreg free
  1182  000292  5039               	movf	?___lwmod^0,w,c
  1183  000294  0F30               	addlw	48
  1184  000296  EC22  F009         	call	_lcd_putc
  1185                           
  1186                           ;main.c: 116: lcd_putc(((temp1_fix / 10) % 10) + 48);
  1187  00029A  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1188  00029C  0E0A               	movlw	10
  1189  00029E  DB6E               	call	PL22	;call to abstracted procedure
  1190  0002A0  ECB8  F007         	call	___lwdiv	;wreg free
  1191  0002A4  DB40               	call	PL2	;call to abstracted procedure
  1192  0002A6  ECDD  F007         	call	___lwmod	;wreg free
  1193  0002AA  5039               	movf	?___lwmod^0,w,c
  1194  0002AC  0F30               	addlw	48
  1195  0002AE  EC22  F009         	call	_lcd_putc
  1196                           
  1197                           ;main.c: 117: lcd_putc('.');
  1198  0002B2  0E2E               	movlw	46
  1199  0002B4  EC22  F009         	call	_lcd_putc
  1200                           
  1201                           ;main.c: 118: lcd_putc(((temp1_fix % 10) + 48));
  1202  0002B8  C019  F039         	movff	_temp1_fix,___lwmod@dividend
  1203  0002BC  C01A  F03A         	movff	_temp1_fix+1,___lwmod@dividend+1
  1204  0002C0  DB3A               	call	PL6	;call to abstracted procedure
  1205  0002C2  ECDD  F007         	call	___lwmod	;wreg free
  1206  0002C6  5039               	movf	?___lwmod^0,w,c
  1207  0002C8  0F30               	addlw	48
  1208  0002CA  EC22  F009         	call	_lcd_putc
  1209                           
  1210                           ;main.c: 119: lcd_putc(0x01);
  1211  0002CE  0E01               	movlw	1
  1212  0002D0  EC22  F009         	call	_lcd_putc
  1213                           
  1214                           ;main.c: 120: lcd_putc(' ');
  1215  0002D4  0E20               	movlw	32
  1216  0002D6  EC22  F009         	call	_lcd_putc
  1217                           
  1218                           ;main.c: 121: lcd_putc(0xD9);
  1219  0002DA  0ED9               	movlw	217
  1220  0002DC  EC22  F009         	call	_lcd_putc
  1221                           
  1222                           ;main.c: 122: lcd_putc(((set_t_dq1_up / 10) % 10) + 48);
  1223  0002E0  DB57               	call	PL26	;call to abstracted procedure
  1224  0002E2  EC50  F008         	call	___lbdiv
  1225  0002E6  EC9B  F008         	call	___lbmod
  1226  0002EA  0F30               	addlw	48
  1227  0002EC  EC22  F009         	call	_lcd_putc
  1228                           
  1229                           ;main.c: 123: lcd_putc('.');
  1230  0002F0  0E2E               	movlw	46
  1231  0002F2  EC22  F009         	call	_lcd_putc
  1232                           
  1233                           ;main.c: 124: lcd_putc(((set_t_dq1_up % 10) + 48));
  1234  0002F6  DB82               	call	PL56	;call to abstracted procedure
  1235  0002F8  EC9B  F008         	call	___lbmod
  1236  0002FC  0F30               	addlw	48
  1237  0002FE  EC22  F009         	call	_lcd_putc
  1238                           
  1239                           ;main.c: 125: lcd_putc(' ');
  1240  000302  0E20               	movlw	32
  1241  000304  EC22  F009         	call	_lcd_putc
  1242                           
  1243                           ;main.c: 126: lcd_putc(0xDA);
  1244  000308  0EDA               	movlw	218
  1245  00030A  EC22  F009         	call	_lcd_putc
  1246                           
  1247                           ;main.c: 127: lcd_putc(((set_t_dq1_dwn / 10) % 10) + 48);
  1248  00030E  DB4A               	call	PL32	;call to abstracted procedure
  1249  000310  EC50  F008         	call	___lbdiv
  1250  000314  EC9B  F008         	call	___lbmod
  1251  000318  0F30               	addlw	48
  1252  00031A  EC22  F009         	call	_lcd_putc
  1253                           
  1254                           ;main.c: 128: lcd_putc('.');
  1255  00031E  0E2E               	movlw	46
  1256  000320  EC22  F009         	call	_lcd_putc
  1257                           
  1258                           ;main.c: 129: lcd_putc(((set_t_dq1_dwn % 10) + 48));
  1259  000324  DB73               	call	PL62	;call to abstracted procedure
  1260  000326  EC9B  F008         	call	___lbmod
  1261  00032A  0F30               	addlw	48
  1262  00032C  EC22  F009         	call	_lcd_putc
  1263                           
  1264                           ;main.c: 131: break;
  1265  000330  D0EE               	goto	l149
  1266  000332                     l2691:
  1267                           
  1268                           ;main.c: 133: lcd_gotoxy(1, 1);
  1269  000332  0E01               	movlw	1
  1270  000334  6E36               	movwf	lcd_gotoxy@y^0,c
  1271  000336  ECF3  F008         	call	_lcd_gotoxy
  1272                           
  1273                           ;main.c: 134: lcdPrint("Ãîëîâà:");
  1274  00033A  0EEE               	movlw	low STR_6
  1275  00033C  6E39               	movwf	lcdPrint@t^0,c
  1276  00033E  0E1F               	movlw	high STR_6
  1277  000340  6E3A               	movwf	(lcdPrint@t+1)^0,c
  1278  000342  ECF4  F005         	call	_lcdPrint	;wreg free
  1279                           
  1280                           ;main.c: 135: lcd_gotoxy(8, 1);
  1281  000346  DB46               	call	PL44	;call to abstracted procedure
  1282  000348  ECF3  F008         	call	_lcd_gotoxy
  1283                           
  1284                           ;main.c: 136: if (!(temperature_2 == 32767)) {
  1285  00034C  281B               	incf	_temperature_2^0,w,c
  1286  00034E  E103               	bnz	u1600
  1287  000350  0E7F               	movlw	127
  1288  000352  181C               	xorwf	(_temperature_2+1)^0,w,c
  1289  000354  E062               	bz	l2705
  1290  000356                     u1600:
  1291                           
  1292                           ;main.c: 137: if (((temperature_2 / 100) % 10) == 0) {
  1293  000356  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1294  000358  0E64               	movlw	100
  1295  00035A  DAF7               	call	PL10	;call to abstracted procedure
  1296  00035C  ECB8  F007         	call	___lwdiv	;wreg free
  1297  000360  DAE2               	call	PL2	;call to abstracted procedure
  1298  000362  ECDD  F007         	call	___lwmod	;wreg free
  1299  000366  5039               	movf	?___lwmod^0,w,c
  1300  000368  103A               	iorwf	(?___lwmod+1)^0,w,c
  1301  00036A  E127               	bnz	l2703
  1302                           
  1303                           ;main.c: 138: lcd_putc(minus_2);
  1304  00036C  5048               	movf	_minus_2^0,w,c
  1305  00036E  EC22  F009         	call	_lcd_putc
  1306                           
  1307                           ;main.c: 140: lcd_putc(((temperature_2 / 10) % 10) + 48);
  1308  000372  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1309  000374  0E0A               	movlw	10
  1310  000376  DAE9               	call	PL10	;call to abstracted procedure
  1311  000378  ECB8  F007         	call	___lwdiv	;wreg free
  1312  00037C  DAD4               	call	PL2	;call to abstracted procedure
  1313  00037E  ECDD  F007         	call	___lwmod	;wreg free
  1314  000382  5039               	movf	?___lwmod^0,w,c
  1315  000384  0F30               	addlw	48
  1316  000386  EC22  F009         	call	_lcd_putc
  1317                           
  1318                           ;main.c: 141: lcd_putc('.');
  1319  00038A  0E2E               	movlw	46
  1320  00038C  EC22  F009         	call	_lcd_putc
  1321                           
  1322                           ;main.c: 142: lcd_putc(((temperature_2 % 10) + 48));
  1323  000390  DAE7               	call	PL14	;call to abstracted procedure
  1324  000392  DAD1               	call	PL6	;call to abstracted procedure
  1325  000394  ECDD  F007         	call	___lwmod	;wreg free
  1326  000398  5039               	movf	?___lwmod^0,w,c
  1327  00039A  0F30               	addlw	48
  1328  00039C  EC22  F009         	call	_lcd_putc
  1329                           
  1330                           ;main.c: 143: lcd_putc(0x01);
  1331  0003A0  0E01               	movlw	1
  1332  0003A2  EC22  F009         	call	_lcd_putc
  1333                           
  1334                           ;main.c: 144: lcd_putc('C');
  1335  0003A6  0E43               	movlw	67
  1336  0003A8  EC22  F009         	call	_lcd_putc
  1337                           
  1338                           ;main.c: 145: lcd_putc(' ');
  1339  0003AC  0E20               	movlw	32
  1340  0003AE  EC22  F009         	call	_lcd_putc
  1341                           
  1342                           ;main.c: 146: lcd_putc(' ');
  1343  0003B2  0E20               	movlw	32
  1344  0003B4  EC22  F009         	call	_lcd_putc
  1345                           
  1346                           ;main.c: 147: } else {
  1347  0003B8  D045               	goto	l154
  1348  0003BA                     l2703:
  1349                           
  1350                           ;main.c: 148: lcd_putc(minus_2);
  1351  0003BA  5048               	movf	_minus_2^0,w,c
  1352  0003BC  EC22  F009         	call	_lcd_putc
  1353                           
  1354                           ;main.c: 149: lcd_putc(((temperature_2 / 100) % 10) + 48);
  1355  0003C0  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1356  0003C2  0E64               	movlw	100
  1357  0003C4  DAC2               	call	PL10	;call to abstracted procedure
  1358  0003C6  ECB8  F007         	call	___lwdiv	;wreg free
  1359  0003CA  DAAD               	call	PL2	;call to abstracted procedure
  1360  0003CC  ECDD  F007         	call	___lwmod	;wreg free
  1361  0003D0  5039               	movf	?___lwmod^0,w,c
  1362  0003D2  0F30               	addlw	48
  1363  0003D4  EC22  F009         	call	_lcd_putc
  1364                           
  1365                           ;main.c: 150: lcd_putc(((temperature_2 / 10) % 10) + 48);
  1366  0003D8  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1367  0003DA  0E0A               	movlw	10
  1368  0003DC  DAB6               	call	PL10	;call to abstracted procedure
  1369  0003DE  ECB8  F007         	call	___lwdiv	;wreg free
  1370  0003E2  DAA1               	call	PL2	;call to abstracted procedure
  1371  0003E4  ECDD  F007         	call	___lwmod	;wreg free
  1372  0003E8  5039               	movf	?___lwmod^0,w,c
  1373  0003EA  0F30               	addlw	48
  1374  0003EC  EC22  F009         	call	_lcd_putc
  1375                           
  1376                           ;main.c: 151: lcd_putc('.');
  1377  0003F0  0E2E               	movlw	46
  1378  0003F2  EC22  F009         	call	_lcd_putc
  1379                           
  1380                           ;main.c: 152: lcd_putc(((temperature_2 % 10) + 48));
  1381  0003F6  DAB4               	call	PL14	;call to abstracted procedure
  1382  0003F8  DA9E               	call	PL6	;call to abstracted procedure
  1383  0003FA  ECDD  F007         	call	___lwmod	;wreg free
  1384  0003FE  5039               	movf	?___lwmod^0,w,c
  1385  000400  0F30               	addlw	48
  1386  000402  EC22  F009         	call	_lcd_putc
  1387                           
  1388                           ;main.c: 153: lcd_putc(0x01);
  1389  000406  0E01               	movlw	1
  1390  000408  EC22  F009         	call	_lcd_putc
  1391                           
  1392                           ;main.c: 154: lcd_putc('C');
  1393  00040C  0E43               	movlw	67
  1394  00040E  EC22  F009         	call	_lcd_putc
  1395                           
  1396                           ;main.c: 155: lcd_putc(' ');
  1397  000412  0E20               	movlw	32
  1398  000414  EC22  F009         	call	_lcd_putc
  1399  000418  D015               	goto	l154
  1400  00041A                     l2705:
  1401                           
  1402                           ;main.c: 159: lcd_putc('-');
  1403  00041A  0E2D               	movlw	45
  1404  00041C  EC22  F009         	call	_lcd_putc
  1405                           
  1406                           ;main.c: 160: lcd_putc('-');
  1407  000420  0E2D               	movlw	45
  1408  000422  EC22  F009         	call	_lcd_putc
  1409                           
  1410                           ;main.c: 161: lcd_putc('-');
  1411  000426  0E2D               	movlw	45
  1412  000428  EC22  F009         	call	_lcd_putc
  1413                           
  1414                           ;main.c: 162: lcd_putc(' ');
  1415  00042C  0E20               	movlw	32
  1416  00042E  EC22  F009         	call	_lcd_putc
  1417                           
  1418                           ;main.c: 163: lcd_putc(' ');
  1419  000432  0E20               	movlw	32
  1420  000434  EC22  F009         	call	_lcd_putc
  1421                           
  1422                           ;main.c: 164: lcd_putc(' ');
  1423  000438  0E20               	movlw	32
  1424  00043A  EC22  F009         	call	_lcd_putc
  1425                           
  1426                           ;main.c: 165: lcd_putc(' ');
  1427  00043E  0E20               	movlw	32
  1428  000440  EC22  F009         	call	_lcd_putc
  1429  000444                     l154:
  1430                           
  1431                           ;main.c: 166: };main.c: 167: lcd_gotoxy(1, 2);
  1432  000444  DA92               	call	PL16	;call to abstracted procedure
  1433  000446  ECF3  F008         	call	_lcd_gotoxy
  1434                           
  1435                           ;main.c: 168: lcd_putc(0xCE);
  1436  00044A  0ECE               	movlw	206
  1437  00044C  EC22  F009         	call	_lcd_putc
  1438                           
  1439                           ;main.c: 169: lcd_putc(((temp2_fix / 100) % 10) + 48);
  1440  000450  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1441  000452  0E64               	movlw	100
  1442  000454  DA8D               	call	PL20	;call to abstracted procedure
  1443  000456  ECB8  F007         	call	___lwdiv	;wreg free
  1444  00045A  DA65               	call	PL2	;call to abstracted procedure
  1445  00045C  ECDD  F007         	call	___lwmod	;wreg free
  1446  000460  5039               	movf	?___lwmod^0,w,c
  1447  000462  0F30               	addlw	48
  1448  000464  EC22  F009         	call	_lcd_putc
  1449                           
  1450                           ;main.c: 170: lcd_putc(((temp2_fix / 10) % 10) + 48);
  1451  000468  6A35               	clrf	(___lwdiv@divisor+1)^0,c
  1452  00046A  0E0A               	movlw	10
  1453  00046C  DA81               	call	PL20	;call to abstracted procedure
  1454  00046E  ECB8  F007         	call	___lwdiv	;wreg free
  1455  000472  DA59               	call	PL2	;call to abstracted procedure
  1456  000474  ECDD  F007         	call	___lwmod	;wreg free
  1457  000478  5039               	movf	?___lwmod^0,w,c
  1458  00047A  0F30               	addlw	48
  1459  00047C  EC22  F009         	call	_lcd_putc
  1460                           
  1461                           ;main.c: 171: lcd_putc('.');
  1462  000480  0E2E               	movlw	46
  1463  000482  EC22  F009         	call	_lcd_putc
  1464                           
  1465                           ;main.c: 172: lcd_putc(((temp2_fix % 10) + 48));
  1466  000486  C017  F039         	movff	_temp2_fix,___lwmod@dividend
  1467  00048A  C018  F03A         	movff	_temp2_fix+1,___lwmod@dividend+1
  1468  00048E  DA53               	call	PL6	;call to abstracted procedure
  1469  000490  ECDD  F007         	call	___lwmod	;wreg free
  1470  000494  5039               	movf	?___lwmod^0,w,c
  1471  000496  0F30               	addlw	48
  1472  000498  EC22  F009         	call	_lcd_putc
  1473                           
  1474                           ;main.c: 173: lcd_putc(0x01);
  1475  00049C  0E01               	movlw	1
  1476  00049E  EC22  F009         	call	_lcd_putc
  1477                           
  1478                           ;main.c: 174: lcd_putc(' ');
  1479  0004A2  0E20               	movlw	32
  1480  0004A4  EC22  F009         	call	_lcd_putc
  1481                           
  1482                           ;main.c: 175: lcd_putc(0xD9);
  1483  0004A8  0ED9               	movlw	217
  1484  0004AA  EC22  F009         	call	_lcd_putc
  1485                           
  1486                           ;main.c: 176: lcd_putc(((set_t_dq2_up / 10) % 10) + 48);
  1487  0004AE  DA7F               	call	PL34	;call to abstracted procedure
  1488  0004B0  EC50  F008         	call	___lbdiv
  1489  0004B4  EC9B  F008         	call	___lbmod
  1490  0004B8  0F30               	addlw	48
  1491  0004BA  EC22  F009         	call	_lcd_putc
  1492                           
  1493                           ;main.c: 177: lcd_putc('.');
  1494  0004BE  0E2E               	movlw	46
  1495  0004C0  EC22  F009         	call	_lcd_putc
  1496                           
  1497                           ;main.c: 178: lcd_putc(((set_t_dq2_up % 10) + 48));
  1498  0004C4  DA8A               	call	PL46	;call to abstracted procedure
  1499  0004C6  EC9B  F008         	call	___lbmod
  1500  0004CA  0F30               	addlw	48
  1501  0004CC  EC22  F009         	call	_lcd_putc
  1502                           
  1503                           ;main.c: 179: lcd_putc(' ');
  1504  0004D0  0E20               	movlw	32
  1505  0004D2  EC22  F009         	call	_lcd_putc
  1506                           
  1507                           ;main.c: 180: lcd_putc(0xDA);
  1508  0004D6  0EDA               	movlw	218
  1509  0004D8  EC22  F009         	call	_lcd_putc
  1510                           
  1511                           ;main.c: 181: lcd_putc(((set_t_dq2_dwn / 10) % 10) + 48);
  1512  0004DC  DA72               	call	PL40	;call to abstracted procedure
  1513  0004DE  EC50  F008         	call	___lbdiv
  1514  0004E2  EC9B  F008         	call	___lbmod
  1515  0004E6  0F30               	addlw	48
  1516  0004E8  EC22  F009         	call	_lcd_putc
  1517                           
  1518                           ;main.c: 182: lcd_putc('.');
  1519  0004EC  0E2E               	movlw	46
  1520  0004EE  EC22  F009         	call	_lcd_putc
  1521                           
  1522                           ;main.c: 183: lcd_putc(((set_t_dq2_dwn % 10) + 48));
  1523  0004F2  DA7D               	call	PL52	;call to abstracted procedure
  1524  0004F4  EC9B  F008         	call	___lbmod
  1525  0004F8  0F30               	addlw	48
  1526  0004FA  EC22  F009         	call	_lcd_putc
  1527                           
  1528                           ;main.c: 184: break;
  1529  0004FE  D007               	goto	l149
  1530  000500                     l2709:
  1531  000500  5046               	movf	_sub_main^0,w,c
  1532                           
  1533                           ; Switch size 1, requested type "space"
  1534                           ; Number of cases is 2, Range of values is 1 to 2
  1535                           ; switch strategies available:
  1536                           ; Name         Instructions Cycles
  1537                           ; simple_byte            7     4 (average)
  1538                           ;	Chosen strategy is simple_byte
  1539  000502  0A01               	xorlw	1	; case 1
  1540  000504  E101 D62D          	bz	l2675
  1541  000508  0A03               	xorlw	3	; case 2
  1542  00050A  E101 D712          	bz	l2691
  1543  00050E                     l149:
  1544                           
  1545                           ;main.c: 187: if (sound_yes) {
  1546  00050E  A04A               	btfss	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  1547  000510  D040               	goto	l2725
  1548                           
  1549                           ;main.c: 188: lcd_gotoxy(16, 1);
  1550  000512  DA67               	call	PL48	;call to abstracted procedure
  1551  000514  ECF3  F008         	call	_lcd_gotoxy
  1552                           
  1553                           ;main.c: 189: lcd_putc(0xED);
  1554  000518  0EED               	movlw	237
  1555  00051A  EC22  F009         	call	_lcd_putc
  1556                           
  1557                           ;main.c: 190: if ((((temperature_1 >= (temp1_fix + set_t_dq1_up)) ||;main.c: 191: (tempe
      +                          rature_1 <= (temp1_fix - set_t_dq1_dwn))) &&;main.c: 192: (!(temperature_1 == 32767))) |
      +                          |;main.c: 193: (((temperature_2 >= (temp2_fix + set_t_dq2_up)) ||;main.c: 194: (temperat
      +                          ure_2 <= (temp2_fix - set_t_dq2_dwn))) &&;main.c: 195: (!(temperature_2 == 32767))))
  1558  00051E  5024               	movf	_set_t_dq1_up^0,w,c
  1559  000520  2419               	addwf	_temp1_fix^0,w,c
  1560  000522  6E43               	movwf	??_main^0,c
  1561  000524  0E00               	movlw	0
  1562  000526  201A               	addwfc	(_temp1_fix+1)^0,w,c
  1563  000528  6E44               	movwf	(??_main+1)^0,c
  1564  00052A  5043               	movf	??_main^0,w,c
  1565  00052C  5C1D               	subwf	_temperature_1^0,w,c
  1566  00052E  5044               	movf	(??_main+1)^0,w,c
  1567  000530  581E               	subwfb	(_temperature_1+1)^0,w,c
  1568  000532  E20B               	bc	u1640
  1569  000534  5023               	movf	_set_t_dq1_dwn^0,w,c
  1570  000536  5C19               	subwf	_temp1_fix^0,w,c
  1571  000538  6E43               	movwf	??_main^0,c
  1572  00053A  0E00               	movlw	0
  1573  00053C  581A               	subwfb	(_temp1_fix+1)^0,w,c
  1574  00053E  6E44               	movwf	(??_main+1)^0,c
  1575  000540  501D               	movf	_temperature_1^0,w,c
  1576  000542  5C43               	subwf	??_main^0,w,c
  1577  000544  501E               	movf	(_temperature_1+1)^0,w,c
  1578  000546  5844               	subwfb	(??_main+1)^0,w,c
  1579  000548  E305               	bnc	u1650
  1580  00054A                     u1640:
  1581  00054A  281D               	incf	_temperature_1^0,w,c
  1582  00054C  E11E               	bnz	l158
  1583  00054E  0E7F               	movlw	127
  1584  000550  181E               	xorwf	(_temperature_1+1)^0,w,c
  1585  000552  E11B               	bnz	u1680
  1586  000554                     u1650:
  1587  000554  5022               	movf	_set_t_dq2_up^0,w,c
  1588  000556  2417               	addwf	_temp2_fix^0,w,c
  1589  000558  6E43               	movwf	??_main^0,c
  1590  00055A  0E00               	movlw	0
  1591  00055C  2018               	addwfc	(_temp2_fix+1)^0,w,c
  1592  00055E  6E44               	movwf	(??_main+1)^0,c
  1593  000560  5043               	movf	??_main^0,w,c
  1594  000562  5C1B               	subwf	_temperature_2^0,w,c
  1595  000564  5044               	movf	(??_main+1)^0,w,c
  1596  000566  581C               	subwfb	(_temperature_2+1)^0,w,c
  1597  000568  E20B               	bc	u1670
  1598  00056A  5021               	movf	_set_t_dq2_dwn^0,w,c
  1599  00056C  5C17               	subwf	_temp2_fix^0,w,c
  1600  00056E  6E43               	movwf	??_main^0,c
  1601  000570  0E00               	movlw	0
  1602  000572  5818               	subwfb	(_temp2_fix+1)^0,w,c
  1603  000574  6E44               	movwf	(??_main+1)^0,c
  1604  000576  501B               	movf	_temperature_2^0,w,c
  1605  000578  5C43               	subwf	??_main^0,w,c
  1606  00057A  501C               	movf	(_temperature_2+1)^0,w,c
  1607  00057C  5844               	subwfb	(??_main+1)^0,w,c
  1608  00057E  E307               	bnc	l156
  1609  000580                     u1670:
  1610  000580  281B               	incf	_temperature_2^0,w,c
  1611  000582  E103               	bnz	u1680
  1612  000584  0E7F               	movlw	127
  1613  000586  181C               	xorwf	(_temperature_2+1)^0,w,c
  1614  000588  E002               	bz	l156
  1615  00058A                     u1680:
  1616  00058A                     l158:
  1617                           
  1618                           ;main.c: 196: en_sound = 1;
  1619  00058A  824A               	bsf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  1620  00058C  D00A               	goto	l2731
  1621  00058E                     l156:
  1622                           
  1623                           ;main.c: 197: else;main.c: 198: en_sound = 0;
  1624  00058E  924A               	bcf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  1625  000590  D008               	goto	l2731
  1626  000592                     l2725:
  1627                           
  1628                           ;main.c: 206: lcd_gotoxy(16, 1);
  1629  000592  DA27               	call	PL48	;call to abstracted procedure
  1630  000594  ECF3  F008         	call	_lcd_gotoxy
  1631                           
  1632                           ;main.c: 207: lcd_putc(0xD5);
  1633  000598  0ED5               	movlw	213
  1634  00059A  EC22  F009         	call	_lcd_putc
  1635                           
  1636                           ;main.c: 208: LATCbits.LATC4 = 0;
  1637  00059E  988B               	bcf	139,4,c	;volatile
  1638  0005A0  D7F6               	goto	l156
  1639  0005A2                     l2731:
  1640                           
  1641                           ;main.c: 210: };main.c: 213: if (pressed_key == 1) {
  1642  0005A2  0426               	decf	_pressed_key^0,w,c
  1643  0005A4  E115               	bnz	l2745
  1644                           
  1645                           ;main.c: 214: clearLCD();
  1646  0005A6  EC01  F009         	call	_clearLCD	;wreg free
  1647                           
  1648                           ;main.c: 215: select = 7;
  1649  0005AA  0E07               	movlw	7
  1650                           
  1651                           ;main.c: 216: lcd_gotoxy(1, 1);
  1652  0005AC  DA0F               	call	PL42	;call to abstracted procedure
  1653  0005AE  ECF3  F008         	call	_lcd_gotoxy
  1654                           
  1655                           ;main.c: 217: lcdPrint(" Ïîðiã  Ñèãíàë");
  1656  0005B2  0E73               	movlw	low STR_7
  1657  0005B4  6E39               	movwf	lcdPrint@t^0,c
  1658  0005B6  0E1F               	movlw	high STR_7
  1659  0005B8  6E3A               	movwf	(lcdPrint@t+1)^0,c
  1660  0005BA  ECF4  F005         	call	_lcdPrint	;wreg free
  1661                           
  1662                           ;main.c: 218: lcd_gotoxy(1, 2);
  1663  0005BE  D9D5               	call	PL16	;call to abstracted procedure
  1664  0005C0  ECF3  F008         	call	_lcd_gotoxy
  1665                           
  1666                           ;main.c: 219: lcdPrint("  OK      UP");
  1667  0005C4  0ED6               	movlw	low STR_8
  1668  0005C6  6E39               	movwf	lcdPrint@t^0,c
  1669  0005C8  0E1F               	movlw	high STR_8
  1670  0005CA  6E3A               	movwf	(lcdPrint@t+1)^0,c
  1671  0005CC  ECF4  F005         	call	_lcdPrint	;wreg free
  1672  0005D0                     l2745:
  1673                           
  1674                           ;main.c: 221: };main.c: 223: if (pressed_key == 2) {
  1675  0005D0  0E02               	movlw	2
  1676  0005D2  1826               	xorwf	_pressed_key^0,w,c
  1677  0005D4  E105               	bnz	l2753
  1678                           
  1679                           ;main.c: 224: if (sub_main == 1)
  1680  0005D6  0446               	decf	_sub_main^0,w,c
  1681                           
  1682                           ;main.c: 225: sub_main = 2;
  1683  0005D8  0E02               	movlw	2
  1684  0005DA  A4D8               	btfss	status,2,c
  1685                           
  1686                           ;main.c: 226: else;main.c: 227: sub_main = 1;
  1687  0005DC  0E01               	movlw	1
  1688  0005DE  6E46               	movwf	_sub_main^0,c
  1689  0005E0                     l2753:
  1690                           
  1691                           ;main.c: 228: };main.c: 230: if (pressed_key == 3) {
  1692  0005E0  0E03               	movlw	3
  1693  0005E2  1826               	xorwf	_pressed_key^0,w,c
  1694  0005E4  E001 D598          	bnz	l2663
  1695                           
  1696                           ;main.c: 231: temp1_fix = temperature_1;
  1697  0005E8  C01D  F019         	movff	_temperature_1,_temp1_fix
  1698  0005EC  C01E  F01A         	movff	_temperature_1+1,_temp1_fix+1
  1699                           
  1700                           ;main.c: 232: temp2_fix = temperature_2;
  1701  0005F0  C01B  F017         	movff	_temperature_2,_temp2_fix
  1702  0005F4  C01C  F018         	movff	_temperature_2+1,_temp2_fix+1
  1703                           
  1704                           ;main.c: 233: write_eep(20, temp1_fix);
  1705  0005F8  C019  F032         	movff	_temp1_fix,write_eep@data
  1706  0005FC  0E14               	movlw	20
  1707  0005FE  ECAE  F008         	call	_write_eep
  1708                           
  1709                           ;main.c: 234: write_eep(21, temp2_fix);
  1710  000602  C017  F032         	movff	_temp2_fix,write_eep@data
  1711  000606  0E15               	movlw	21
  1712  000608  ECAE  F008         	call	_write_eep
  1713  00060C  D585               	goto	l2663
  1714  00060E                     l2759:
  1715                           
  1716                           ;main.c: 241: lcd_gotoxy(14, 2);
  1717  00060E  0E02               	movlw	2
  1718  000610  6E36               	movwf	lcd_gotoxy@y^0,c
  1719  000612  0E0E               	movlw	14
  1720  000614  ECF3  F008         	call	_lcd_gotoxy
  1721                           
  1722                           ;main.c: 242: lcd_putc(dq_num + 48);
  1723  000618  5045               	movf	_dq_num^0,w,c
  1724  00061A  0F30               	addlw	48
  1725  00061C  EC22  F009         	call	_lcd_putc
  1726                           
  1727                           ;main.c: 243: if (pressed_key == 1) {
  1728  000620  0426               	decf	_pressed_key^0,w,c
  1729  000622  E106               	bnz	l2769
  1730                           
  1731                           ;main.c: 244: dq_num++;
  1732  000624  2A45               	incf	_dq_num^0,f,c
  1733                           
  1734                           ;main.c: 245: if (dq_num == 3)
  1735  000626  0E03               	movlw	3
  1736  000628  1845               	xorwf	_dq_num^0,w,c
  1737  00062A  E102               	bnz	l2769
  1738                           
  1739                           ;main.c: 246: dq_num = 1;
  1740  00062C  0E01               	movlw	1
  1741  00062E  6E45               	movwf	_dq_num^0,c
  1742  000630                     l2769:
  1743                           
  1744                           ;main.c: 247: };main.c: 248: if (pressed_key == 2) {
  1745  000630  0E02               	movlw	2
  1746  000632  1826               	xorwf	_pressed_key^0,w,c
  1747  000634  E105               	bnz	l2777
  1748                           
  1749                           ;main.c: 249: dq_num--;
  1750  000636  0645               	decf	_dq_num^0,f,c
  1751                           
  1752                           ;main.c: 250: if (dq_num == 0)
  1753  000638  5045               	movf	_dq_num^0,w,c
  1754  00063A  E102               	bnz	l2777
  1755                           
  1756                           ;main.c: 251: dq_num = 2;
  1757  00063C  0E02               	movlw	2
  1758  00063E  6E45               	movwf	_dq_num^0,c
  1759  000640                     l2777:
  1760                           
  1761                           ;main.c: 252: };main.c: 253: if (pressed_key == 3) {
  1762  000640  0E03               	movlw	3
  1763  000642  1826               	xorwf	_pressed_key^0,w,c
  1764  000644  E001 D568          	bnz	l2663
  1765                           
  1766                           ;main.c: 254: if (ds18b20_readrom(dq_num)) {
  1767  000648  5045               	movf	_dq_num^0,w,c
  1768  00064A  EC04  F007         	call	_ds18b20_readrom
  1769  00064E  0900               	iorlw	0
  1770  000650  E009               	bz	l2785
  1771                           
  1772                           ;main.c: 255: lcd_gotoxy(1, 2);
  1773  000652  D98B               	call	PL16	;call to abstracted procedure
  1774  000654  ECF3  F008         	call	_lcd_gotoxy
  1775                           
  1776                           ;main.c: 256: lcdPrint(" Êîä ïðî÷èòàíî ");
  1777  000658  0E33               	movlw	low STR_9
  1778  00065A  6E39               	movwf	lcdPrint@t^0,c
  1779  00065C  0E1F               	movlw	high STR_9
  1780  00065E  6E3A               	movwf	(lcdPrint@t+1)^0,c
  1781  000660  ECF4  F005         	call	_lcdPrint	;wreg free
  1782  000664                     l2785:
  1783                           
  1784                           ;main.c: 257: };main.c: 259: select = 3;
  1785  000664  0E03               	movlw	3
  1786  000666  D021               	goto	L2
  1787  000668                     l2787:
  1788                           
  1789                           ;main.c: 265: if (pressed_key == 1) {
  1790  000668  0426               	decf	_pressed_key^0,w,c
  1791  00066A  E115               	bnz	l2801
  1792                           
  1793                           ;main.c: 266: clearLCD();
  1794  00066C  EC01  F009         	call	_clearLCD	;wreg free
  1795                           
  1796                           ;main.c: 267: select = 4;
  1797  000670  0E04               	movlw	4
  1798                           
  1799                           ;main.c: 268: lcd_gotoxy(1, 1);
  1800  000672  D9AC               	call	PL42	;call to abstracted procedure
  1801  000674  ECF3  F008         	call	_lcd_gotoxy
  1802                           
  1803                           ;main.c: 269: lcdPrint("  Ãiñòåðåçèñ  ");
  1804  000678  0E82               	movlw	low STR_10
  1805  00067A  6E39               	movwf	lcdPrint@t^0,c
  1806  00067C  0E1F               	movlw	high STR_10
  1807  00067E  6E3A               	movwf	(lcdPrint@t+1)^0,c
  1808  000680  ECF4  F005         	call	_lcdPrint	;wreg free
  1809                           
  1810                           ;main.c: 270: lcd_gotoxy(1, 2);
  1811  000684  D972               	call	PL16	;call to abstracted procedure
  1812  000686  ECF3  F008         	call	_lcd_gotoxy
  1813                           
  1814                           ;main.c: 271: lcdPrint("Êîë(1)/Ãîë(2):");
  1815  00068A  0EA0               	movlw	low STR_11
  1816  00068C  6E39               	movwf	lcdPrint@t^0,c
  1817  00068E  0E1F               	movlw	high STR_11
  1818  000690  6E3A               	movwf	(lcdPrint@t+1)^0,c
  1819  000692  ECF4  F005         	call	_lcdPrint	;wreg free
  1820  000696                     l2801:
  1821                           
  1822                           ;main.c: 272: };main.c: 274: if (pressed_key == 2) {
  1823  000696  0E02               	movlw	2
  1824  000698  1826               	xorwf	_pressed_key^0,w,c
  1825  00069A  E001 D53D          	bnz	l2663
  1826                           
  1827                           ;main.c: 275: sound_yes = !(sound_yes);
  1828  00069E  B04A               	btfsc	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  1829  0006A0  D002               	goto	u1810
  1830  0006A2  804A               	bsf	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  1831  0006A4  D001               	goto	u1825
  1832  0006A6                     u1810:
  1833  0006A6  904A               	bcf	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  1834  0006A8                     u1825:
  1835                           
  1836                           ;main.c: 276: select = 1;
  1837  0006A8  0E01               	movlw	1
  1838  0006AA                     L2:
  1839  0006AA  6E47               	movwf	_select^0,c
  1840  0006AC  D535               	goto	l2663
  1841  0006AE                     l2807:
  1842                           
  1843                           ;main.c: 280: lcd_gotoxy(16, 2);
  1844  0006AE  0E02               	movlw	2
  1845  0006B0  6E36               	movwf	lcd_gotoxy@y^0,c
  1846  0006B2  0E10               	movlw	16
  1847  0006B4  ECF3  F008         	call	_lcd_gotoxy
  1848                           
  1849                           ;main.c: 281: lcd_putc(dq_num + 48);
  1850  0006B8  5045               	movf	_dq_num^0,w,c
  1851  0006BA  0F30               	addlw	48
  1852  0006BC  EC22  F009         	call	_lcd_putc
  1853                           
  1854                           ;main.c: 282: if (pressed_key == 1) {
  1855  0006C0  0426               	decf	_pressed_key^0,w,c
  1856  0006C2  E106               	bnz	l2817
  1857                           
  1858                           ;main.c: 283: dq_num++;
  1859  0006C4  2A45               	incf	_dq_num^0,f,c
  1860                           
  1861                           ;main.c: 284: if (dq_num == 3)
  1862  0006C6  0E03               	movlw	3
  1863  0006C8  1845               	xorwf	_dq_num^0,w,c
  1864  0006CA  E102               	bnz	l2817
  1865                           
  1866                           ;main.c: 285: dq_num = 1;
  1867  0006CC  0E01               	movlw	1
  1868  0006CE  6E45               	movwf	_dq_num^0,c
  1869  0006D0                     l2817:
  1870                           
  1871                           ;main.c: 286: };main.c: 287: if (pressed_key == 2) {
  1872  0006D0  0E02               	movlw	2
  1873  0006D2  1826               	xorwf	_pressed_key^0,w,c
  1874  0006D4  E105               	bnz	l2825
  1875                           
  1876                           ;main.c: 288: dq_num--;
  1877  0006D6  0645               	decf	_dq_num^0,f,c
  1878                           
  1879                           ;main.c: 289: if (dq_num == 0)
  1880  0006D8  5045               	movf	_dq_num^0,w,c
  1881  0006DA  E102               	bnz	l2825
  1882                           
  1883                           ;main.c: 290: dq_num = 2;
  1884  0006DC  0E02               	movlw	2
  1885  0006DE  6E45               	movwf	_dq_num^0,c
  1886  0006E0                     l2825:
  1887                           
  1888                           ;main.c: 291: };main.c: 292: if (pressed_key == 3) {
  1889  0006E0  0E03               	movlw	3
  1890  0006E2  1826               	xorwf	_pressed_key^0,w,c
  1891  0006E4  E001 D518          	bnz	l2663
  1892                           
  1893                           ;main.c: 293: if (dq_num == 1) {
  1894  0006E8  0445               	decf	_dq_num^0,w,c
  1895  0006EA  E115               	bnz	l2841
  1896                           
  1897                           ;main.c: 294: select = 5;
  1898  0006EC  0E05               	movlw	5
  1899                           
  1900                           ;main.c: 295: sub_sel = 1;
  1901  0006EE  D98A               	call	PL58	;call to abstracted procedure
  1902                           
  1903                           ;main.c: 296: clearLCD();
  1904  0006F0  EC01  F009         	call	_clearLCD	;wreg free
  1905                           
  1906                           ;main.c: 297: lcd_gotoxy(1, 1);
  1907  0006F4  0E01               	movlw	1
  1908  0006F6  6E36               	movwf	lcd_gotoxy@y^0,c
  1909  0006F8  ECF3  F008         	call	_lcd_gotoxy
  1910                           
  1911                           ;main.c: 298: lcdPrint("    Êîëîíà  ");
  1912  0006FC  0EBC               	movlw	low STR_12
  1913  0006FE  6E39               	movwf	lcdPrint@t^0,c
  1914  000700  0E1F               	movlw	high STR_12
  1915  000702  6E3A               	movwf	(lcdPrint@t+1)^0,c
  1916  000704  ECF4  F005         	call	_lcdPrint	;wreg free
  1917                           
  1918                           ;main.c: 299: lcd_gotoxy(1, 2);
  1919  000708  D930               	call	PL16	;call to abstracted procedure
  1920  00070A  ECF3  F008         	call	_lcd_gotoxy
  1921                           
  1922                           ;main.c: 300: lcdPrint("Òåìï Âåðõ:");
  1923  00070E  D945               	call	PL28	;call to abstracted procedure
  1924  000710  ECF4  F005         	call	_lcdPrint	;wreg free
  1925                           
  1926                           ;main.c: 301: } else {
  1927  000714  D501               	goto	l2663
  1928  000716                     l2841:
  1929                           
  1930                           ;main.c: 302: select = 6;
  1931  000716  0E06               	movlw	6
  1932                           
  1933                           ;main.c: 303: sub_sel = 1;
  1934  000718  D975               	call	PL58	;call to abstracted procedure
  1935                           
  1936                           ;main.c: 304: clearLCD();
  1937  00071A  EC01  F009         	call	_clearLCD	;wreg free
  1938                           
  1939                           ;main.c: 305: lcd_gotoxy(1, 1);
  1940  00071E  0E01               	movlw	1
  1941  000720  6E36               	movwf	lcd_gotoxy@y^0,c
  1942  000722  ECF3  F008         	call	_lcd_gotoxy
  1943                           
  1944                           ;main.c: 306: lcdPrint("    Ãîëîâà  ");
  1945  000726  0EAF               	movlw	low STR_14
  1946  000728  6E39               	movwf	lcdPrint@t^0,c
  1947  00072A  0E1F               	movlw	high STR_14
  1948  00072C  6E3A               	movwf	(lcdPrint@t+1)^0,c
  1949  00072E  ECF4  F005         	call	_lcdPrint	;wreg free
  1950                           
  1951                           ;main.c: 307: lcd_gotoxy(1, 2);
  1952  000732  D91B               	call	PL16	;call to abstracted procedure
  1953  000734  ECF3  F008         	call	_lcd_gotoxy
  1954                           
  1955                           ;main.c: 308: lcdPrint("Òåìï Âåðõ:");
  1956  000738  D930               	call	PL28	;call to abstracted procedure
  1957  00073A  ECF4  F005         	call	_lcdPrint	;wreg free
  1958  00073E  D4EC               	goto	l2663
  1959  000740                     l2853:
  1960                           
  1961                           ;main.c: 316: lcd_gotoxy(11, 2);
  1962  000740  D95A               	call	PL54	;call to abstracted procedure
  1963  000742  ECF3  F008         	call	_lcd_gotoxy
  1964                           
  1965                           ;main.c: 317: lcd_putc('+');
  1966  000746  0E2B               	movlw	43
  1967  000748  EC22  F009         	call	_lcd_putc
  1968                           
  1969                           ;main.c: 318: lcd_putc(((set_t_dq1_up / 10) % 10) + 48);
  1970  00074C  D921               	call	PL26	;call to abstracted procedure
  1971  00074E  EC50  F008         	call	___lbdiv
  1972  000752  EC9B  F008         	call	___lbmod
  1973  000756  0F30               	addlw	48
  1974  000758  EC22  F009         	call	_lcd_putc
  1975                           
  1976                           ;main.c: 319: lcd_putc('.');
  1977  00075C  0E2E               	movlw	46
  1978  00075E  EC22  F009         	call	_lcd_putc
  1979                           
  1980                           ;main.c: 320: lcd_putc(((set_t_dq1_up % 10) + 48));
  1981  000762  D94C               	call	PL56	;call to abstracted procedure
  1982  000764  EC9B  F008         	call	___lbmod
  1983  000768  0F30               	addlw	48
  1984  00076A  EC22  F009         	call	_lcd_putc
  1985                           
  1986                           ;main.c: 322: if (pressed_key == 1) {
  1987  00076E  0426               	decf	_pressed_key^0,w,c
  1988  000770  E105               	bnz	l2863
  1989                           
  1990                           ;main.c: 323: set_t_dq1_up++;
  1991  000772  2A24               	incf	_set_t_dq1_up^0,f,c
  1992                           
  1993                           ;main.c: 324: if (set_t_dq1_up == 11)
  1994  000774  0E0B               	movlw	11
  1995  000776  1824               	xorwf	_set_t_dq1_up^0,w,c
  1996  000778  E101               	bnz	l2863
  1997                           
  1998                           ;main.c: 325: set_t_dq1_up = 0;
  1999  00077A  6A24               	clrf	_set_t_dq1_up^0,c
  2000  00077C                     l2863:
  2001                           
  2002                           ;main.c: 326: };main.c: 327: if (pressed_key == 2) {
  2003  00077C  0E02               	movlw	2
  2004  00077E  1826               	xorwf	_pressed_key^0,w,c
  2005  000780  E105               	bnz	l2871
  2006                           
  2007                           ;main.c: 328: set_t_dq1_up--;
  2008  000782  0624               	decf	_set_t_dq1_up^0,f,c
  2009                           
  2010                           ;main.c: 329: if (set_t_dq1_up == 255)
  2011  000784  2824               	incf	_set_t_dq1_up^0,w,c
  2012  000786  E102               	bnz	l2871
  2013                           
  2014                           ;main.c: 330: set_t_dq1_up = 10;
  2015  000788  0E0A               	movlw	10
  2016  00078A  6E24               	movwf	_set_t_dq1_up^0,c
  2017  00078C                     l2871:
  2018                           
  2019                           ;main.c: 331: };main.c: 332: if (pressed_key == 3) {
  2020  00078C  0E03               	movlw	3
  2021  00078E  1826               	xorwf	_pressed_key^0,w,c
  2022  000790  E001 D4C2          	bnz	l2663
  2023                           
  2024                           ;main.c: 333: sub_sel = 2;
  2025                           
  2026                           ;main.c: 334: lcd_gotoxy(1, 2);
  2027  000794  D8F9               	call	PL24	;call to abstracted procedure
  2028  000796  ECF3  F008         	call	_lcd_gotoxy
  2029                           
  2030                           ;main.c: 335: lcdPrint("Òåìï Íèç:     ");
  2031  00079A  D90E               	call	PL38	;call to abstracted procedure
  2032  00079C  ECF4  F005         	call	_lcdPrint	;wreg free
  2033  0007A0  D4BB               	goto	l2663
  2034  0007A2                     l2879:
  2035                           
  2036                           ;main.c: 339: lcd_gotoxy(10, 2);
  2037  0007A2  D922               	call	PL50	;call to abstracted procedure
  2038  0007A4  ECF3  F008         	call	_lcd_gotoxy
  2039                           
  2040                           ;main.c: 340: lcd_putc('-');
  2041  0007A8  0E2D               	movlw	45
  2042  0007AA  EC22  F009         	call	_lcd_putc
  2043                           
  2044                           ;main.c: 341: lcd_putc(((set_t_dq1_dwn / 10) % 10) + 48);
  2045  0007AE  D8FA               	call	PL32	;call to abstracted procedure
  2046  0007B0  EC50  F008         	call	___lbdiv
  2047  0007B4  EC9B  F008         	call	___lbmod
  2048  0007B8  0F30               	addlw	48
  2049  0007BA  EC22  F009         	call	_lcd_putc
  2050                           
  2051                           ;main.c: 342: lcd_putc('.');
  2052  0007BE  0E2E               	movlw	46
  2053  0007C0  EC22  F009         	call	_lcd_putc
  2054                           
  2055                           ;main.c: 343: lcd_putc(((set_t_dq1_dwn % 10) + 48));
  2056  0007C4  D923               	call	PL62	;call to abstracted procedure
  2057  0007C6  EC9B  F008         	call	___lbmod
  2058  0007CA  0F30               	addlw	48
  2059  0007CC  EC22  F009         	call	_lcd_putc
  2060                           
  2061                           ;main.c: 345: if (pressed_key == 1) {
  2062  0007D0  0426               	decf	_pressed_key^0,w,c
  2063  0007D2  E105               	bnz	l2889
  2064                           
  2065                           ;main.c: 346: set_t_dq1_dwn++;
  2066  0007D4  2A23               	incf	_set_t_dq1_dwn^0,f,c
  2067                           
  2068                           ;main.c: 347: if (set_t_dq1_dwn == 11)
  2069  0007D6  0E0B               	movlw	11
  2070  0007D8  1823               	xorwf	_set_t_dq1_dwn^0,w,c
  2071  0007DA  E101               	bnz	l2889
  2072                           
  2073                           ;main.c: 348: set_t_dq1_dwn = 0;
  2074  0007DC  6A23               	clrf	_set_t_dq1_dwn^0,c
  2075  0007DE                     l2889:
  2076                           
  2077                           ;main.c: 349: };main.c: 350: if (pressed_key == 2) {
  2078  0007DE  0E02               	movlw	2
  2079  0007E0  1826               	xorwf	_pressed_key^0,w,c
  2080  0007E2  E105               	bnz	l2897
  2081                           
  2082                           ;main.c: 351: set_t_dq1_dwn--;
  2083  0007E4  0623               	decf	_set_t_dq1_dwn^0,f,c
  2084                           
  2085                           ;main.c: 352: if (set_t_dq1_dwn == 255)
  2086  0007E6  2823               	incf	_set_t_dq1_dwn^0,w,c
  2087  0007E8  E102               	bnz	l2897
  2088                           
  2089                           ;main.c: 353: set_t_dq1_dwn = 10;
  2090  0007EA  0E0A               	movlw	10
  2091  0007EC  6E23               	movwf	_set_t_dq1_dwn^0,c
  2092  0007EE                     l2897:
  2093                           
  2094                           ;main.c: 354: };main.c: 355: if (pressed_key == 3) {
  2095  0007EE  0E03               	movlw	3
  2096  0007F0  1826               	xorwf	_pressed_key^0,w,c
  2097  0007F2  E001 D491          	bnz	l2663
  2098                           
  2099                           ;main.c: 356: select = 1;
  2100  0007F6  0E01               	movlw	1
  2101  0007F8  6E47               	movwf	_select^0,c
  2102                           
  2103                           ;main.c: 357: write_eep(16, set_t_dq1_up);
  2104  0007FA  C024  F032         	movff	_set_t_dq1_up,write_eep@data
  2105  0007FE  0E10               	movlw	16
  2106  000800  ECAE  F008         	call	_write_eep
  2107                           
  2108                           ;main.c: 358: write_eep(17, set_t_dq1_dwn);
  2109  000804  C023  F032         	movff	_set_t_dq1_dwn,write_eep@data
  2110  000808  0E11               	movlw	17
  2111  00080A  ECAE  F008         	call	_write_eep
  2112  00080E  D484               	goto	l2663
  2113  000810                     l2907:
  2114  000810  5025               	movf	_sub_sel^0,w,c
  2115                           
  2116                           ; Switch size 1, requested type "space"
  2117                           ; Number of cases is 2, Range of values is 1 to 2
  2118                           ; switch strategies available:
  2119                           ; Name         Instructions Cycles
  2120                           ; simple_byte            7     4 (average)
  2121                           ;	Chosen strategy is simple_byte
  2122  000812  0A01               	xorlw	1	; case 1
  2123  000814  E095               	bz	l2853
  2124  000816  0A03               	xorlw	3	; case 2
  2125  000818  E0C4               	bz	l2879
  2126  00081A  D47E               	goto	l2663
  2127  00081C                     l2909:
  2128                           
  2129                           ;main.c: 367: lcd_gotoxy(11, 2);
  2130  00081C  D8EC               	call	PL54	;call to abstracted procedure
  2131  00081E  ECF3  F008         	call	_lcd_gotoxy
  2132                           
  2133                           ;main.c: 368: lcd_putc('+');
  2134  000822  0E2B               	movlw	43
  2135  000824  EC22  F009         	call	_lcd_putc
  2136                           
  2137                           ;main.c: 369: lcd_putc(((set_t_dq2_up / 10) % 10) + 48);
  2138  000828  D8C2               	call	PL34	;call to abstracted procedure
  2139  00082A  EC50  F008         	call	___lbdiv
  2140  00082E  EC9B  F008         	call	___lbmod
  2141  000832  0F30               	addlw	48
  2142  000834  EC22  F009         	call	_lcd_putc
  2143                           
  2144                           ;main.c: 370: lcd_putc('.');
  2145  000838  0E2E               	movlw	46
  2146  00083A  EC22  F009         	call	_lcd_putc
  2147                           
  2148                           ;main.c: 371: lcd_putc(((set_t_dq2_up % 10) + 48));
  2149  00083E  D8CD               	call	PL46	;call to abstracted procedure
  2150  000840  EC9B  F008         	call	___lbmod
  2151  000844  0F30               	addlw	48
  2152  000846  EC22  F009         	call	_lcd_putc
  2153                           
  2154                           ;main.c: 373: if (pressed_key == 1) {
  2155  00084A  0426               	decf	_pressed_key^0,w,c
  2156  00084C  E105               	bnz	l2919
  2157                           
  2158                           ;main.c: 374: set_t_dq2_up++;
  2159  00084E  2A22               	incf	_set_t_dq2_up^0,f,c
  2160                           
  2161                           ;main.c: 375: if (set_t_dq2_up == 11)
  2162  000850  0E0B               	movlw	11
  2163  000852  1822               	xorwf	_set_t_dq2_up^0,w,c
  2164  000854  E101               	bnz	l2919
  2165                           
  2166                           ;main.c: 376: set_t_dq2_up = 0;
  2167  000856  6A22               	clrf	_set_t_dq2_up^0,c
  2168  000858                     l2919:
  2169                           
  2170                           ;main.c: 377: };main.c: 378: if (pressed_key == 2) {
  2171  000858  0E02               	movlw	2
  2172  00085A  1826               	xorwf	_pressed_key^0,w,c
  2173  00085C  E105               	bnz	l2927
  2174                           
  2175                           ;main.c: 379: set_t_dq2_up--;
  2176  00085E  0622               	decf	_set_t_dq2_up^0,f,c
  2177                           
  2178                           ;main.c: 380: if (set_t_dq2_up == 255)
  2179  000860  2822               	incf	_set_t_dq2_up^0,w,c
  2180  000862  E102               	bnz	l2927
  2181                           
  2182                           ;main.c: 381: set_t_dq2_up = 10;
  2183  000864  0E0A               	movlw	10
  2184  000866  6E22               	movwf	_set_t_dq2_up^0,c
  2185  000868                     l2927:
  2186                           
  2187                           ;main.c: 382: };main.c: 383: if (pressed_key == 3) {
  2188  000868  0E03               	movlw	3
  2189  00086A  1826               	xorwf	_pressed_key^0,w,c
  2190  00086C  E001 D454          	bnz	l2663
  2191                           
  2192                           ;main.c: 384: sub_sel = 2;
  2193                           
  2194                           ;main.c: 385: lcd_gotoxy(1, 2);
  2195  000870  D88B               	call	PL24	;call to abstracted procedure
  2196  000872  ECF3  F008         	call	_lcd_gotoxy
  2197                           
  2198                           ;main.c: 386: lcdPrint("Òåìï Íèç:     ");
  2199  000876  D8A0               	call	PL38	;call to abstracted procedure
  2200  000878  ECF4  F005         	call	_lcdPrint	;wreg free
  2201  00087C  D44D               	goto	l2663
  2202  00087E                     l2935:
  2203                           
  2204                           ;main.c: 390: lcd_gotoxy(10, 2);
  2205  00087E  D8B4               	call	PL50	;call to abstracted procedure
  2206  000880  ECF3  F008         	call	_lcd_gotoxy
  2207                           
  2208                           ;main.c: 391: lcd_putc('-');
  2209  000884  0E2D               	movlw	45
  2210  000886  EC22  F009         	call	_lcd_putc
  2211                           
  2212                           ;main.c: 392: lcd_putc(((set_t_dq2_dwn / 10) % 10) + 48);
  2213  00088A  D89B               	call	PL40	;call to abstracted procedure
  2214  00088C  EC50  F008         	call	___lbdiv
  2215  000890  EC9B  F008         	call	___lbmod
  2216  000894  0F30               	addlw	48
  2217  000896  EC22  F009         	call	_lcd_putc
  2218                           
  2219                           ;main.c: 393: lcd_putc('.');
  2220  00089A  0E2E               	movlw	46
  2221  00089C  EC22  F009         	call	_lcd_putc
  2222                           
  2223                           ;main.c: 394: lcd_putc(((set_t_dq2_dwn % 10) + 48));
  2224  0008A0  D8A6               	call	PL52	;call to abstracted procedure
  2225  0008A2  EC9B  F008         	call	___lbmod
  2226  0008A6  0F30               	addlw	48
  2227  0008A8  EC22  F009         	call	_lcd_putc
  2228                           
  2229                           ;main.c: 396: if (pressed_key == 1) {
  2230  0008AC  0426               	decf	_pressed_key^0,w,c
  2231  0008AE  E105               	bnz	l2945
  2232                           
  2233                           ;main.c: 397: set_t_dq2_dwn++;
  2234  0008B0  2A21               	incf	_set_t_dq2_dwn^0,f,c
  2235                           
  2236                           ;main.c: 398: if (set_t_dq2_dwn == 11)
  2237  0008B2  0E0B               	movlw	11
  2238  0008B4  1821               	xorwf	_set_t_dq2_dwn^0,w,c
  2239  0008B6  E101               	bnz	l2945
  2240                           
  2241                           ;main.c: 399: set_t_dq2_dwn = 0;
  2242  0008B8  6A21               	clrf	_set_t_dq2_dwn^0,c
  2243  0008BA                     l2945:
  2244                           
  2245                           ;main.c: 400: };main.c: 401: if (pressed_key == 2) {
  2246  0008BA  0E02               	movlw	2
  2247  0008BC  1826               	xorwf	_pressed_key^0,w,c
  2248  0008BE  E105               	bnz	l2953
  2249                           
  2250                           ;main.c: 402: set_t_dq2_dwn--;
  2251  0008C0  0621               	decf	_set_t_dq2_dwn^0,f,c
  2252                           
  2253                           ;main.c: 403: if (set_t_dq2_dwn == 255)
  2254  0008C2  2821               	incf	_set_t_dq2_dwn^0,w,c
  2255  0008C4  E102               	bnz	l2953
  2256                           
  2257                           ;main.c: 404: set_t_dq2_dwn = 10;
  2258  0008C6  0E0A               	movlw	10
  2259  0008C8  6E21               	movwf	_set_t_dq2_dwn^0,c
  2260  0008CA                     l2953:
  2261                           
  2262                           ;main.c: 405: };main.c: 406: if (pressed_key == 3) {
  2263  0008CA  0E03               	movlw	3
  2264  0008CC  1826               	xorwf	_pressed_key^0,w,c
  2265  0008CE  E001 D423          	bnz	l2663
  2266                           
  2267                           ;main.c: 407: select = 1;
  2268  0008D2  0E01               	movlw	1
  2269  0008D4  6E47               	movwf	_select^0,c
  2270                           
  2271                           ;main.c: 408: write_eep(18, set_t_dq2_up);
  2272  0008D6  C022  F032         	movff	_set_t_dq2_up,write_eep@data
  2273  0008DA  0E12               	movlw	18
  2274  0008DC  ECAE  F008         	call	_write_eep
  2275                           
  2276                           ;main.c: 409: write_eep(19, set_t_dq2_dwn);
  2277  0008E0  C021  F032         	movff	_set_t_dq2_dwn,write_eep@data
  2278  0008E4  0E13               	movlw	19
  2279  0008E6  ECAE  F008         	call	_write_eep
  2280  0008EA  D416               	goto	l2663
  2281  0008EC                     l2963:
  2282  0008EC  5025               	movf	_sub_sel^0,w,c
  2283                           
  2284                           ; Switch size 1, requested type "space"
  2285                           ; Number of cases is 2, Range of values is 1 to 2
  2286                           ; switch strategies available:
  2287                           ; Name         Instructions Cycles
  2288                           ; simple_byte            7     4 (average)
  2289                           ;	Chosen strategy is simple_byte
  2290  0008EE  0A01               	xorlw	1	; case 1
  2291  0008F0  E095               	bz	l2909
  2292  0008F2  0A03               	xorlw	3	; case 2
  2293  0008F4  E0C4               	bz	l2935
  2294  0008F6  D410               	goto	l2663
  2295  0008F8                     l2967:
  2296  0008F8  5047               	movf	_select^0,w,c
  2297                           
  2298                           ; Switch size 1, requested type "space"
  2299                           ; Number of cases is 7, Range of values is 1 to 7
  2300                           ; switch strategies available:
  2301                           ; Name         Instructions Cycles
  2302                           ; simple_byte           22    12 (average)
  2303                           ;	Chosen strategy is simple_byte
  2304  0008FA  0A01               	xorlw	1	; case 1
  2305  0008FC  E101 D415          	bz	l2671
  2306  000900  0A03               	xorlw	3	; case 2
  2307  000902  E101 D684          	bz	l2759
  2308  000906  0A01               	xorlw	1	; case 3
  2309  000908  E101 D406          	bz	l2663
  2310  00090C  0A07               	xorlw	7	; case 4
  2311  00090E  E101 D6CE          	bz	l2807
  2312  000912  0A01               	xorlw	1	; case 5
  2313  000914  E101 D77C          	bz	l2907
  2314  000918  0A03               	xorlw	3	; case 6
  2315  00091A  E0E8               	bz	l2963
  2316  00091C  0A01               	xorlw	1	; case 7
  2317  00091E  E101 D6A3          	bz	l2787
  2318  000922  EF8C  F000         	goto	l2663
  2319  000926                     __end_of_main:
  2320                           	callstack 0
  2321  000926                     PL2:
  2322                           	callstack 25
  2323  000926  C032  F039         	movff	?___lwdiv,___lwmod@dividend
  2324  00092A  C033  F03A         	movff	?___lwdiv+1,___lwmod@dividend+1
  2325  00092E  6A3C               	clrf	(___lwmod@divisor+1)^0,c
  2326  000930  0E0A               	movlw	10
  2327  000932  6E3B               	movwf	___lwmod@divisor^0,c
  2328  000934  0C0A               	retlw	10
  2329  000936                     __end_ofPL2:
  2330                           	callstack 0
  2331  000936                     PL6:
  2332                           	callstack 25
  2333  000936  6A3C               	clrf	(___lwmod@divisor+1)^0,c
  2334  000938  0E0A               	movlw	10
  2335  00093A  6E3B               	movwf	___lwmod@divisor^0,c
  2336  00093C  0C0A               	retlw	10
  2337  00093E                     __end_ofPL6:
  2338                           	callstack 0
  2339  00093E                     PL8:
  2340                           	callstack 25
  2341  00093E  6E34               	movwf	___lwdiv@divisor^0,c
  2342  000940  C01D  F032         	movff	_temperature_1,___lwdiv@dividend
  2343  000944  C01E  F033         	movff	_temperature_1+1,___lwdiv@dividend+1
  2344  000948  0012               	return	
  2345  00094A                     __end_ofPL8:
  2346                           	callstack 0
  2347  00094A                     PL10:
  2348                           	callstack 25
  2349  00094A  6E34               	movwf	___lwdiv@divisor^0,c
  2350  00094C  C01B  F032         	movff	_temperature_2,___lwdiv@dividend
  2351  000950  C01C  F033         	movff	_temperature_2+1,___lwdiv@dividend+1
  2352  000954  0012               	return	
  2353  000956                     __end_ofPL10:
  2354                           	callstack 0
  2355  000956                     PL12:
  2356                           	callstack 25
  2357  000956  C01D  F039         	movff	_temperature_1,___lwmod@dividend
  2358  00095A  C01E  F03A         	movff	_temperature_1+1,___lwmod@dividend+1
  2359  00095E  0012               	return	
  2360  000960                     __end_ofPL12:
  2361                           	callstack 0
  2362  000960                     PL14:
  2363                           	callstack 25
  2364  000960  C01B  F039         	movff	_temperature_2,___lwmod@dividend
  2365  000964  C01C  F03A         	movff	_temperature_2+1,___lwmod@dividend+1
  2366  000968  0012               	return	
  2367  00096A                     __end_ofPL14:
  2368                           	callstack 0
  2369  00096A                     PL16:
  2370                           	callstack 25
  2371  00096A  0E02               	movlw	2
  2372  00096C  6E36               	movwf	lcd_gotoxy@y^0,c
  2373  00096E  0C01               	retlw	1
  2374  000970                     __end_ofPL16:
  2375                           	callstack 0
  2376  000970                     PL20:
  2377                           	callstack 25
  2378  000970  6E34               	movwf	___lwdiv@divisor^0,c
  2379  000972  C017  F032         	movff	_temp2_fix,___lwdiv@dividend
  2380  000976  C018  F033         	movff	_temp2_fix+1,___lwdiv@dividend+1
  2381  00097A  0012               	return	
  2382  00097C                     __end_ofPL20:
  2383                           	callstack 0
  2384  00097C                     PL22:
  2385                           	callstack 25
  2386  00097C  6E34               	movwf	___lwdiv@divisor^0,c
  2387  00097E  C019  F032         	movff	_temp1_fix,___lwdiv@dividend
  2388  000982  C01A  F033         	movff	_temp1_fix+1,___lwdiv@dividend+1
  2389  000986  0012               	return	
  2390  000988                     __end_ofPL22:
  2391                           	callstack 0
  2392  000988                     PL24:
  2393                           	callstack 25
  2394  000988  0E02               	movlw	2
  2395  00098A  6E25               	movwf	_sub_sel^0,c
  2396  00098C  6E36               	movwf	lcd_gotoxy@y^0,c
  2397  00098E  0C01               	retlw	1
  2398  000990                     __end_ofPL24:
  2399                           	callstack 0
  2400  000990                     PL26:
  2401                           	callstack 25
  2402  000990  0E0A               	movlw	10
  2403  000992  6E36               	movwf	___lbmod@divisor^0,c
  2404  000994  6E32               	movwf	___lbdiv@divisor^0,c
  2405  000996  5024               	movf	_set_t_dq1_up^0,w,c
  2406  000998  0012               	return	
  2407  00099A                     __end_ofPL26:
  2408                           	callstack 0
  2409  00099A                     PL28:
  2410                           	callstack 25
  2411  00099A  0EE3               	movlw	low STR_13
  2412  00099C  6E39               	movwf	lcdPrint@t^0,c
  2413  00099E  0E1F               	movlw	high STR_13
  2414  0009A0  6E3A               	movwf	(lcdPrint@t+1)^0,c
  2415  0009A2  0012               	return	
  2416  0009A4                     __end_ofPL28:
  2417                           	callstack 0
  2418  0009A4                     PL32:
  2419                           	callstack 25
  2420  0009A4  0E0A               	movlw	10
  2421  0009A6  6E36               	movwf	___lbmod@divisor^0,c
  2422  0009A8  6E32               	movwf	___lbdiv@divisor^0,c
  2423  0009AA  5023               	movf	_set_t_dq1_dwn^0,w,c
  2424  0009AC  0012               	return	
  2425  0009AE                     __end_ofPL32:
  2426                           	callstack 0
  2427  0009AE                     PL34:
  2428                           	callstack 25
  2429  0009AE  0E0A               	movlw	10
  2430  0009B0  6E36               	movwf	___lbmod@divisor^0,c
  2431  0009B2  6E32               	movwf	___lbdiv@divisor^0,c
  2432  0009B4  5022               	movf	_set_t_dq2_up^0,w,c
  2433  0009B6  0012               	return	
  2434  0009B8                     __end_ofPL34:
  2435                           	callstack 0
  2436  0009B8                     PL38:
  2437                           	callstack 25
  2438  0009B8  0E91               	movlw	low STR_16
  2439  0009BA  6E39               	movwf	lcdPrint@t^0,c
  2440  0009BC  0E1F               	movlw	high STR_16
  2441  0009BE  6E3A               	movwf	(lcdPrint@t+1)^0,c
  2442  0009C0  0012               	return	
  2443  0009C2                     __end_ofPL38:
  2444                           	callstack 0
  2445  0009C2                     PL40:
  2446                           	callstack 25
  2447  0009C2  0E0A               	movlw	10
  2448  0009C4  6E36               	movwf	___lbmod@divisor^0,c
  2449  0009C6  6E32               	movwf	___lbdiv@divisor^0,c
  2450  0009C8  5021               	movf	_set_t_dq2_dwn^0,w,c
  2451  0009CA  0012               	return	
  2452  0009CC                     __end_ofPL40:
  2453                           	callstack 0
  2454  0009CC                     PL42:
  2455                           	callstack 25
  2456  0009CC  6E47               	movwf	_select^0,c
  2457  0009CE  0E01               	movlw	1
  2458  0009D0  6E36               	movwf	lcd_gotoxy@y^0,c
  2459  0009D2  0C01               	retlw	1
  2460  0009D4                     __end_ofPL42:
  2461                           	callstack 0
  2462  0009D4                     PL44:
  2463                           	callstack 25
  2464  0009D4  0E01               	movlw	1
  2465  0009D6  6E36               	movwf	lcd_gotoxy@y^0,c
  2466  0009D8  0C08               	retlw	8
  2467  0009DA                     __end_ofPL44:
  2468                           	callstack 0
  2469  0009DA                     PL46:
  2470                           	callstack 25
  2471  0009DA  0E0A               	movlw	10
  2472  0009DC  6E36               	movwf	___lbmod@divisor^0,c
  2473  0009DE  5022               	movf	_set_t_dq2_up^0,w,c
  2474  0009E0  0012               	return	
  2475  0009E2                     __end_ofPL46:
  2476                           	callstack 0
  2477  0009E2                     PL48:
  2478                           	callstack 25
  2479  0009E2  0E01               	movlw	1
  2480  0009E4  6E36               	movwf	lcd_gotoxy@y^0,c
  2481  0009E6  0C10               	retlw	16
  2482  0009E8                     __end_ofPL48:
  2483                           	callstack 0
  2484  0009E8                     PL50:
  2485                           	callstack 25
  2486  0009E8  0E02               	movlw	2
  2487  0009EA  6E36               	movwf	lcd_gotoxy@y^0,c
  2488  0009EC  0C0A               	retlw	10
  2489  0009EE                     __end_ofPL50:
  2490                           	callstack 0
  2491  0009EE                     PL52:
  2492                           	callstack 25
  2493  0009EE  0E0A               	movlw	10
  2494  0009F0  6E36               	movwf	___lbmod@divisor^0,c
  2495  0009F2  5021               	movf	_set_t_dq2_dwn^0,w,c
  2496  0009F4  0012               	return	
  2497  0009F6                     __end_ofPL52:
  2498                           	callstack 0
  2499  0009F6                     PL54:
  2500                           	callstack 25
  2501  0009F6  0E02               	movlw	2
  2502  0009F8  6E36               	movwf	lcd_gotoxy@y^0,c
  2503  0009FA  0C0B               	retlw	11
  2504  0009FC                     __end_ofPL54:
  2505                           	callstack 0
  2506  0009FC                     PL56:
  2507                           	callstack 25
  2508  0009FC  0E0A               	movlw	10
  2509  0009FE  6E36               	movwf	___lbmod@divisor^0,c
  2510  000A00  5024               	movf	_set_t_dq1_up^0,w,c
  2511  000A02  0012               	return	
  2512  000A04                     __end_ofPL56:
  2513                           	callstack 0
  2514  000A04                     PL58:
  2515                           	callstack 25
  2516  000A04  6E47               	movwf	_select^0,c
  2517  000A06  0E01               	movlw	1
  2518  000A08  6E25               	movwf	_sub_sel^0,c
  2519  000A0A  0C01               	retlw	1
  2520  000A0C                     __end_ofPL58:
  2521                           	callstack 0
  2522  000A0C                     PL62:
  2523                           	callstack 25
  2524  000A0C  0E0A               	movlw	10
  2525  000A0E  6E36               	movwf	___lbmod@divisor^0,c
  2526  000A10  5023               	movf	_set_t_dq1_dwn^0,w,c
  2527  000A12  0012               	return	
  2528  000A14                     __end_ofPL62:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _lcd_putc *****************
  2532 ;; Defined at:
  2533 ;;		line 90 in file "hd44780.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  c               1    wreg     unsigned char 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  c               1    4[COMRAM] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1
  2547 ;;      Params:         0       0       0
  2548 ;;      Locals:         1       0       0
  2549 ;;      Temps:          0       0       0
  2550 ;;      Totals:         1       0       0
  2551 ;;Total ram usage:        1 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    3
  2554 ;; This function calls:
  2555 ;;		_lcdWrite
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text1
  2562  001244                     __ptext1:
  2563                           	callstack 0
  2564  001244                     _lcd_putc:
  2565                           	callstack 27
  2566                           
  2567                           ;incstack = 0
  2568                           ;lcd_putc@c stored from wreg
  2569  001244  6E36               	movwf	lcd_putc@c^0,c
  2570                           
  2571                           ;hd44780.c: 92: lcdWrite(c, DATA);
  2572  001246  0E01               	movlw	1
  2573  001248  6E34               	movwf	lcdWrite@type^0,c
  2574  00124A  5036               	movf	lcd_putc@c^0,w,c
  2575  00124C  EFD2  F008         	goto	_lcdWrite
  2576  001250                     __end_of_lcd_putc:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function _lcdPrint *****************
  2580 ;; Defined at:
  2581 ;;		line 96 in file "hd44780.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  t               2    7[COMRAM] PTR const unsigned char 
  2584 ;;		 -> STR_17(15), STR_16(15), STR_15(11), STR_14(13), 
  2585 ;;		 -> STR_13(11), STR_12(13), STR_11(15), STR_10(15), 
  2586 ;;		 -> STR_9(16), STR_8(13), STR_7(15), STR_6(8), 
  2587 ;;		 -> STR_5(8), STR_4(13), STR_3(16), STR_2(16), 
  2588 ;;		 -> STR_1(16), 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1
  2600 ;;      Params:         2       0       0
  2601 ;;      Locals:         0       0       0
  2602 ;;      Temps:          4       0       0
  2603 ;;      Totals:         6       0       0
  2604 ;;Total ram usage:        6 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    4
  2607 ;; This function calls:
  2608 ;;		_lcdWrite
  2609 ;;		_lcd_gotoxy
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text2
  2616  000BE8                     __ptext2:
  2617                           	callstack 0
  2618  000BE8                     _lcdPrint:
  2619                           	callstack 26
  2620                           
  2621                           ;hd44780.c: 97: while(*t != '\0'){
  2622                           
  2623                           ;incstack = 0
  2624  000BE8  D046               	goto	l2391
  2625  000BEA                     l2371:
  2626                           
  2627                           ;hd44780.c: 100: lcdWrite(1, COMMAND);
  2628  000BEA  D84F               	call	PL60	;call to abstracted procedure
  2629  000BEC  ECD2  F008         	call	_lcdWrite
  2630                           
  2631                           ;hd44780.c: 101: _delay((unsigned long)((2)*(8000000/4000.0)));
  2632  000BF0  0E06               	movlw	6
  2633  000BF2  6E3B               	movwf	??_lcdPrint^0,c
  2634  000BF4  0E30               	movlw	48
  2635  000BF6                     u2097:
  2636  000BF6  2EE8               	decfsz	wreg,f,c
  2637  000BF8  D7FE               	bra	u2097
  2638  000BFA  2E3B               	decfsz	??_lcdPrint^0,f,c
  2639  000BFC  D7FC               	bra	u2097
  2640  000BFE  D000               	nop2	
  2641                           
  2642                           ;hd44780.c: 102: break;
  2643  000C00  D038               	goto	l2389
  2644  000C02                     l2375:
  2645                           
  2646                           ;hd44780.c: 105: lcd_gotoxy(1, 2);
  2647  000C02  ECB5  F004         	call	PL16	;call to abstracted procedure
  2648  000C06  ECF3  F008         	call	_lcd_gotoxy
  2649                           
  2650                           ;hd44780.c: 106: break;
  2651  000C0A  D033               	goto	l2389
  2652  000C0C                     l2377:
  2653                           
  2654                           ;hd44780.c: 109: lcdWrite(0x10, COMMAND);
  2655  000C0C  0E00               	movlw	0
  2656  000C0E  6E34               	movwf	lcdWrite@type^0,c
  2657  000C10  0E10               	movlw	16
  2658  000C12  ECD2  F008         	call	_lcdWrite
  2659                           
  2660                           ;hd44780.c: 110: break;
  2661  000C16  D02D               	goto	l2389
  2662  000C18                     l2379:
  2663                           
  2664                           ;hd44780.c: 113: if (*t < 0xC0) {
  2665  000C18  C039  FFF6         	movff	lcdPrint@t,tblptrl
  2666  000C1C  C03A  FFF7         	movff	lcdPrint@t+1,tblptrh
  2667  000C20                     	if	0	;tblptru may be non-zero
  2668  000C20                     	endif
  2669  000C20                     	if	0	;tblptru may be non-zero
  2670  000C20                     	endif
  2671  000C20  0EC0               	movlw	192
  2672  000C22  0008               	tblrd		*
  2673  000C24  60F5               	cpfslt	tablat,c
  2674  000C26  D006               	goto	l2383
  2675                           
  2676                           ;hd44780.c: 114: lcdWrite(*t, DATA);
  2677  000C28  0E01               	movlw	1
  2678  000C2A  6E34               	movwf	lcdWrite@type^0,c
  2679  000C2C  D827               	call	PL4	;call to abstracted procedure
  2680  000C2E  ECD2  F008         	call	_lcdWrite
  2681                           
  2682                           ;hd44780.c: 115: } else {
  2683  000C32  D01F               	goto	l2389
  2684  000C34                     l2383:
  2685                           
  2686                           ;hd44780.c: 116: lcdWrite(HD44780_CYR[(unsigned char) (*t) - 0xC0], DATA);
  2687  000C34  0E01               	movlw	1
  2688  000C36  6E34               	movwf	lcdWrite@type^0,c
  2689  000C38  0E40               	movlw	64
  2690  000C3A  6E3B               	movwf	??_lcdPrint^0,c
  2691  000C3C  683C               	setf	(??_lcdPrint+1)^0,c
  2692  000C3E  D81E               	call	PL4	;call to abstracted procedure
  2693  000C40  6E3D               	movwf	(??_lcdPrint+2)^0,c
  2694  000C42  6A3E               	clrf	(??_lcdPrint+3)^0,c
  2695  000C44  503B               	movf	??_lcdPrint^0,w,c
  2696  000C46  263D               	addwf	(??_lcdPrint+2)^0,f,c
  2697  000C48  503C               	movf	(??_lcdPrint+1)^0,w,c
  2698  000C4A  223E               	addwfc	(??_lcdPrint+3)^0,f,c
  2699  000C4C  0EDB               	movlw	low _HD44780_CYR
  2700  000C4E  243D               	addwf	(??_lcdPrint+2)^0,w,c
  2701  000C50  6EF6               	movwf	tblptrl,c
  2702  000C52  0E1E               	movlw	high _HD44780_CYR
  2703  000C54  203E               	addwfc	(??_lcdPrint+3)^0,w,c
  2704  000C56  6EF7               	movwf	tblptrh,c
  2705  000C58                     	if	0	;There are less than 3 active tblptr bytes
  2706  000C58                     	endif
  2707  000C58  0008               	tblrd		*
  2708  000C5A  50F5               	movf	tablat,w,c
  2709  000C5C  ECD2  F008         	call	_lcdWrite
  2710  000C60  D008               	goto	l2389
  2711  000C62                     l2387:
  2712  000C62  D80C               	call	PL4	;call to abstracted procedure
  2713                           
  2714                           ; Switch size 1, requested type "space"
  2715                           ; Number of cases is 3, Range of values is 8 to 12
  2716                           ; switch strategies available:
  2717                           ; Name         Instructions Cycles
  2718                           ; simple_byte           10     6 (average)
  2719                           ;	Chosen strategy is simple_byte
  2720  000C64  0A08               	xorlw	8	; case 8
  2721  000C66  E0D2               	bz	l2377
  2722  000C68  0A02               	xorlw	2	; case 10
  2723  000C6A  E0CB               	bz	l2375
  2724  000C6C  0A06               	xorlw	6	; case 12
  2725  000C6E  E0BD               	bz	l2371
  2726  000C70  D7D3               	goto	l2379
  2727  000C72                     l2389:
  2728                           
  2729                           ;hd44780.c: 121: *t++;
  2730  000C72  4A39               	infsnz	lcdPrint@t^0,f,c
  2731  000C74  2A3A               	incf	(lcdPrint@t+1)^0,f,c
  2732  000C76                     l2391:
  2733  000C76  D802               	call	PL4	;call to abstracted procedure
  2734  000C78  E1F4               	bnz	l2387
  2735  000C7A  0012               	return		;funcret
  2736  000C7C                     __end_of_lcdPrint:
  2737                           	callstack 0
  2738  000C7C                     PL4:
  2739                           	callstack 26
  2740  000C7C  C039  FFF6         	movff	lcdPrint@t,tblptrl
  2741  000C80  C03A  FFF7         	movff	lcdPrint@t+1,tblptrh
  2742  000C84                     	if	0	;tblptru may be non-zero
  2743  000C84                     	endif
  2744  000C84                     	if	0	;tblptru may be non-zero
  2745  000C84                     	endif
  2746  000C84  0008               	tblrd		*
  2747  000C86  50F5               	movf	tablat,w,c
  2748  000C88  0012               	return	
  2749  000C8A                     __end_ofPL4:
  2750                           	callstack 0
  2751  000C8A                     PL60:
  2752                           	callstack 27
  2753  000C8A  0E00               	movlw	0
  2754  000C8C  6E34               	movwf	lcdWrite@type^0,c
  2755  000C8E  0C01               	retlw	1
  2756  000C90                     __end_ofPL60:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _lcd_gotoxy *****************
  2760 ;; Defined at:
  2761 ;;		line 76 in file "hd44780.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  x               1    wreg     unsigned char 
  2764 ;;  y               1    4[COMRAM] unsigned char 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  x               1    5[COMRAM] unsigned char 
  2767 ;;  address         1    6[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1
  2777 ;;      Params:         1       0       0
  2778 ;;      Locals:         2       0       0
  2779 ;;      Temps:          0       0       0
  2780 ;;      Totals:         3       0       0
  2781 ;;Total ram usage:        3 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    3
  2784 ;; This function calls:
  2785 ;;		_lcdWrite
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;;		_lcdPrint
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text3
  2793  0011E6                     __ptext3:
  2794                           	callstack 0
  2795  0011E6                     _lcd_gotoxy:
  2796                           	callstack 27
  2797                           
  2798                           ;incstack = 0
  2799                           ;lcd_gotoxy@x stored from wreg
  2800  0011E6  6E37               	movwf	lcd_gotoxy@x^0,c
  2801                           
  2802                           ;hd44780.c: 77: uint8_t address;;hd44780.c: 79: if (y != 1)
  2803  0011E8  0436               	decf	lcd_gotoxy@y^0,w,c
  2804  0011EA  E003               	bz	l356
  2805                           
  2806                           ;hd44780.c: 80: address = 0x40;
  2807  0011EC  0E40               	movlw	64
  2808  0011EE  6E38               	movwf	lcd_gotoxy@address^0,c
  2809  0011F0  D001               	goto	l2185
  2810  0011F2                     l356:
  2811                           
  2812                           ;hd44780.c: 81: else;hd44780.c: 82: address = 0;
  2813  0011F2  6A38               	clrf	lcd_gotoxy@address^0,c
  2814  0011F4                     l2185:
  2815                           
  2816                           ;hd44780.c: 84: address += x - 1;
  2817  0011F4  0437               	decf	lcd_gotoxy@x^0,w,c
  2818  0011F6  2638               	addwf	lcd_gotoxy@address^0,f,c
  2819                           
  2820                           ;hd44780.c: 85: lcdWrite(0x80 | address, COMMAND);
  2821  0011F8  6A34               	clrf	lcdWrite@type^0,c
  2822  0011FA  5038               	movf	lcd_gotoxy@address^0,w,c
  2823  0011FC  0980               	iorlw	128
  2824  0011FE  EFD2  F008         	goto	_lcdWrite
  2825  001202                     __end_of_lcd_gotoxy:
  2826                           	callstack 0
  2827                           
  2828 ;; *************** function _key_press *****************
  2829 ;; Defined at:
  2830 ;;		line 5 in file "key.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  key             1    0[COMRAM] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1
  2844 ;;      Params:         0       0       0
  2845 ;;      Locals:         1       0       0
  2846 ;;      Temps:          0       0       0
  2847 ;;      Totals:         1       0       0
  2848 ;;Total ram usage:        1 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    1
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_main
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text4
  2859  000ED8                     __ptext4:
  2860                           	callstack 0
  2861  000ED8                     _key_press:
  2862                           	callstack 29
  2863                           
  2864                           ;key.c: 7: static uint16_t count = 0;;key.c: 8: uint8_t key;;key.c: 9: if (((PORTB & (1 
      +                          << 1)) == 0) && ((PORTB & (1 << 2)) == 0))
  2865                           
  2866                           ;incstack = 0
  2867  000ED8  A281               	btfss	129,1,c	;volatile
  2868  000EDA  B481               	btfsc	129,2,c	;volatile
  2869  000EDC  D002               	goto	l449
  2870                           
  2871                           ;key.c: 10: key = 3;
  2872  000EDE  0E03               	movlw	3
  2873  000EE0  D007               	goto	L4
  2874  000EE2                     l449:
  2875                           
  2876                           ;key.c: 11: else if ((PORTB & (1 << 1)) == 0)
  2877  000EE2  B281               	btfsc	129,1,c	;volatile
  2878  000EE4  D002               	goto	l451
  2879                           
  2880                           ;key.c: 12: key = 1;
  2881  000EE6  0E01               	movlw	1
  2882  000EE8  D003               	goto	L4
  2883  000EEA                     l451:
  2884                           
  2885                           ;key.c: 13: else if ((PORTB & (1 << 2)) == 0)
  2886  000EEA  B481               	btfsc	129,2,c	;volatile
  2887  000EEC  D003               	goto	l453
  2888                           
  2889                           ;key.c: 14: key = 2;
  2890  000EEE  0E02               	movlw	2
  2891  000EF0                     L4:
  2892  000EF0  6E32               	movwf	key_press@key^0,c
  2893  000EF2  D001               	goto	l1527
  2894  000EF4                     l453:
  2895                           
  2896                           ;key.c: 15: else;key.c: 16: key = 0;
  2897  000EF4  6A32               	clrf	key_press@key^0,c
  2898  000EF6                     l1527:
  2899                           
  2900                           ;key.c: 19: if (key) {
  2901  000EF6  5032               	movf	key_press@key^0,w,c
  2902  000EF8  E013               	bz	l455
  2903                           
  2904                           ;key.c: 20: if (count > 300) {
  2905  000EFA  0E2D               	movlw	45
  2906  000EFC  5C15               	subwf	key_press@count^0,w,c
  2907  000EFE  0E01               	movlw	1
  2908  000F00  5816               	subwfb	(key_press@count+1)^0,w,c
  2909  000F02  E307               	bnc	l1539
  2910                           
  2911                           ;key.c: 21: count = 300 - 10;
  2912  000F04  0E01               	movlw	1
  2913  000F06  6E16               	movwf	(key_press@count+1)^0,c
  2914  000F08  0E22               	movlw	34
  2915  000F0A  6E15               	movwf	key_press@count^0,c
  2916  000F0C                     l1533:
  2917                           
  2918                           ;key.c: 22: key_pressed = key;
  2919  000F0C  C032  F01F         	movff	key_press@key,_key_pressed	;volatile
  2920  000F10  0012               	return	
  2921  000F12                     l1539:
  2922  000F12  4A15               	infsnz	key_press@count^0,f,c
  2923  000F14  2A16               	incf	(key_press@count+1)^0,f,c
  2924                           
  2925                           ;key.c: 26: if (count == 15) {
  2926  000F16  0E0F               	movlw	15
  2927  000F18  1815               	xorwf	key_press@count^0,w,c
  2928  000F1A  1016               	iorwf	(key_press@count+1)^0,w,c
  2929  000F1C  E0F7               	bz	l1533
  2930  000F1E  0012               	return	
  2931  000F20                     l455:
  2932  000F20  6A15               	clrf	key_press@count^0,c
  2933  000F22  6A16               	clrf	(key_press@count+1)^0,c
  2934  000F24  0012               	return		;funcret
  2935  000F26                     __end_of_key_press:
  2936                           	callstack 0
  2937                           
  2938 ;; *************** function _key_GetKey *****************
  2939 ;; Defined at:
  2940 ;;		line 48 in file "key.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  key             1    0[COMRAM] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      unsigned char 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1
  2954 ;;      Params:         0       0       0
  2955 ;;      Locals:         1       0       0
  2956 ;;      Temps:          0       0       0
  2957 ;;      Totals:         1       0       0
  2958 ;;Total ram usage:        1 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text5
  2969  001250                     __ptext5:
  2970                           	callstack 0
  2971  001250                     _key_GetKey:
  2972                           	callstack 29
  2973                           
  2974                           ;key.c: 50: uint8_t key = key_pressed;
  2975                           
  2976                           ;incstack = 0
  2977  001250  C01F  F032         	movff	_key_pressed,key_GetKey@key	;volatile
  2978                           
  2979                           ;key.c: 52: key_pressed = 0;
  2980  001254  6A1F               	clrf	_key_pressed^0,c	;volatile
  2981                           
  2982                           ;key.c: 53: return key;
  2983  001256  5032               	movf	key_GetKey@key^0,w,c
  2984  001258  0012               	return		;funcret
  2985  00125A                     __end_of_key_GetKey:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _ds18b20_readrom *****************
  2989 ;; Defined at:
  2990 ;;		line 170 in file "ds18b20.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  num_dq          1    wreg     unsigned char 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  num_dq          1   15[COMRAM] unsigned char 
  2995 ;;  temp_rom        8    7[COMRAM] unsigned char [8]
  2996 ;;  i               1   16[COMRAM] unsigned char 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      unsigned char 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1
  3006 ;;      Params:         0       0       0
  3007 ;;      Locals:        10       0       0
  3008 ;;      Temps:          0       0       0
  3009 ;;      Totals:        10       0       0
  3010 ;;Total ram usage:       10 bytes
  3011 ;; Hardware stack levels used:    1
  3012 ;; Hardware stack levels required when called:    3
  3013 ;; This function calls:
  3014 ;;		_Delay_ms
  3015 ;;		_ds18b20_crc8
  3016 ;;		_ow_reset
  3017 ;;		_read_byte
  3018 ;;		_write_byte
  3019 ;;		_write_eep
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text6
  3026  000E08                     __ptext6:
  3027                           	callstack 0
  3028  000E08                     _ds18b20_readrom:
  3029                           	callstack 27
  3030                           
  3031                           ;incstack = 0
  3032                           ;ds18b20_readrom@num_dq stored from wreg
  3033  000E08  6E41               	movwf	ds18b20_readrom@num_dq^0,c
  3034                           
  3035                           ;ds18b20.c: 171: uint8_t i;;ds18b20.c: 172: uint8_t temp_rom[8];;ds18b20.c: 174: if (!ow
      +                          _reset())
  3036  000E0A  EC83  F008         	call	_ow_reset	;wreg free
  3037  000E0E  0900               	iorlw	0
  3038  000E10  E10C               	bnz	u1420
  3039                           
  3040                           ;ds18b20.c: 175: {;ds18b20.c: 176: write_byte(0x33);
  3041  000E12  0E33               	movlw	51
  3042  000E14  EC35  F008         	call	_write_byte
  3043                           
  3044                           ;ds18b20.c: 177: for (i = 0; i < 8; i++) {
  3045  000E18  6A42               	clrf	ds18b20_readrom@i^0,c
  3046  000E1A                     l2511:
  3047                           
  3048                           ;ds18b20.c: 178: temp_rom[i] = read_byte();
  3049  000E1A  D825               	call	PL36	;call to abstracted procedure
  3050  000E1C  EC1A  F008         	call	_read_byte	;wreg free
  3051  000E20  6EDF               	movwf	indf2,c
  3052  000E22  2A42               	incf	ds18b20_readrom@i^0,f,c
  3053  000E24  0E07               	movlw	7
  3054  000E26  6442               	cpfsgt	ds18b20_readrom@i^0,c
  3055  000E28  D7F8               	goto	l2511
  3056  000E2A                     u1420:
  3057                           
  3058                           ;ds18b20.c: 179: };ds18b20.c: 180: };ds18b20.c: 181: if (!(ds18b20_crc8(temp_rom, 8))) {
  3059  000E2A  0E39               	movlw	low ds18b20_readrom@temp_rom
  3060  000E2C  6E32               	movwf	ds18b20_crc8@data_in^0,c
  3061  000E2E  0E08               	movlw	8
  3062  000E30  6E33               	movwf	ds18b20_crc8@num_bytes^0,c
  3063  000E32  EC93  F007         	call	_ds18b20_crc8	;wreg free
  3064  000E36  0900               	iorlw	0
  3065  000E38  E115               	bnz	l2537
  3066                           
  3067                           ;ds18b20.c: 182: for (i = 0; i < 8; i++) {
  3068  000E3A  6A42               	clrf	ds18b20_readrom@i^0,c
  3069  000E3C                     l2525:
  3070                           
  3071                           ;ds18b20.c: 183: write_eep(((num_dq - 1)*8) + i, temp_rom[i]);
  3072  000E3C  D814               	call	PL36	;call to abstracted procedure
  3073  000E3E  50DF               	movf	indf2,w,c
  3074  000E40  6E32               	movwf	write_eep@data^0,c
  3075  000E42  5041               	movf	ds18b20_readrom@num_dq^0,w,c
  3076  000E44  0D08               	mullw	8
  3077  000E46  50F3               	movf	243,w,c
  3078  000E48  2442               	addwf	ds18b20_readrom@i^0,w,c
  3079  000E4A  0FF8               	addlw	248
  3080  000E4C  ECAE  F008         	call	_write_eep
  3081  000E50  2A42               	incf	ds18b20_readrom@i^0,f,c
  3082  000E52  0E07               	movlw	7
  3083  000E54  6442               	cpfsgt	ds18b20_readrom@i^0,c
  3084  000E56  D7F2               	goto	l2525
  3085                           
  3086                           ;ds18b20.c: 184: };ds18b20.c: 185: Delay_ms(10);
  3087  000E58  6A33               	clrf	(Delay_ms@delay+1)^0,c
  3088  000E5A  0E0A               	movlw	10
  3089  000E5C  6E32               	movwf	Delay_ms@delay^0,c
  3090  000E5E  ECC0  F008         	call	_Delay_ms	;wreg free
  3091                           
  3092                           ;ds18b20.c: 186: return 1;
  3093  000E62  0C01               	retlw	1
  3094  000E64                     l2537:
  3095                           
  3096                           ;ds18b20.c: 187: };ds18b20.c: 188: return 0;
  3097  000E64  0C00               	retlw	0	;funcret
  3098  000E66                     __end_of_ds18b20_readrom:
  3099                           	callstack 0
  3100  000E66                     PL36:
  3101                           	callstack 27
  3102  000E66  5042               	movf	ds18b20_readrom@i^0,w,c
  3103  000E68  0F39               	addlw	low ds18b20_readrom@temp_rom
  3104  000E6A  6ED9               	movwf	fsr2l,c
  3105  000E6C  6ADA               	clrf	fsr2h,c
  3106  000E6E  0012               	return	
  3107  000E70                     __end_ofPL36:
  3108                           	callstack 0
  3109                           
  3110 ;; *************** function _write_eep *****************
  3111 ;; Defined at:
  3112 ;;		line 5 in file "eeprom.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  address         1    wreg     unsigned char 
  3115 ;;  data            1    0[COMRAM] unsigned char 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  address         1    1[COMRAM] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1
  3127 ;;      Params:         1       0       0
  3128 ;;      Locals:         1       0       0
  3129 ;;      Temps:          0       0       0
  3130 ;;      Totals:         2       0       0
  3131 ;;Total ram usage:        2 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;;		_ds18b20_readrom
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text7
  3143  00115C                     __ptext7:
  3144                           	callstack 0
  3145  00115C                     _write_eep:
  3146                           	callstack 29
  3147                           
  3148                           ;incstack = 0
  3149                           ;write_eep@address stored from wreg
  3150  00115C  6E33               	movwf	write_eep@address^0,c
  3151  00115E                     
  3152                           ;eeprom.c: 8: {}
  3153  00115E  B2A6               	btfsc	166,1,c	;volsfr
  3154  001160  D7FE               	goto	l2195
  3155                           
  3156                           ;eeprom.c: 11: EEADR = address;
  3157  001162  C033  FFA9         	movff	write_eep@address,4009	;volatile
  3158                           
  3159                           ;eeprom.c: 12: EEDATA = data;
  3160  001166  C032  FFA8         	movff	write_eep@data,4008	;volatile
  3161                           
  3162                           ;eeprom.c: 13: EECON1bits.EEPGD = 0;
  3163  00116A  9EA6               	bcf	166,7,c	;volsfr
  3164                           
  3165                           ;eeprom.c: 14: EECON1bits.CFGS = 0;
  3166  00116C  9CA6               	bcf	166,6,c	;volsfr
  3167                           
  3168                           ;eeprom.c: 15: EECON1bits.WREN = 1;
  3169  00116E  84A6               	bsf	166,2,c	;volsfr
  3170                           
  3171                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  3172  001170  9EF2               	bcf	242,7,c	;volatile
  3173                           
  3174                           ;eeprom.c: 18: EECON2 = 0x55;
  3175  001172  0E55               	movlw	85
  3176  001174  6EA7               	movwf	167,c	;volsfr
  3177                           
  3178                           ;eeprom.c: 19: EECON2 = 0xAA;
  3179  001176  0EAA               	movlw	170
  3180  001178  6EA7               	movwf	167,c	;volsfr
  3181                           
  3182                           ;eeprom.c: 20: EECON1bits.WR = 1;
  3183  00117A  82A6               	bsf	166,1,c	;volsfr
  3184                           
  3185                           ;eeprom.c: 22: INTCONbits.GIE = 1;
  3186  00117C  8EF2               	bsf	242,7,c	;volatile
  3187  00117E  0CAA               	retlw	170	;funcret
  3188  001180                     __end_of_write_eep:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _Delay_ms *****************
  3192 ;; Defined at:
  3193 ;;		line 469 in file "main.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  delay           2    0[COMRAM] unsigned int 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  i               2    3[COMRAM] unsigned int 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1
  3207 ;;      Params:         2       0       0
  3208 ;;      Locals:         2       0       0
  3209 ;;      Temps:          1       0       0
  3210 ;;      Totals:         5       0       0
  3211 ;;Total ram usage:        5 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;;		_ds18b20_readrom
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text8
  3223  001180                     __ptext8:
  3224                           	callstack 0
  3225  001180                     _Delay_ms:
  3226                           	callstack 28
  3227                           
  3228                           ;main.c: 470: for (uint16_t i = 0; i <= delay; i++)
  3229                           
  3230                           ;incstack = 0
  3231  001180  6A35               	clrf	Delay_ms@i^0,c
  3232  001182  6A36               	clrf	(Delay_ms@i+1)^0,c
  3233  001184  D009               	goto	l230
  3234  001186                     l2191:
  3235                           
  3236                           ;main.c: 471: _delay((unsigned long)((1)*(8000000/4000.0)));
  3237  001186  0E03               	movlw	3
  3238  001188  6E34               	movwf	??_Delay_ms^0,c
  3239  00118A  0E98               	movlw	152
  3240  00118C                     u2107:
  3241  00118C  2EE8               	decfsz	wreg,f,c
  3242  00118E  D7FE               	bra	u2107
  3243  001190  2E34               	decfsz	??_Delay_ms^0,f,c
  3244  001192  D7FC               	bra	u2107
  3245  001194  4A35               	infsnz	Delay_ms@i^0,f,c
  3246  001196  2A36               	incf	(Delay_ms@i+1)^0,f,c
  3247  001198                     l230:
  3248  001198  5035               	movf	Delay_ms@i^0,w,c
  3249  00119A  5C32               	subwf	Delay_ms@delay^0,w,c
  3250  00119C  5036               	movf	(Delay_ms@i+1)^0,w,c
  3251  00119E  5833               	subwfb	(Delay_ms@delay+1)^0,w,c
  3252  0011A0  E2F2               	bc	l2191
  3253  0011A2  0012               	return		;funcret
  3254  0011A4                     __end_of_Delay_ms:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _ds18b20_readTemp *****************
  3258 ;; Defined at:
  3259 ;;		line 117 in file "ds18b20.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  time_flag       1    7[COMRAM] PTR unsigned char 
  3262 ;;		 -> time_flag(1), 
  3263 ;;  timer_val       1    8[COMRAM] PTR unsigned char 
  3264 ;;		 -> timer_val(1), 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  j               1   13[COMRAM] unsigned char 
  3267 ;;  temp            2   11[COMRAM] unsigned int 
  3268 ;;  i               1   14[COMRAM] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      unsigned char 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1
  3278 ;;      Params:         2       0       0
  3279 ;;      Locals:         4       0       0
  3280 ;;      Temps:          2       0       0
  3281 ;;      Totals:         8       0       0
  3282 ;;Total ram usage:        8 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    3
  3285 ;; This function calls:
  3286 ;;		_ds18b20_crc8
  3287 ;;		_ow_reset
  3288 ;;		_read_byte
  3289 ;;		_write_byte
  3290 ;; This function is called by:
  3291 ;;		_main
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text9
  3296  000B0C                     __ptext9:
  3297                           	callstack 0
  3298  000B0C                     _ds18b20_readTemp:
  3299                           	callstack 27
  3300                           
  3301                           ;ds18b20.c: 120: uint8_t i;;ds18b20.c: 122: switch (*time_flag) {
  3302                           
  3303                           ;incstack = 0
  3304  000B0C  D05B               	goto	l2471
  3305  000B0E                     l2395:
  3306                           
  3307                           ;ds18b20.c: 124: if (!ow_reset())
  3308  000B0E  EC83  F008         	call	_ow_reset	;wreg free
  3309  000B12  0900               	iorlw	0
  3310  000B14  A4D8               	btfss	status,2,c
  3311  000B16  0012               	return	
  3312                           
  3313                           ;ds18b20.c: 125: {;ds18b20.c: 126: write_byte(0xCC);
  3314  000B18  0ECC               	movlw	204
  3315  000B1A  EC35  F008         	call	_write_byte
  3316                           
  3317                           ;ds18b20.c: 127: write_byte(0x44);
  3318  000B1E  0E44               	movlw	68
  3319  000B20  EC35  F008         	call	_write_byte
  3320                           
  3321                           ;ds18b20.c: 128: *timer_val = 0;
  3322  000B24  503A               	movf	ds18b20_readTemp@timer_val^0,w,c
  3323  000B26  6ED9               	movwf	fsr2l,c
  3324  000B28  6ADA               	clrf	fsr2h,c
  3325  000B2A  6ADF               	clrf	indf2,c
  3326                           
  3327                           ;ds18b20.c: 129: *time_flag = 2;
  3328  000B2C  5039               	movf	ds18b20_readTemp@time_flag^0,w,c
  3329  000B2E  6ED9               	movwf	fsr2l,c
  3330  000B30  6ADA               	clrf	fsr2h,c
  3331  000B32  0E02               	movlw	2
  3332  000B34  6EDF               	movwf	indf2,c
  3333                           
  3334                           ;ds18b20.c: 130: T1CONbits.TMR1ON = 1;
  3335  000B36  80CD               	bsf	205,0,c	;volatile
  3336                           
  3337                           ;ds18b20.c: 132: return 0;
  3338  000B38  0C00               	retlw	0
  3339  000B3A                     l290:
  3340                           
  3341                           ;ds18b20.c: 136: for (uint8_t j = 0; j < 2; j++) {
  3342  000B3A  6A3F               	clrf	ds18b20_readTemp@j^0,c
  3343  000B3C                     l2413:
  3344                           
  3345                           ;ds18b20.c: 137: ow_reset();
  3346  000B3C  EC83  F008         	call	_ow_reset	;wreg free
  3347                           
  3348                           ;ds18b20.c: 138: write_byte(0x55);
  3349  000B40  0E55               	movlw	85
  3350  000B42  EC35  F008         	call	_write_byte
  3351                           
  3352                           ;ds18b20.c: 139: for (i = 0; i < 8; i++) {
  3353  000B46  6A40               	clrf	ds18b20_readTemp@i^0,c
  3354  000B48                     l2423:
  3355                           
  3356                           ;ds18b20.c: 140: write_byte(rom_dq[j][i]);
  3357  000B48  503F               	movf	ds18b20_readTemp@j^0,w,c
  3358  000B4A  0D08               	mullw	8
  3359  000B4C  50F3               	movf	243,w,c
  3360  000B4E  0F01               	addlw	low _rom_dq
  3361  000B50  2440               	addwf	ds18b20_readTemp@i^0,w,c
  3362  000B52  6ED9               	movwf	fsr2l,c
  3363  000B54  6ADA               	clrf	fsr2h,c
  3364  000B56  50DF               	movf	indf2,w,c
  3365  000B58  EC35  F008         	call	_write_byte
  3366  000B5C  2A40               	incf	ds18b20_readTemp@i^0,f,c
  3367  000B5E  0E07               	movlw	7
  3368  000B60  6440               	cpfsgt	ds18b20_readTemp@i^0,c
  3369  000B62  D7F2               	goto	l2423
  3370                           
  3371                           ;ds18b20.c: 141: };ds18b20.c: 142: write_byte(0xBE);
  3372  000B64  0EBE               	movlw	190
  3373  000B66  EC35  F008         	call	_write_byte
  3374                           
  3375                           ;ds18b20.c: 143: for (i = 0; i < 9; i++)
  3376  000B6A  6A40               	clrf	ds18b20_readTemp@i^0,c
  3377  000B6C                     l2437:
  3378                           
  3379                           ;ds18b20.c: 144: {;ds18b20.c: 145: scratch[i] = read_byte();
  3380  000B6C  5040               	movf	ds18b20_readTemp@i^0,w,c
  3381  000B6E  0F27               	addlw	low _scratch
  3382  000B70  6ED9               	movwf	fsr2l,c
  3383  000B72  6ADA               	clrf	fsr2h,c
  3384  000B74  EC1A  F008         	call	_read_byte	;wreg free
  3385  000B78  6EDF               	movwf	indf2,c
  3386  000B7A  2A40               	incf	ds18b20_readTemp@i^0,f,c
  3387  000B7C  0E08               	movlw	8
  3388  000B7E  6440               	cpfsgt	ds18b20_readTemp@i^0,c
  3389  000B80  D7F5               	goto	l2437
  3390                           
  3391                           ;ds18b20.c: 146: };ds18b20.c: 148: if (!(ds18b20_crc8(scratch, 9))) {
  3392  000B82  0E27               	movlw	low _scratch
  3393  000B84  6E32               	movwf	ds18b20_crc8@data_in^0,c
  3394  000B86  0E09               	movlw	9
  3395  000B88  6E33               	movwf	ds18b20_crc8@num_bytes^0,c
  3396  000B8A  EC93  F007         	call	_ds18b20_crc8	;wreg free
  3397  000B8E  0900               	iorlw	0
  3398  000B90  E10C               	bnz	l2449
  3399                           
  3400                           ;ds18b20.c: 149: temp = (((uint16_t) scratch[1]) << 8) | ((uint16_t) scratch[0]);
  3401  000B92  5028               	movf	(_scratch+1)^0,w,c
  3402  000B94  6E3B               	movwf	??_ds18b20_readTemp^0,c
  3403  000B96  5027               	movf	_scratch^0,w,c
  3404  000B98  6E3D               	movwf	ds18b20_readTemp@temp^0,c
  3405  000B9A  C03B  F03E         	movff	??_ds18b20_readTemp,ds18b20_readTemp@temp+1
  3406                           
  3407                           ;ds18b20.c: 150: temp_ready[j] = temp;
  3408  000B9E  D81D               	call	PL18	;call to abstracted procedure
  3409  000BA0  C03D  FFDE         	movff	ds18b20_readTemp@temp,postinc2
  3410  000BA4  C03E  FFDD         	movff	ds18b20_readTemp@temp+1,postdec2
  3411                           
  3412                           ;ds18b20.c: 151: }else
  3413  000BA8  D004               	goto	l2451
  3414  000BAA                     l2449:
  3415                           
  3416                           ;ds18b20.c: 152: temp_ready[j] = 32767;
  3417  000BAA  D817               	call	PL18	;call to abstracted procedure
  3418  000BAC  68DE               	setf	postinc2,c
  3419  000BAE  0E7F               	movlw	127
  3420  000BB0  6EDD               	movwf	postdec2,c
  3421  000BB2                     l2451:
  3422  000BB2  2A3F               	incf	ds18b20_readTemp@j^0,f,c
  3423  000BB4  0E01               	movlw	1
  3424  000BB6  643F               	cpfsgt	ds18b20_readTemp@j^0,c
  3425  000BB8  D7C1               	goto	l2413
  3426                           
  3427                           ;ds18b20.c: 154: };ds18b20.c: 155: *time_flag = 0;
  3428  000BBA  5039               	movf	ds18b20_readTemp@time_flag^0,w,c
  3429  000BBC  6ED9               	movwf	fsr2l,c
  3430  000BBE  6ADA               	clrf	fsr2h,c
  3431  000BC0  6ADF               	clrf	indf2,c
  3432                           
  3433                           ;ds18b20.c: 156: return 1;
  3434  000BC2  0C01               	retlw	1
  3435  000BC4                     l2471:
  3436  000BC4  5039               	movf	ds18b20_readTemp@time_flag^0,w,c
  3437  000BC6  6ED9               	movwf	fsr2l,c
  3438  000BC8  6ADA               	clrf	fsr2h,c
  3439  000BCA  50DF               	movf	indf2,w,c
  3440                           
  3441                           ; Switch size 1, requested type "space"
  3442                           ; Number of cases is 3, Range of values is 0 to 2
  3443                           ; switch strategies available:
  3444                           ; Name         Instructions Cycles
  3445                           ; simple_byte           10     6 (average)
  3446                           ;	Chosen strategy is simple_byte
  3447  000BCC  E0A0               	bz	l2395
  3448  000BCE  0A01               	xorlw	1	; case 1
  3449  000BD0  E0B4               	bz	l290
  3450  000BD2  0A03               	xorlw	3	; case 2
  3451  000BD4  B4D8               	btfsc	status,2,c
  3452  000BD6  0C00               	retlw	0
  3453  000BD8  0012               	return		;funcret
  3454  000BDA                     __end_of_ds18b20_readTemp:
  3455                           	callstack 0
  3456  000BDA                     PL18:
  3457                           	callstack 27
  3458  000BDA  503F               	movf	ds18b20_readTemp@j^0,w,c
  3459  000BDC  0D02               	mullw	2
  3460  000BDE  50F3               	movf	243,w,c
  3461  000BE0  0F11               	addlw	low _temp_ready
  3462  000BE2  6ED9               	movwf	fsr2l,c
  3463  000BE4  6ADA               	clrf	fsr2h,c
  3464  000BE6  0012               	return	
  3465  000BE8                     __end_ofPL18:
  3466                           	callstack 0
  3467                           
  3468 ;; *************** function _read_byte *****************
  3469 ;; Defined at:
  3470 ;;		line 50 in file "onewire.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  i               1    3[COMRAM] unsigned char 
  3475 ;;  val             1    2[COMRAM] unsigned char 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      unsigned char 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1
  3485 ;;      Params:         0       0       0
  3486 ;;      Locals:         2       0       0
  3487 ;;      Temps:          2       0       0
  3488 ;;      Totals:         4       0       0
  3489 ;;Total ram usage:        4 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    2
  3492 ;; This function calls:
  3493 ;;		_read_bit
  3494 ;; This function is called by:
  3495 ;;		_ds18b20_readTemp
  3496 ;;		_ds18b20_readrom
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text10
  3501  001034                     __ptext10:
  3502                           	callstack 0
  3503  001034                     _read_byte:
  3504                           	callstack 27
  3505                           
  3506                           ;onewire.c: 52: uint8_t i;;onewire.c: 53: uint8_t val = 0;
  3507                           
  3508                           ;incstack = 0
  3509  001034  6A34               	clrf	read_byte@val^0,c
  3510                           
  3511                           ;onewire.c: 55: for(i=0;i<8;i++)
  3512  001036  6A35               	clrf	read_byte@i^0,c
  3513  001038                     l1399:
  3514                           
  3515                           ;onewire.c: 56: {;onewire.c: 57: if(read_bit()) val |= (0x01 << i);
  3516  001038  EC0E  F009         	call	_read_bit	;wreg free
  3517  00103C  0900               	iorlw	0
  3518  00103E  E00C               	bz	l1403
  3519  001040  C035  F032         	movff	read_byte@i,??_read_byte
  3520  001044  0E01               	movlw	1
  3521  001046  6E33               	movwf	(??_read_byte+1)^0,c
  3522  001048  2A32               	incf	??_read_byte^0,f,c
  3523  00104A  D002               	goto	u234
  3524  00104C                     u235:
  3525  00104C  90D8               	bcf	status,0,c
  3526  00104E  3633               	rlcf	(??_read_byte+1)^0,f,c
  3527  001050                     u234:
  3528  001050  2E32               	decfsz	??_read_byte^0,f,c
  3529  001052  D7FC               	goto	u235
  3530  001054  5033               	movf	(??_read_byte+1)^0,w,c
  3531  001056  1234               	iorwf	read_byte@val^0,f,c
  3532  001058                     l1403:
  3533                           
  3534                           ;onewire.c: 58: _delay((unsigned long)((120)*(8000000/4000000.0)));
  3535  001058  0E50               	movlw	80
  3536  00105A                     u2117:
  3537  00105A  2EE8               	decfsz	wreg,f,c
  3538  00105C  D7FE               	bra	u2117
  3539  00105E  2A35               	incf	read_byte@i^0,f,c
  3540  001060  0E07               	movlw	7
  3541  001062  6435               	cpfsgt	read_byte@i^0,c
  3542  001064  D7E9               	goto	l1399
  3543                           
  3544                           ;onewire.c: 59: };onewire.c: 61: return val;
  3545  001066  5034               	movf	read_byte@val^0,w,c
  3546  001068  0012               	return		;funcret
  3547  00106A                     __end_of_read_byte:
  3548                           	callstack 0
  3549                           
  3550 ;; *************** function _read_bit *****************
  3551 ;; Defined at:
  3552 ;;		line 22 in file "onewire.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      unsigned char 
  3559 ;; Registers used:
  3560 ;;		wreg
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1
  3566 ;;      Params:         0       0       0
  3567 ;;      Locals:         0       0       0
  3568 ;;      Temps:          0       0       0
  3569 ;;      Totals:         0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    1
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_read_byte
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text11
  3581  00121C                     __ptext11:
  3582                           	callstack 0
  3583  00121C                     _read_bit:
  3584                           	callstack 27
  3585                           
  3586                           ;onewire.c: 24: PORTAbits.RA6 = 0;
  3587                           
  3588                           ;incstack = 0
  3589  00121C  9C80               	bcf	128,6,c	;volatile
  3590                           
  3591                           ;onewire.c: 25: TRISAbits.TRISA6 = 0;
  3592  00121E  9C92               	bcf	146,6,c	;volatile
  3593                           
  3594                           ;onewire.c: 26: _delay((unsigned long)((1)*(8000000/4000000.0)));
  3595  001220  D000               	nop2		;2 cycle nop
  3596                           
  3597                           ;onewire.c: 27: PORTAbits.RA6 = 1;
  3598  001222  8C80               	bsf	128,6,c	;volatile
  3599                           
  3600                           ;onewire.c: 28: TRISAbits.TRISA6 = 1;
  3601  001224  8C92               	bsf	146,6,c	;volatile
  3602                           
  3603                           ;onewire.c: 29: _delay((unsigned long)((6)*(8000000/4000000.0)));
  3604  001226  0E04               	movlw	4
  3605  001228                     u2127:
  3606  001228  2EE8               	decfsz	wreg,f,c
  3607  00122A  D7FE               	bra	u2127
  3608                           
  3609                           ;onewire.c: 30: return(PORTAbits.RA6);
  3610  00122C  BC80               	btfsc	128,6,c	;volatile
  3611  00122E  0C01               	retlw	1
  3612  001230  0C00               	retlw	0	;funcret
  3613  001232                     __end_of_read_bit:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function _ds18b20_crc8 *****************
  3617 ;; Defined at:
  3618 ;;		line 219 in file "ds18b20.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  data_in         1    0[COMRAM] PTR unsigned char 
  3621 ;;		 -> ds18b20_readrom@temp_rom(8), scratch(9), 
  3622 ;;  num_bytes       1    1[COMRAM] unsigned char 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  crc             1    6[COMRAM] unsigned char 
  3625 ;;  loop_count      1    5[COMRAM] unsigned char 
  3626 ;;  feedback_bit    1    4[COMRAM] unsigned char 
  3627 ;;  data            1    3[COMRAM] unsigned char 
  3628 ;;  bit_counter     1    2[COMRAM] unsigned char 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      unsigned char 
  3631 ;; Registers used:
  3632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1
  3638 ;;      Params:         2       0       0
  3639 ;;      Locals:         5       0       0
  3640 ;;      Temps:          0       0       0
  3641 ;;      Totals:         7       0       0
  3642 ;;Total ram usage:        7 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_ds18b20_readTemp
  3649 ;;		_ds18b20_readrom
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text12
  3654  000F26                     __ptext12:
  3655                           	callstack 0
  3656  000F26                     _ds18b20_crc8:
  3657                           	callstack 28
  3658                           
  3659                           ;ds18b20.c: 220: uint8_t crc;;ds18b20.c: 221: uint8_t loop_count;;ds18b20.c: 222: uint8_
      +                          t bit_counter;;ds18b20.c: 223: uint8_t data;;ds18b20.c: 224: uint8_t feedback_bit;;ds18b
      +                          20.c: 226: crc = 0x00;
  3660                           
  3661                           ;incstack = 0
  3662  000F26  6A38               	clrf	ds18b20_crc8@crc^0,c
  3663                           
  3664                           ;ds18b20.c: 228: for (loop_count = 0; loop_count != num_bytes; loop_count++) {
  3665  000F28  6A37               	clrf	ds18b20_crc8@loop_count^0,c
  3666  000F2A  D01D               	goto	l2309
  3667  000F2C                     l2289:
  3668                           
  3669                           ;ds18b20.c: 229: data = data_in[loop_count];
  3670  000F2C  5032               	movf	ds18b20_crc8@data_in^0,w,c
  3671  000F2E  2437               	addwf	ds18b20_crc8@loop_count^0,w,c
  3672  000F30  6ED9               	movwf	fsr2l,c
  3673  000F32  6ADA               	clrf	fsr2h,c
  3674  000F34  50DF               	movf	indf2,w,c
  3675  000F36  6E35               	movwf	ds18b20_crc8@data^0,c
  3676                           
  3677                           ;ds18b20.c: 231: bit_counter = 8;
  3678  000F38  0E08               	movlw	8
  3679  000F3A  6E34               	movwf	ds18b20_crc8@bit_counter^0,c
  3680  000F3C                     l2293:
  3681                           
  3682                           ;ds18b20.c: 233: feedback_bit = (crc ^ data) & 0x01;
  3683  000F3C  5038               	movf	ds18b20_crc8@crc^0,w,c
  3684  000F3E  1835               	xorwf	ds18b20_crc8@data^0,w,c
  3685  000F40  0B01               	andlw	1
  3686  000F42  6E36               	movwf	ds18b20_crc8@feedback_bit^0,c
  3687                           
  3688                           ;ds18b20.c: 235: if (feedback_bit == 0x01) {
  3689  000F44  0436               	decf	ds18b20_crc8@feedback_bit^0,w,c
  3690  000F46  E102               	bnz	l319
  3691                           
  3692                           ;ds18b20.c: 236: crc = crc ^ 0x18;
  3693  000F48  0E18               	movlw	24
  3694  000F4A  1A38               	xorwf	ds18b20_crc8@crc^0,f,c
  3695  000F4C                     l319:
  3696                           
  3697                           ;ds18b20.c: 237: };ds18b20.c: 238: crc = (crc >> 1) & 0x7F;
  3698  000F4C  90D8               	bcf	status,0,c
  3699  000F4E  3038               	rrcf	ds18b20_crc8@crc^0,w,c
  3700  000F50  0B7F               	andlw	127
  3701  000F52  6E38               	movwf	ds18b20_crc8@crc^0,c
  3702                           
  3703                           ;ds18b20.c: 239: if (feedback_bit == 0x01) {
  3704  000F54  0436               	decf	ds18b20_crc8@feedback_bit^0,w,c
  3705  000F56  E101               	bnz	l2301
  3706                           
  3707                           ;ds18b20.c: 240: crc = crc | 0x80;
  3708  000F58  8E38               	bsf	ds18b20_crc8@crc^0,7,c
  3709  000F5A                     l2301:
  3710                           
  3711                           ;ds18b20.c: 241: };ds18b20.c: 243: data = data >> 1;
  3712  000F5A  90D8               	bcf	status,0,c
  3713  000F5C  3235               	rrcf	ds18b20_crc8@data^0,f,c
  3714                           
  3715                           ;ds18b20.c: 244: bit_counter--;
  3716  000F5E  0634               	decf	ds18b20_crc8@bit_counter^0,f,c
  3717                           
  3718                           ;ds18b20.c: 246: } while (bit_counter > 0);
  3719  000F60  5034               	movf	ds18b20_crc8@bit_counter^0,w,c
  3720  000F62  E1EC               	bnz	l2293
  3721  000F64  2A37               	incf	ds18b20_crc8@loop_count^0,f,c
  3722  000F66                     l2309:
  3723  000F66  5033               	movf	ds18b20_crc8@num_bytes^0,w,c
  3724  000F68  1837               	xorwf	ds18b20_crc8@loop_count^0,w,c
  3725  000F6A  E1E0               	bnz	l2289
  3726                           
  3727                           ;ds18b20.c: 247: };ds18b20.c: 249: return crc;
  3728  000F6C  5038               	movf	ds18b20_crc8@crc^0,w,c
  3729  000F6E  0012               	return		;funcret
  3730  000F70                     __end_of_ds18b20_crc8:
  3731                           	callstack 0
  3732                           
  3733 ;; *************** function _ds18b20_get_temp *****************
  3734 ;; Defined at:
  3735 ;;		line 196 in file "ds18b20.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  num_dq          1    wreg     unsigned char 
  3738 ;;  minus           1    0[COMRAM] PTR unsigned char 
  3739 ;;		 -> minus_2(1), minus_1(1), 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  num_dq          1    2[COMRAM] unsigned char 
  3742 ;;  temp            2    4[COMRAM] unsigned int 
  3743 ;;  tmp             1    3[COMRAM] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  2    0[COMRAM] unsigned int 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1
  3753 ;;      Params:         2       0       0
  3754 ;;      Locals:         4       0       0
  3755 ;;      Temps:          0       0       0
  3756 ;;      Totals:         6       0       0
  3757 ;;Total ram usage:        6 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    1
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_main
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text13
  3768  000C90                     __ptext13:
  3769                           	callstack 0
  3770  000C90                     _ds18b20_get_temp:
  3771                           	callstack 29
  3772                           
  3773                           ;incstack = 0
  3774                           ;ds18b20_get_temp@num_dq stored from wreg
  3775  000C90  6E34               	movwf	ds18b20_get_temp@num_dq^0,c
  3776                           
  3777                           ;ds18b20.c: 197: uint16_t temp = temp_ready[num_dq-1];
  3778  000C92  5034               	movf	ds18b20_get_temp@num_dq^0,w,c
  3779  000C94  0D02               	mullw	2
  3780  000C96  50F3               	movf	243,w,c
  3781  000C98  0F0F               	addlw	low (_temp_ready+254)
  3782  000C9A  6ED9               	movwf	fsr2l,c
  3783  000C9C  6ADA               	clrf	fsr2h,c
  3784  000C9E  CFDE F036          	movff	postinc2,ds18b20_get_temp@temp
  3785  000CA2  CFDD F037          	movff	postdec2,ds18b20_get_temp@temp+1
  3786                           
  3787                           ;ds18b20.c: 198: uint8_t tmp;;ds18b20.c: 199: *minus = '+';
  3788  000CA6  5032               	movf	ds18b20_get_temp@minus^0,w,c
  3789  000CA8  6ED9               	movwf	fsr2l,c
  3790  000CAA  6ADA               	clrf	fsr2h,c
  3791  000CAC  0E2B               	movlw	43
  3792  000CAE  6EDF               	movwf	indf2,c
  3793                           
  3794                           ;ds18b20.c: 200: if(temp == 32767)
  3795  000CB0  2836               	incf	ds18b20_get_temp@temp^0,w,c
  3796  000CB2  E108               	bnz	l311
  3797  000CB4  0E7F               	movlw	127
  3798  000CB6  1837               	xorwf	(ds18b20_get_temp@temp+1)^0,w,c
  3799  000CB8  E105               	bnz	l311
  3800  000CBA                     u1390:
  3801                           
  3802                           ;ds18b20.c: 201: return temp;
  3803  000CBA  C036  F032         	movff	ds18b20_get_temp@temp,?_ds18b20_get_temp
  3804  000CBE  C037  F033         	movff	ds18b20_get_temp@temp+1,?_ds18b20_get_temp+1
  3805  000CC2  0012               	return	
  3806  000CC4                     l311:
  3807                           
  3808                           ;ds18b20.c: 202: if (temp & 0x8000) {
  3809  000CC4  AE37               	btfss	(ds18b20_get_temp@temp+1)^0,7,c
  3810  000CC6  D009               	goto	l2485
  3811                           
  3812                           ;ds18b20.c: 203: temp = -temp;
  3813  000CC8  6C36               	negf	ds18b20_get_temp@temp^0,c
  3814  000CCA  1E37               	comf	(ds18b20_get_temp@temp+1)^0,f,c
  3815  000CCC  B0D8               	btfsc	status,0,c
  3816  000CCE  2A37               	incf	(ds18b20_get_temp@temp+1)^0,f,c
  3817                           
  3818                           ;ds18b20.c: 204: *minus = '-';
  3819  000CD0  5032               	movf	ds18b20_get_temp@minus^0,w,c
  3820  000CD2  6ED9               	movwf	fsr2l,c
  3821  000CD4  6ADA               	clrf	fsr2h,c
  3822  000CD6  0E2D               	movlw	45
  3823  000CD8  6EDF               	movwf	indf2,c
  3824  000CDA                     l2485:
  3825                           
  3826                           ;ds18b20.c: 205: };ds18b20.c: 207: tmp = temp & 0x0f;
  3827  000CDA  5036               	movf	ds18b20_get_temp@temp^0,w,c
  3828  000CDC  0B0F               	andlw	15
  3829  000CDE  6E35               	movwf	ds18b20_get_temp@tmp^0,c
  3830                           
  3831                           ;ds18b20.c: 208: tmp = fract[tmp];
  3832  000CE0  0E1B               	movlw	low _fract
  3833  000CE2  2435               	addwf	ds18b20_get_temp@tmp^0,w,c
  3834  000CE4  6EF6               	movwf	tblptrl,c
  3835  000CE6  6AF7               	clrf	tblptrh,c
  3836  000CE8  0E1F               	movlw	high _fract
  3837  000CEA  22F7               	addwfc	tblptrh,f,c
  3838  000CEC                     	if	0	;There are less than 3 active tblptr bytes
  3839  000CEC                     	endif
  3840  000CEC  0008               	tblrd		*
  3841  000CEE  CFF5 F035          	movff	tablat,ds18b20_get_temp@tmp
  3842                           
  3843                           ;ds18b20.c: 209: temp = temp >> 4;
  3844  000CF2  3A36               	swapf	ds18b20_get_temp@temp^0,f,c
  3845  000CF4  3A37               	swapf	(ds18b20_get_temp@temp+1)^0,f,c
  3846  000CF6  0E0F               	movlw	15
  3847  000CF8  1636               	andwf	ds18b20_get_temp@temp^0,f,c
  3848  000CFA  5037               	movf	(ds18b20_get_temp@temp+1)^0,w,c
  3849  000CFC  0BF0               	andlw	240
  3850  000CFE  1236               	iorwf	ds18b20_get_temp@temp^0,f,c
  3851  000D00  0E0F               	movlw	15
  3852  000D02  1637               	andwf	(ds18b20_get_temp@temp+1)^0,f,c
  3853                           
  3854                           ;ds18b20.c: 210: temp = (temp & 0x00ff) * 10;
  3855  000D04  5036               	movf	ds18b20_get_temp@temp^0,w,c
  3856  000D06  0D0A               	mullw	10
  3857  000D08  CFF3 F036          	movff	prodl,ds18b20_get_temp@temp
  3858  000D0C  CFF4 F037          	movff	prodh,ds18b20_get_temp@temp+1
  3859                           
  3860                           ;ds18b20.c: 211: temp = temp + tmp;
  3861  000D10  5035               	movf	ds18b20_get_temp@tmp^0,w,c
  3862  000D12  2636               	addwf	ds18b20_get_temp@temp^0,f,c
  3863  000D14  0E00               	movlw	0
  3864  000D16  2237               	addwfc	(ds18b20_get_temp@temp+1)^0,f,c
  3865  000D18  D7D0               	goto	u1390
  3866  000D1A                     __end_of_ds18b20_get_temp:
  3867                           	callstack 0
  3868                           
  3869 ;; *************** function ___lwmod *****************
  3870 ;; Defined at:
  3871 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  dividend        2    7[COMRAM] unsigned int 
  3874 ;;  divisor         2    9[COMRAM] unsigned int 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  counter         1   11[COMRAM] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  2    7[COMRAM] unsigned int 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1
  3886 ;;      Params:         4       0       0
  3887 ;;      Locals:         1       0       0
  3888 ;;      Temps:          0       0       0
  3889 ;;      Totals:         5       0       0
  3890 ;;Total ram usage:        5 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    1
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text14
  3901  000FBA                     __ptext14:
  3902                           	callstack 0
  3903  000FBA                     ___lwmod:
  3904                           	callstack 29
  3905                           
  3906                           ;incstack = 0
  3907  000FBA  503B               	movf	___lwmod@divisor^0,w,c
  3908  000FBC  103C               	iorwf	(___lwmod@divisor+1)^0,w,c
  3909  000FBE  E017               	bz	l955
  3910  000FC0  0E01               	movlw	1
  3911  000FC2  6E3D               	movwf	___lwmod@counter^0,c
  3912  000FC4  D004               	goto	l2613
  3913  000FC6                     l2611:
  3914  000FC6  90D8               	bcf	status,0,c
  3915  000FC8  363B               	rlcf	___lwmod@divisor^0,f,c
  3916  000FCA  363C               	rlcf	(___lwmod@divisor+1)^0,f,c
  3917  000FCC  2A3D               	incf	___lwmod@counter^0,f,c
  3918  000FCE                     l2613:
  3919  000FCE  AE3C               	btfss	(___lwmod@divisor+1)^0,7,c
  3920  000FD0  D7FA               	goto	l2611
  3921  000FD2                     u1530:
  3922  000FD2  503B               	movf	___lwmod@divisor^0,w,c
  3923  000FD4  5C39               	subwf	___lwmod@dividend^0,w,c
  3924  000FD6  503C               	movf	(___lwmod@divisor+1)^0,w,c
  3925  000FD8  583A               	subwfb	(___lwmod@dividend+1)^0,w,c
  3926  000FDA  E304               	bnc	l2619
  3927  000FDC  503B               	movf	___lwmod@divisor^0,w,c
  3928  000FDE  5E39               	subwf	___lwmod@dividend^0,f,c
  3929  000FE0  503C               	movf	(___lwmod@divisor+1)^0,w,c
  3930  000FE2  5A3A               	subwfb	(___lwmod@dividend+1)^0,f,c
  3931  000FE4                     l2619:
  3932  000FE4  90D8               	bcf	status,0,c
  3933  000FE6  323C               	rrcf	(___lwmod@divisor+1)^0,f,c
  3934  000FE8  323B               	rrcf	___lwmod@divisor^0,f,c
  3935  000FEA  2E3D               	decfsz	___lwmod@counter^0,f,c
  3936  000FEC  D7F2               	goto	u1530
  3937  000FEE                     l955:
  3938  000FEE  C039  F039         	movff	___lwmod@dividend,?___lwmod
  3939  000FF2  C03A  F03A         	movff	___lwmod@dividend+1,?___lwmod+1
  3940  000FF6  0012               	return		;funcret
  3941  000FF8                     __end_of___lwmod:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function ___lwdiv *****************
  3945 ;; Defined at:
  3946 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  dividend        2    0[COMRAM] unsigned int 
  3949 ;;  divisor         2    2[COMRAM] unsigned int 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  quotient        2    4[COMRAM] unsigned int 
  3952 ;;  counter         1    6[COMRAM] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  2    0[COMRAM] unsigned int 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1
  3962 ;;      Params:         4       0       0
  3963 ;;      Locals:         3       0       0
  3964 ;;      Temps:          0       0       0
  3965 ;;      Totals:         7       0       0
  3966 ;;Total ram usage:        7 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    1
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_main
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text15
  3977  000F70                     __ptext15:
  3978                           	callstack 0
  3979  000F70                     ___lwdiv:
  3980                           	callstack 29
  3981                           
  3982                           ;incstack = 0
  3983  000F70  6A36               	clrf	___lwdiv@quotient^0,c
  3984  000F72  6A37               	clrf	(___lwdiv@quotient+1)^0,c
  3985  000F74  5034               	movf	___lwdiv@divisor^0,w,c
  3986  000F76  1035               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3987  000F78  E01B               	bz	l945
  3988  000F7A  0E01               	movlw	1
  3989  000F7C  6E38               	movwf	___lwdiv@counter^0,c
  3990  000F7E  D004               	goto	l2593
  3991  000F80                     l2591:
  3992  000F80  90D8               	bcf	status,0,c
  3993  000F82  3634               	rlcf	___lwdiv@divisor^0,f,c
  3994  000F84  3635               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3995  000F86  2A38               	incf	___lwdiv@counter^0,f,c
  3996  000F88                     l2593:
  3997  000F88  AE35               	btfss	(___lwdiv@divisor+1)^0,7,c
  3998  000F8A  D7FA               	goto	l2591
  3999  000F8C                     u1500:
  4000  000F8C  90D8               	bcf	status,0,c
  4001  000F8E  3636               	rlcf	___lwdiv@quotient^0,f,c
  4002  000F90  3637               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4003  000F92  5034               	movf	___lwdiv@divisor^0,w,c
  4004  000F94  5C32               	subwf	___lwdiv@dividend^0,w,c
  4005  000F96  5035               	movf	(___lwdiv@divisor+1)^0,w,c
  4006  000F98  5833               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4007  000F9A  E305               	bnc	l2603
  4008  000F9C  5034               	movf	___lwdiv@divisor^0,w,c
  4009  000F9E  5E32               	subwf	___lwdiv@dividend^0,f,c
  4010  000FA0  5035               	movf	(___lwdiv@divisor+1)^0,w,c
  4011  000FA2  5A33               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4012  000FA4  8036               	bsf	___lwdiv@quotient^0,0,c
  4013  000FA6                     l2603:
  4014  000FA6  90D8               	bcf	status,0,c
  4015  000FA8  3235               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4016  000FAA  3234               	rrcf	___lwdiv@divisor^0,f,c
  4017  000FAC  2E38               	decfsz	___lwdiv@counter^0,f,c
  4018  000FAE  D7EE               	goto	u1500
  4019  000FB0                     l945:
  4020  000FB0  C036  F032         	movff	___lwdiv@quotient,?___lwdiv
  4021  000FB4  C037  F033         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4022  000FB8  0012               	return		;funcret
  4023  000FBA                     __end_of___lwdiv:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function ___lbmod *****************
  4027 ;; Defined at:
  4028 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lbmod.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  dividend        1    wreg     unsigned char 
  4031 ;;  divisor         1    4[COMRAM] unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  dividend        1    5[COMRAM] unsigned char 
  4034 ;;  rem             1    7[COMRAM] unsigned char 
  4035 ;;  counter         1    6[COMRAM] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      unsigned char 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1
  4045 ;;      Params:         1       0       0
  4046 ;;      Locals:         3       0       0
  4047 ;;      Temps:          0       0       0
  4048 ;;      Totals:         4       0       0
  4049 ;;Total ram usage:        4 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_main
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text16
  4060  001136                     __ptext16:
  4061                           	callstack 0
  4062  001136                     ___lbmod:
  4063                           	callstack 29
  4064                           
  4065                           ;incstack = 0
  4066                           ;___lbmod@dividend stored from wreg
  4067  001136  6E37               	movwf	___lbmod@dividend^0,c
  4068  001138  0E08               	movlw	8
  4069  00113A  6E38               	movwf	___lbmod@counter^0,c
  4070  00113C  6A39               	clrf	___lbmod@rem^0,c
  4071  00113E                     l2571:
  4072  00113E  90D8               	bcf	status,0,c
  4073  001140  3437               	rlcf	___lbmod@dividend^0,w,c
  4074  001142  3439               	rlcf	___lbmod@rem^0,w,c
  4075  001144  6E39               	movwf	___lbmod@rem^0,c
  4076  001146  90D8               	bcf	status,0,c
  4077  001148  3637               	rlcf	___lbmod@dividend^0,f,c
  4078  00114A  5036               	movf	___lbmod@divisor^0,w,c
  4079  00114C  5C39               	subwf	___lbmod@rem^0,w,c
  4080  00114E  E302               	bnc	l2579
  4081  001150  5036               	movf	___lbmod@divisor^0,w,c
  4082  001152  5E39               	subwf	___lbmod@rem^0,f,c
  4083  001154                     l2579:
  4084  001154  2E38               	decfsz	___lbmod@counter^0,f,c
  4085  001156  D7F3               	goto	l2571
  4086  001158  5039               	movf	___lbmod@rem^0,w,c
  4087  00115A  0012               	return		;funcret
  4088  00115C                     __end_of___lbmod:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function ___lbdiv *****************
  4092 ;; Defined at:
  4093 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lbdiv.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  dividend        1    wreg     unsigned char 
  4096 ;;  divisor         1    0[COMRAM] unsigned char 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  dividend        1    1[COMRAM] unsigned char 
  4099 ;;  quotient        1    3[COMRAM] unsigned char 
  4100 ;;  counter         1    2[COMRAM] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      unsigned char 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1
  4110 ;;      Params:         1       0       0
  4111 ;;      Locals:         3       0       0
  4112 ;;      Temps:          0       0       0
  4113 ;;      Totals:         4       0       0
  4114 ;;Total ram usage:        4 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text17
  4125  0010A0                     __ptext17:
  4126                           	callstack 0
  4127  0010A0                     ___lbdiv:
  4128                           	callstack 29
  4129                           
  4130                           ;incstack = 0
  4131                           ;___lbdiv@dividend stored from wreg
  4132  0010A0  6E33               	movwf	___lbdiv@dividend^0,c
  4133  0010A2  6A35               	clrf	___lbdiv@quotient^0,c
  4134  0010A4  5032               	movf	___lbdiv@divisor^0,w,c
  4135  0010A6  E014               	bz	l2563
  4136  0010A8  0E01               	movlw	1
  4137  0010AA  6E34               	movwf	___lbdiv@counter^0,c
  4138  0010AC  D003               	goto	l2551
  4139  0010AE                     l2547:
  4140  0010AE  90D8               	bcf	status,0,c
  4141  0010B0  3632               	rlcf	___lbdiv@divisor^0,f,c
  4142  0010B2  2A34               	incf	___lbdiv@counter^0,f,c
  4143  0010B4                     l2551:
  4144  0010B4  AE32               	btfss	___lbdiv@divisor^0,7,c
  4145  0010B6  D7FB               	goto	l2547
  4146  0010B8                     u1460:
  4147  0010B8  90D8               	bcf	status,0,c
  4148  0010BA  3635               	rlcf	___lbdiv@quotient^0,f,c
  4149  0010BC  5032               	movf	___lbdiv@divisor^0,w,c
  4150  0010BE  5C33               	subwf	___lbdiv@dividend^0,w,c
  4151  0010C0  E303               	bnc	l2559
  4152  0010C2  5032               	movf	___lbdiv@divisor^0,w,c
  4153  0010C4  5E33               	subwf	___lbdiv@dividend^0,f,c
  4154  0010C6  8035               	bsf	___lbdiv@quotient^0,0,c
  4155  0010C8                     l2559:
  4156  0010C8  90D8               	bcf	status,0,c
  4157  0010CA  3232               	rrcf	___lbdiv@divisor^0,f,c
  4158  0010CC  2E34               	decfsz	___lbdiv@counter^0,f,c
  4159  0010CE  D7F4               	goto	u1460
  4160  0010D0                     l2563:
  4161  0010D0  5035               	movf	___lbdiv@quotient^0,w,c
  4162  0010D2  0012               	return		;funcret
  4163  0010D4                     __end_of___lbdiv:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _Main_init *****************
  4167 ;; Defined at:
  4168 ;;		line 422 in file "main.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1
  4182 ;;      Params:         0       0       0
  4183 ;;      Locals:         0       0       0
  4184 ;;      Temps:          0       0       0
  4185 ;;      Totals:         0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    5
  4189 ;; This function calls:
  4190 ;;		_cgrom_char
  4191 ;;		_initLCD
  4192 ;;		_init_ds18b20
  4193 ;; This function is called by:
  4194 ;;		_main
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text18
  4199  000E70                     __ptext18:
  4200                           	callstack 0
  4201  000E70                     _Main_init:
  4202                           	callstack 25
  4203                           
  4204                           ;main.c: 425: PORTA = 0;
  4205                           
  4206                           ;incstack = 0
  4207  000E70  6A80               	clrf	128,c	;volatile
  4208                           
  4209                           ;main.c: 426: LATA = 0;
  4210  000E72  6A89               	clrf	137,c	;volatile
  4211                           
  4212                           ;main.c: 427: TRISA = 0;
  4213  000E74  6A92               	clrf	146,c	;volatile
  4214                           
  4215                           ;main.c: 428: PORTB = 0;
  4216  000E76  6A81               	clrf	129,c	;volatile
  4217                           
  4218                           ;main.c: 429: LATB = 0;
  4219  000E78  6A8A               	clrf	138,c	;volatile
  4220                           
  4221                           ;main.c: 430: TRISB = 0b00000110;
  4222  000E7A  0E06               	movlw	6
  4223  000E7C  6E93               	movwf	147,c	;volatile
  4224                           
  4225                           ;main.c: 431: PORTC = 0;
  4226  000E7E  6A82               	clrf	130,c	;volatile
  4227                           
  4228                           ;main.c: 432: LATC = 0;
  4229  000E80  6A8B               	clrf	139,c	;volatile
  4230                           
  4231                           ;main.c: 433: TRISC = 0;
  4232  000E82  6A94               	clrf	148,c	;volatile
  4233                           
  4234                           ;main.c: 434: OSCCONbits.SCS0 = 0;
  4235  000E84  90D3               	bcf	211,0,c	;volatile
  4236                           
  4237                           ;main.c: 435: OSCCONbits.SCS1 = 1;
  4238  000E86  82D3               	bsf	211,1,c	;volatile
  4239                           
  4240                           ;main.c: 436: OSCCONbits.IRCF = 0b111;
  4241  000E88  0E70               	movlw	112
  4242  000E8A  12D3               	iorwf	211,f,c	;volatile
  4243                           
  4244                           ;main.c: 437: ADCON1bits.PCFG = 0b1111;
  4245  000E8C  0E0F               	movlw	15
  4246  000E8E  12C1               	iorwf	193,f,c	;volatile
  4247                           
  4248                           ;main.c: 439: PORTAbits.RA6 = 1;
  4249  000E90  8C80               	bsf	128,6,c	;volatile
  4250                           
  4251                           ;main.c: 441: init_ds18b20();
  4252  000E92  ECCA  F006         	call	_init_ds18b20	;wreg free
  4253                           
  4254                           ;main.c: 443: T1CON = 0b10000000;
  4255  000E96  0E80               	movlw	128
  4256  000E98  6ECD               	movwf	205,c	;volatile
  4257                           
  4258                           ;main.c: 445: TMR1H = ((unsigned char)(((15536)>>8)&0xFF));
  4259  000E9A  0E3C               	movlw	60
  4260  000E9C  6ECF               	movwf	207,c	;volatile
  4261                           
  4262                           ;main.c: 446: TMR1L = ((unsigned char)((15536)&0xFF));
  4263  000E9E  0EB0               	movlw	176
  4264  000EA0  6ECE               	movwf	206,c	;volatile
  4265                           
  4266                           ;main.c: 448: T0CONbits.T0PS = 0b000;
  4267  000EA2  0EF8               	movlw	-8
  4268  000EA4  16D5               	andwf	213,f,c	;volatile
  4269                           
  4270                           ;main.c: 449: T0CONbits.PSA = 1;
  4271  000EA6  86D5               	bsf	213,3,c	;volatile
  4272                           
  4273                           ;main.c: 450: T0CONbits.T08BIT = 0;
  4274  000EA8  9CD5               	bcf	213,6,c	;volatile
  4275                           
  4276                           ;main.c: 451: T0CONbits.T0CS = 0;
  4277  000EAA  9AD5               	bcf	213,5,c	;volatile
  4278                           
  4279                           ;main.c: 452: T0CONbits.TMR0ON = 1;
  4280  000EAC  8ED5               	bsf	213,7,c	;volatile
  4281                           
  4282                           ;main.c: 453: TMR0H = ((unsigned char)(((45536)>>8)&0xFF));
  4283  000EAE  0EB1               	movlw	177
  4284  000EB0  6ED7               	movwf	215,c	;volatile
  4285                           
  4286                           ;main.c: 454: TMR0L = ((unsigned char)((45536)&0xFF));
  4287  000EB2  0EE0               	movlw	224
  4288  000EB4  6ED6               	movwf	214,c	;volatile
  4289                           
  4290                           ;main.c: 455: INTCONbits.T0IE = 1;
  4291  000EB6  8AF2               	bsf	242,5,c	;volatile
  4292                           
  4293                           ;main.c: 456: INTCON2bits.RBPU = 0;
  4294  000EB8  9EF1               	bcf	241,7,c	;volatile
  4295                           
  4296                           ;main.c: 460: PIE1bits.TMR1IE = 1;
  4297  000EBA  809D               	bsf	157,0,c	;volatile
  4298                           
  4299                           ;main.c: 461: INTCONbits.PEIE = 1;
  4300  000EBC  8CF2               	bsf	242,6,c	;volatile
  4301                           
  4302                           ;main.c: 462: INTCONbits.GIE = 1;
  4303  000EBE  8EF2               	bsf	242,7,c	;volatile
  4304                           
  4305                           ;main.c: 463: initLCD();
  4306  000EC0  EC0A  F005         	call	_initLCD	;wreg free
  4307                           
  4308                           ;main.c: 464: cgrom_char(&symbol_4, 1);
  4309  000EC4  0E2B               	movlw	low _symbol_4
  4310  000EC6  6E36               	movwf	cgrom_char@symbol^0,c
  4311  000EC8  0E1F               	movlw	high _symbol_4
  4312  000ECA  6E37               	movwf	(cgrom_char@symbol+1)^0,c
  4313  000ECC  0E01               	movlw	1
  4314  000ECE  6E38               	movwf	cgrom_char@address^0,c
  4315  000ED0  EC6A  F008         	call	_cgrom_char	;wreg free
  4316                           
  4317                           ;main.c: 465: LATCbits.LATC4 = 0;
  4318  000ED4  988B               	bcf	139,4,c	;volatile
  4319  000ED6  0012               	return		;funcret
  4320  000ED8                     __end_of_Main_init:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _init_ds18b20 *****************
  4324 ;; Defined at:
  4325 ;;		line 18 in file "ds18b20.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;		None
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  i               1    9[COMRAM] unsigned char 
  4330 ;;  q               1    8[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1
  4340 ;;      Params:         0       0       0
  4341 ;;      Locals:         2       0       0
  4342 ;;      Temps:          2       0       0
  4343 ;;      Totals:         4       0       0
  4344 ;;Total ram usage:        4 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    3
  4347 ;; This function calls:
  4348 ;;		_ow_reset
  4349 ;;		_read_eep
  4350 ;;		_write_byte
  4351 ;; This function is called by:
  4352 ;;		_Main_init
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text19
  4357  000D94                     __ptext19:
  4358                           	callstack 0
  4359  000D94                     _init_ds18b20:
  4360                           	callstack 26
  4361                           
  4362                           ;ds18b20.c: 20: if (!ow_reset())
  4363                           
  4364                           ;incstack = 0
  4365  000D94  EC83  F008         	call	_ow_reset	;wreg free
  4366  000D98  0900               	iorlw	0
  4367  000D9A  E10F               	bnz	l2221
  4368                           
  4369                           ;ds18b20.c: 21: {;ds18b20.c: 23: write_byte(0xCC);
  4370  000D9C  0ECC               	movlw	204
  4371  000D9E  EC35  F008         	call	_write_byte
  4372                           
  4373                           ;ds18b20.c: 24: write_byte(0x4E);
  4374  000DA2  0E4E               	movlw	78
  4375  000DA4  EC35  F008         	call	_write_byte
  4376                           
  4377                           ;ds18b20.c: 25: write_byte(0x00);
  4378  000DA8  0E00               	movlw	0
  4379  000DAA  EC35  F008         	call	_write_byte
  4380                           
  4381                           ;ds18b20.c: 26: write_byte(0x00);
  4382  000DAE  0E00               	movlw	0
  4383  000DB0  EC35  F008         	call	_write_byte
  4384                           
  4385                           ;ds18b20.c: 27: write_byte(0x7F);
  4386  000DB4  0E7F               	movlw	127
  4387  000DB6  EC35  F008         	call	_write_byte
  4388  000DBA                     l2221:
  4389                           
  4390                           ;ds18b20.c: 28: };ds18b20.c: 30: for (uint8_t q = 0; q < 2; q++) {
  4391  000DBA  6A3A               	clrf	init_ds18b20@q^0,c
  4392  000DBC                     l278:
  4393                           
  4394                           ;ds18b20.c: 31: for (uint8_t i = 0; i < 8; i++) {
  4395  000DBC  6A3B               	clrf	init_ds18b20@i^0,c
  4396  000DBE                     l2231:
  4397                           
  4398                           ;ds18b20.c: 32: rom_dq[q][i] = read_eep((q*8) + i);
  4399  000DBE  503A               	movf	init_ds18b20@q^0,w,c
  4400  000DC0  0D08               	mullw	8
  4401  000DC2  50F3               	movf	243,w,c
  4402  000DC4  0F01               	addlw	low _rom_dq
  4403  000DC6  243B               	addwf	init_ds18b20@i^0,w,c
  4404  000DC8  6ED9               	movwf	fsr2l,c
  4405  000DCA  6ADA               	clrf	fsr2h,c
  4406  000DCC  503A               	movf	init_ds18b20@q^0,w,c
  4407  000DCE  6E38               	movwf	??_init_ds18b20^0,c
  4408  000DD0  6A39               	clrf	(??_init_ds18b20+1)^0,c
  4409  000DD2  90D8               	bcf	status,0,c
  4410  000DD4  3638               	rlcf	??_init_ds18b20^0,f,c
  4411  000DD6  3639               	rlcf	(??_init_ds18b20+1)^0,f,c
  4412  000DD8  90D8               	bcf	status,0,c
  4413  000DDA  3638               	rlcf	??_init_ds18b20^0,f,c
  4414  000DDC  3639               	rlcf	(??_init_ds18b20+1)^0,f,c
  4415  000DDE  90D8               	bcf	status,0,c
  4416  000DE0  3638               	rlcf	??_init_ds18b20^0,f,c
  4417  000DE2  3639               	rlcf	(??_init_ds18b20+1)^0,f,c
  4418  000DE4  503B               	movf	init_ds18b20@i^0,w,c
  4419  000DE6  2438               	addwf	??_init_ds18b20^0,w,c
  4420  000DE8  6E32               	movwf	read_eep@address^0,c
  4421  000DEA  0E00               	movlw	0
  4422  000DEC  2039               	addwfc	(??_init_ds18b20+1)^0,w,c
  4423  000DEE  6E33               	movwf	(read_eep@address+1)^0,c
  4424  000DF0  EC19  F009         	call	_read_eep	;wreg free
  4425  000DF4  6EDF               	movwf	indf2,c
  4426  000DF6  2A3B               	incf	init_ds18b20@i^0,f,c
  4427  000DF8  0E07               	movlw	7
  4428  000DFA  643B               	cpfsgt	init_ds18b20@i^0,c
  4429  000DFC  D7E0               	goto	l2231
  4430  000DFE  2A3A               	incf	init_ds18b20@q^0,f,c
  4431  000E00  0E01               	movlw	1
  4432  000E02  643A               	cpfsgt	init_ds18b20@q^0,c
  4433  000E04  D7DB               	goto	l278
  4434  000E06  0C01               	retlw	1
  4435  000E08                     __end_of_init_ds18b20:
  4436                           	callstack 0
  4437                           
  4438 ;; *************** function _write_byte *****************
  4439 ;; Defined at:
  4440 ;;		line 66 in file "onewire.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  val             1    wreg     unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  val             1    3[COMRAM] unsigned char 
  4445 ;;  i               1    5[COMRAM] unsigned char 
  4446 ;;  temp            1    4[COMRAM] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, status,0, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1
  4456 ;;      Params:         0       0       0
  4457 ;;      Locals:         3       0       0
  4458 ;;      Temps:          2       0       0
  4459 ;;      Totals:         5       0       0
  4460 ;;Total ram usage:        5 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    2
  4463 ;; This function calls:
  4464 ;;		_write_bit
  4465 ;; This function is called by:
  4466 ;;		_init_ds18b20
  4467 ;;		_ds18b20_readTemp
  4468 ;;		_ds18b20_readrom
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text20
  4473  00106A                     __ptext20:
  4474                           	callstack 0
  4475  00106A                     _write_byte:
  4476                           	callstack 27
  4477                           
  4478                           ;incstack = 0
  4479                           ;write_byte@val stored from wreg
  4480  00106A  6E35               	movwf	write_byte@val^0,c
  4481                           
  4482                           ;onewire.c: 68: uint8_t i;;onewire.c: 69: uint8_t temp;;onewire.c: 71: for (i=0;i<8;i++)
  4483  00106C  6A37               	clrf	write_byte@i^0,c
  4484  00106E                     l1271:
  4485                           
  4486                           ;onewire.c: 72: {;onewire.c: 73: temp = val >> i;
  4487  00106E  C037  F033         	movff	write_byte@i,??_write_byte
  4488  001072  C035  F034         	movff	write_byte@val,??_write_byte+1
  4489  001076  2A33               	incf	??_write_byte^0,f,c
  4490  001078  D002               	goto	u124
  4491  00107A                     u125:
  4492  00107A  90D8               	bcf	status,0,c
  4493  00107C  3234               	rrcf	(??_write_byte+1)^0,f,c
  4494  00107E                     u124:
  4495  00107E  2E33               	decfsz	??_write_byte^0,f,c
  4496  001080  D7FC               	goto	u125
  4497  001082  5034               	movf	(??_write_byte+1)^0,w,c
  4498  001084  6E36               	movwf	write_byte@temp^0,c
  4499                           
  4500                           ;onewire.c: 74: temp &= 0x01;
  4501  001086  0E01               	movlw	1
  4502  001088  1636               	andwf	write_byte@temp^0,f,c
  4503                           
  4504                           ;onewire.c: 75: write_bit(temp);
  4505  00108A  5036               	movf	write_byte@temp^0,w,c
  4506  00108C  ECE4  F008         	call	_write_bit
  4507  001090  2A37               	incf	write_byte@i^0,f,c
  4508  001092  0E07               	movlw	7
  4509  001094  6437               	cpfsgt	write_byte@i^0,c
  4510  001096  D7EB               	goto	l1271
  4511                           
  4512                           ;onewire.c: 76: };onewire.c: 78: _delay((unsigned long)((105)*(8000000/4000000.0)));
  4513  001098  0E46               	movlw	70
  4514  00109A                     u2137:
  4515  00109A  2EE8               	decfsz	wreg,f,c
  4516  00109C  D7FE               	bra	u2137
  4517  00109E  0012               	return		;funcret
  4518  0010A0                     __end_of_write_byte:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _write_bit *****************
  4522 ;; Defined at:
  4523 ;;		line 34 in file "onewire.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  bitval          1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  bitval          1    0[COMRAM] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1
  4537 ;;      Params:         0       0       0
  4538 ;;      Locals:         1       0       0
  4539 ;;      Temps:          0       0       0
  4540 ;;      Totals:         1       0       0
  4541 ;;Total ram usage:        1 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    1
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_write_byte
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text21
  4552  0011C8                     __ptext21:
  4553                           	callstack 0
  4554  0011C8                     _write_bit:
  4555                           	callstack 27
  4556                           
  4557                           ;incstack = 0
  4558                           ;write_bit@bitval stored from wreg
  4559  0011C8  6E32               	movwf	write_bit@bitval^0,c
  4560                           
  4561                           ;onewire.c: 36: PORTAbits.RA6 = 0;
  4562  0011CA  9C80               	bcf	128,6,c	;volatile
  4563                           
  4564                           ;onewire.c: 37: TRISAbits.TRISA6 = 0;
  4565  0011CC  9C92               	bcf	146,6,c	;volatile
  4566                           
  4567                           ;onewire.c: 38: if(bitval == 1) {
  4568  0011CE  0432               	decf	write_bit@bitval^0,w,c
  4569  0011D0  E104               	bnz	l1237
  4570                           
  4571                           ;onewire.c: 39: _delay((unsigned long)((2)*(8000000/4000000.0)));
  4572  0011D2  D000               	nop2		;2 cycle nop
  4573  0011D4  D000               	nop2		;2 cycle nop
  4574                           
  4575                           ;onewire.c: 40: PORTAbits.RA6 = 1;
  4576  0011D6  8C80               	bsf	128,6,c	;volatile
  4577                           
  4578                           ;onewire.c: 41: TRISAbits.TRISA6 = 1;
  4579  0011D8  8C92               	bsf	146,6,c	;volatile
  4580  0011DA                     l1237:
  4581                           
  4582                           ;onewire.c: 42: };onewire.c: 43: _delay((unsigned long)((105)*(8000000/4000000.0)));
  4583  0011DA  0E46               	movlw	70
  4584  0011DC                     u2147:
  4585  0011DC  2EE8               	decfsz	wreg,f,c
  4586  0011DE  D7FE               	bra	u2147
  4587                           
  4588                           ;onewire.c: 44: PORTAbits.RA6 = 1;
  4589  0011E0  8C80               	bsf	128,6,c	;volatile
  4590                           
  4591                           ;onewire.c: 45: TRISAbits.TRISA6 = 1;
  4592  0011E2  8C92               	bsf	146,6,c	;volatile
  4593  0011E4  0012               	return		;funcret
  4594  0011E6                     __end_of_write_bit:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function _read_eep *****************
  4598 ;; Defined at:
  4599 ;;		line 25 in file "eeprom.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  address         2    0[COMRAM] unsigned short 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      unsigned char 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1
  4613 ;;      Params:         2       0       0
  4614 ;;      Locals:         0       0       0
  4615 ;;      Temps:          0       0       0
  4616 ;;      Totals:         2       0       0
  4617 ;;Total ram usage:        2 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_main
  4624 ;;		_init_ds18b20
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text22
  4629  001232                     __ptext22:
  4630                           	callstack 0
  4631  001232                     _read_eep:
  4632                           	callstack 29
  4633                           
  4634                           ;eeprom.c: 28: {}
  4635                           
  4636                           ;incstack = 0
  4637  001232  B2A6               	btfsc	166,1,c	;volsfr
  4638  001234  D7FE               	goto	_read_eep
  4639                           
  4640                           ;eeprom.c: 30: EEADR = address;
  4641  001236  C032  FFA9         	movff	read_eep@address,4009	;volatile
  4642                           
  4643                           ;eeprom.c: 31: EECON1bits.EEPGD = 0;
  4644  00123A  9EA6               	bcf	166,7,c	;volsfr
  4645                           
  4646                           ;eeprom.c: 32: EECON1bits.CFGS = 0;
  4647  00123C  9CA6               	bcf	166,6,c	;volsfr
  4648                           
  4649                           ;eeprom.c: 33: EECON1bits.RD = 1;
  4650  00123E  80A6               	bsf	166,0,c	;volsfr
  4651                           
  4652                           ;eeprom.c: 34: return( EEDATA );
  4653  001240  50A8               	movf	168,w,c	;volatile
  4654  001242  0012               	return		;funcret
  4655  001244                     __end_of_read_eep:
  4656                           	callstack 0
  4657                           
  4658 ;; *************** function _ow_reset *****************
  4659 ;; Defined at:
  4660 ;;		line 5 in file "onewire.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  presence        1    0[COMRAM] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      unsigned char 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1
  4674 ;;      Params:         0       0       0
  4675 ;;      Locals:         1       0       0
  4676 ;;      Temps:          0       0       0
  4677 ;;      Totals:         1       0       0
  4678 ;;Total ram usage:        1 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    1
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_init_ds18b20
  4685 ;;		_ds18b20_readTemp
  4686 ;;		_ds18b20_readrom
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text23
  4691  001106                     __ptext23:
  4692                           	callstack 0
  4693  001106                     _ow_reset:
  4694                           	callstack 28
  4695                           
  4696                           ;onewire.c: 7: uint8_t presence;;onewire.c: 8: PORTAbits.RA6 = 0;
  4697                           
  4698                           ;incstack = 0
  4699  001106  9C80               	bcf	128,6,c	;volatile
  4700                           
  4701                           ;onewire.c: 9: TRISAbits.TRISA6 = 0;
  4702  001108  9C92               	bcf	146,6,c	;volatile
  4703                           
  4704                           ;onewire.c: 10: _delay((unsigned long)((500)*(8000000/4000000.0)));
  4705  00110A  0EC8               	movlw	200
  4706  00110C                     u2157:
  4707  00110C  D000               	nop2	
  4708  00110E  2EE8               	decfsz	wreg,f,c
  4709  001110  D7FD               	bra	u2157
  4710                           
  4711                           ;onewire.c: 11: PORTAbits.RA6 = 1;
  4712  001112  8C80               	bsf	128,6,c	;volatile
  4713                           
  4714                           ;onewire.c: 12: TRISAbits.TRISA6 = 1;
  4715  001114  8C92               	bsf	146,6,c	;volatile
  4716                           
  4717                           ;onewire.c: 13: _delay((unsigned long)((100)*(8000000/4000000.0)));
  4718  001116  0E42               	movlw	66
  4719  001118                     u2167:
  4720  001118  2EE8               	decfsz	wreg,f,c
  4721  00111A  D7FE               	bra	u2167
  4722  00111C  D000               	nop2	
  4723                           
  4724                           ;onewire.c: 14: presence = PORTAbits.RA6;
  4725  00111E  0E00               	movlw	0
  4726  001120  BC80               	btfsc	128,6,c	;volatile
  4727  001122  0E01               	movlw	1
  4728  001124  6E32               	movwf	ow_reset@presence^0,c
  4729                           
  4730                           ;onewire.c: 15: _delay((unsigned long)((424)*(8000000/4000000.0)));
  4731  001126  0EA9               	movlw	169
  4732  001128                     u2177:
  4733  001128  D000               	nop2	
  4734  00112A  2EE8               	decfsz	wreg,f,c
  4735  00112C  D7FD               	bra	u2177
  4736  00112E  D000               	nop2	
  4737  001130  F000               	nop	
  4738                           
  4739                           ;onewire.c: 16: return(presence);
  4740  001132  5032               	movf	ow_reset@presence^0,w,c
  4741  001134  0012               	return		;funcret
  4742  001136                     __end_of_ow_reset:
  4743                           	callstack 0
  4744                           
  4745 ;; *************** function _initLCD *****************
  4746 ;; Defined at:
  4747 ;;		line 10 in file "hd44780.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1
  4761 ;;      Params:         0       0       0
  4762 ;;      Locals:         0       0       0
  4763 ;;      Temps:          1       0       0
  4764 ;;      Totals:         1       0       0
  4765 ;;Total ram usage:        1 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    4
  4768 ;; This function calls:
  4769 ;;		_clearLCD
  4770 ;;		_lcdNibble
  4771 ;;		_lcdWrite
  4772 ;; This function is called by:
  4773 ;;		_Main_init
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text24
  4778  000A14                     __ptext24:
  4779                           	callstack 0
  4780  000A14                     _initLCD:
  4781                           	callstack 25
  4782                           
  4783                           ;hd44780.c: 11: PORTAbits.RA2 = 0;
  4784                           
  4785                           ;incstack = 0
  4786  000A14  9480               	bcf	128,2,c	;volatile
  4787                           
  4788                           ;hd44780.c: 12: PORTAbits.RA1 = 0;
  4789  000A16  9280               	bcf	128,1,c	;volatile
  4790                           
  4791                           ;hd44780.c: 14: _delay((unsigned long)((10)*(8000000/4000.0)));
  4792  000A18  0E1A               	movlw	26
  4793  000A1A  6E37               	movwf	??_initLCD^0,c
  4794  000A1C  0EF8               	movlw	248
  4795  000A1E                     u2187:
  4796  000A1E  2EE8               	decfsz	wreg,f,c
  4797  000A20  D7FE               	bra	u2187
  4798  000A22  2E37               	decfsz	??_initLCD^0,f,c
  4799  000A24  D7FC               	bra	u2187
  4800  000A26  D000               	nop2	
  4801                           
  4802                           ;hd44780.c: 15: _delay((unsigned long)((10)*(8000000/4000.0)));
  4803  000A28  0E1A               	movlw	26
  4804  000A2A  6E37               	movwf	??_initLCD^0,c
  4805  000A2C  0EF8               	movlw	248
  4806  000A2E                     u2197:
  4807  000A2E  2EE8               	decfsz	wreg,f,c
  4808  000A30  D7FE               	bra	u2197
  4809  000A32  2E37               	decfsz	??_initLCD^0,f,c
  4810  000A34  D7FC               	bra	u2197
  4811  000A36  D000               	nop2	
  4812                           
  4813                           ;hd44780.c: 16: _delay((unsigned long)((10)*(8000000/4000.0)));
  4814  000A38  0E1A               	movlw	26
  4815  000A3A  6E37               	movwf	??_initLCD^0,c
  4816  000A3C  0EF8               	movlw	248
  4817  000A3E                     u2207:
  4818  000A3E  2EE8               	decfsz	wreg,f,c
  4819  000A40  D7FE               	bra	u2207
  4820  000A42  2E37               	decfsz	??_initLCD^0,f,c
  4821  000A44  D7FC               	bra	u2207
  4822  000A46  D000               	nop2	
  4823                           
  4824                           ;hd44780.c: 17: _delay((unsigned long)((10)*(8000000/4000.0)));
  4825  000A48  0E1A               	movlw	26
  4826  000A4A  6E37               	movwf	??_initLCD^0,c
  4827  000A4C  0EF8               	movlw	248
  4828  000A4E                     u2217:
  4829  000A4E  2EE8               	decfsz	wreg,f,c
  4830  000A50  D7FE               	bra	u2217
  4831  000A52  2E37               	decfsz	??_initLCD^0,f,c
  4832  000A54  D7FC               	bra	u2217
  4833  000A56  D000               	nop2	
  4834                           
  4835                           ;hd44780.c: 21: lcdNibble(0b0011);
  4836  000A58  0E03               	movlw	3
  4837  000A5A  EC8D  F006         	call	_lcdNibble
  4838                           
  4839                           ;hd44780.c: 22: _delay((unsigned long)((5)*(8000000/4000.0)));
  4840  000A5E  0E0D               	movlw	13
  4841  000A60  6E37               	movwf	??_initLCD^0,c
  4842  000A62  0EFC               	movlw	252
  4843  000A64                     u2227:
  4844  000A64  2EE8               	decfsz	wreg,f,c
  4845  000A66  D7FE               	bra	u2227
  4846  000A68  2E37               	decfsz	??_initLCD^0,f,c
  4847  000A6A  D7FC               	bra	u2227
  4848                           
  4849                           ;hd44780.c: 23: lcdNibble(0b0011);
  4850  000A6C  0E03               	movlw	3
  4851  000A6E  EC8D  F006         	call	_lcdNibble
  4852                           
  4853                           ;hd44780.c: 24: _delay((unsigned long)((5)*(8000000/4000.0)));
  4854  000A72  0E0D               	movlw	13
  4855  000A74  6E37               	movwf	??_initLCD^0,c
  4856  000A76  0EFC               	movlw	252
  4857  000A78                     u2237:
  4858  000A78  2EE8               	decfsz	wreg,f,c
  4859  000A7A  D7FE               	bra	u2237
  4860  000A7C  2E37               	decfsz	??_initLCD^0,f,c
  4861  000A7E  D7FC               	bra	u2237
  4862                           
  4863                           ;hd44780.c: 25: lcdNibble(0b0011);
  4864  000A80  0E03               	movlw	3
  4865  000A82  EC8D  F006         	call	_lcdNibble
  4866                           
  4867                           ;hd44780.c: 26: _delay((unsigned long)((5)*(8000000/4000.0)));
  4868  000A86  0E0D               	movlw	13
  4869  000A88  6E37               	movwf	??_initLCD^0,c
  4870  000A8A  0EFC               	movlw	252
  4871  000A8C                     u2247:
  4872  000A8C  2EE8               	decfsz	wreg,f,c
  4873  000A8E  D7FE               	bra	u2247
  4874  000A90  2E37               	decfsz	??_initLCD^0,f,c
  4875  000A92  D7FC               	bra	u2247
  4876                           
  4877                           ;hd44780.c: 27: lcdNibble(0b0010);
  4878  000A94  0E02               	movlw	2
  4879  000A96  EC8D  F006         	call	_lcdNibble
  4880                           
  4881                           ;hd44780.c: 28: _delay((unsigned long)((5)*(8000000/4000.0)));
  4882  000A9A  0E0D               	movlw	13
  4883  000A9C  6E37               	movwf	??_initLCD^0,c
  4884  000A9E  0EFC               	movlw	252
  4885  000AA0                     u2257:
  4886  000AA0  2EE8               	decfsz	wreg,f,c
  4887  000AA2  D7FE               	bra	u2257
  4888  000AA4  2E37               	decfsz	??_initLCD^0,f,c
  4889  000AA6  D7FC               	bra	u2257
  4890                           
  4891                           ;hd44780.c: 31: lcdWrite(((0b0010 << 4) | (1 << 3)), COMMAND);
  4892  000AA8  0E00               	movlw	0
  4893  000AAA  6E34               	movwf	lcdWrite@type^0,c
  4894  000AAC  0E28               	movlw	40
  4895  000AAE  ECD2  F008         	call	_lcdWrite
  4896                           
  4897                           ;hd44780.c: 32: _delay((unsigned long)((5)*(8000000/4000.0)));
  4898  000AB2  0E0D               	movlw	13
  4899  000AB4  6E37               	movwf	??_initLCD^0,c
  4900  000AB6  0EFC               	movlw	252
  4901  000AB8                     u2267:
  4902  000AB8  2EE8               	decfsz	wreg,f,c
  4903  000ABA  D7FE               	bra	u2267
  4904  000ABC  2E37               	decfsz	??_initLCD^0,f,c
  4905  000ABE  D7FC               	bra	u2267
  4906                           
  4907                           ;hd44780.c: 33: lcdWrite(((0b1100) | (0 << 1) | (0 << 0)), COMMAND);
  4908  000AC0  0E00               	movlw	0
  4909  000AC2  6E34               	movwf	lcdWrite@type^0,c
  4910  000AC4  0E0C               	movlw	12
  4911  000AC6  ECD2  F008         	call	_lcdWrite
  4912                           
  4913                           ;hd44780.c: 34: _delay((unsigned long)((8)*(8000000/4000.0)));
  4914  000ACA  0E15               	movlw	21
  4915  000ACC  6E37               	movwf	??_initLCD^0,c
  4916  000ACE  0EC6               	movlw	198
  4917  000AD0                     u2277:
  4918  000AD0  2EE8               	decfsz	wreg,f,c
  4919  000AD2  D7FE               	bra	u2277
  4920  000AD4  2E37               	decfsz	??_initLCD^0,f,c
  4921  000AD6  D7FC               	bra	u2277
  4922  000AD8  D000               	nop2	
  4923                           
  4924                           ;hd44780.c: 35: clearLCD();
  4925  000ADA  EC01  F009         	call	_clearLCD	;wreg free
  4926                           
  4927                           ;hd44780.c: 36: _delay((unsigned long)((5)*(8000000/4000.0)));
  4928  000ADE  0E0D               	movlw	13
  4929  000AE0  6E37               	movwf	??_initLCD^0,c
  4930  000AE2  0EFC               	movlw	252
  4931  000AE4                     u2287:
  4932  000AE4  2EE8               	decfsz	wreg,f,c
  4933  000AE6  D7FE               	bra	u2287
  4934  000AE8  2E37               	decfsz	??_initLCD^0,f,c
  4935  000AEA  D7FC               	bra	u2287
  4936                           
  4937                           ;hd44780.c: 37: lcdWrite(0x06, COMMAND);
  4938  000AEC  0E00               	movlw	0
  4939  000AEE  6E34               	movwf	lcdWrite@type^0,c
  4940  000AF0  0E06               	movlw	6
  4941  000AF2  ECD2  F008         	call	_lcdWrite
  4942                           
  4943                           ;hd44780.c: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
  4944  000AF6  0E0D               	movlw	13
  4945  000AF8  6E37               	movwf	??_initLCD^0,c
  4946  000AFA  0EFC               	movlw	252
  4947  000AFC                     u2297:
  4948  000AFC  2EE8               	decfsz	wreg,f,c
  4949  000AFE  D7FE               	bra	u2297
  4950  000B00  2E37               	decfsz	??_initLCD^0,f,c
  4951  000B02  D7FC               	bra	u2297
  4952                           
  4953                           ;hd44780.c: 39: clearLCD();
  4954  000B04  EC01  F009         	call	_clearLCD	;wreg free
  4955                           
  4956                           ;hd44780.c: 41: PORTAbits.RA2 = 1;
  4957  000B08  8480               	bsf	128,2,c	;volatile
  4958  000B0A  0012               	return		;funcret
  4959  000B0C                     __end_of_initLCD:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function _clearLCD *****************
  4963 ;; Defined at:
  4964 ;;		line 45 in file "hd44780.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg, status,2, status,0, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1
  4978 ;;      Params:         0       0       0
  4979 ;;      Locals:         0       0       0
  4980 ;;      Temps:          1       0       0
  4981 ;;      Totals:         1       0       0
  4982 ;;Total ram usage:        1 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    3
  4985 ;; This function calls:
  4986 ;;		_lcdWrite
  4987 ;; This function is called by:
  4988 ;;		_main
  4989 ;;		_initLCD
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text25
  4994  001202                     __ptext25:
  4995                           	callstack 0
  4996  001202                     _clearLCD:
  4997                           	callstack 0
  4998                           
  4999                           ;hd44780.c: 46: lcdWrite(0x01, COMMAND);
  5000                           
  5001                           ;incstack = 0
  5002  001202  EC45  F006         	call	PL60	;call to abstracted procedure
  5003  001206  ECD2  F008         	call	_lcdWrite
  5004                           
  5005                           ;hd44780.c: 47: _delay((unsigned long)((2)*(8000000/4000.0)));
  5006  00120A  0E06               	movlw	6
  5007  00120C  6E36               	movwf	??_clearLCD^0,c
  5008  00120E  0E30               	movlw	48
  5009  001210                     u2307:
  5010  001210  2EE8               	decfsz	wreg,f,c
  5011  001212  D7FE               	bra	u2307
  5012  001214  2E36               	decfsz	??_clearLCD^0,f,c
  5013  001216  D7FC               	bra	u2307
  5014  001218  D000               	nop2	
  5015  00121A  0012               	return		;funcret
  5016  00121C                     __end_of_clearLCD:
  5017                           	callstack 0
  5018                           
  5019 ;; *************** function _cgrom_char *****************
  5020 ;; Defined at:
  5021 ;;		line 127 in file "hd44780.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  symbol          2    4[COMRAM] PTR unsigned char 
  5024 ;;		 -> symbol_4(8), 
  5025 ;;  address         1    6[COMRAM] unsigned char 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  i               1    7[COMRAM] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1
  5037 ;;      Params:         3       0       0
  5038 ;;      Locals:         1       0       0
  5039 ;;      Temps:          0       0       0
  5040 ;;      Totals:         4       0       0
  5041 ;;Total ram usage:        4 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    3
  5044 ;; This function calls:
  5045 ;;		_lcdWrite
  5046 ;; This function is called by:
  5047 ;;		_Main_init
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text26
  5052  0010D4                     __ptext26:
  5053                           	callstack 0
  5054  0010D4                     _cgrom_char:
  5055                           	callstack 26
  5056                           
  5057                           ;hd44780.c: 128: uint8_t i;;hd44780.c: 129: lcdWrite(0x40 | (address * 8), COMMAND);
  5058                           
  5059                           ;incstack = 0
  5060  0010D4  6A34               	clrf	lcdWrite@type^0,c
  5061  0010D6  5038               	movf	cgrom_char@address^0,w,c
  5062  0010D8  0D08               	mullw	8
  5063  0010DA  50F3               	movf	243,w,c
  5064  0010DC  0940               	iorlw	64
  5065  0010DE  ECD2  F008         	call	_lcdWrite
  5066                           
  5067                           ;hd44780.c: 130: for (i = 0; i < 8; i++)
  5068  0010E2  6A39               	clrf	cgrom_char@i^0,c
  5069  0010E4                     l2279:
  5070                           
  5071                           ;hd44780.c: 131: lcdWrite(*symbol++, DATA);
  5072  0010E4  0E01               	movlw	1
  5073  0010E6  6E34               	movwf	lcdWrite@type^0,c
  5074  0010E8  C036  FFF6         	movff	cgrom_char@symbol,tblptrl
  5075  0010EC  C037  FFF7         	movff	cgrom_char@symbol+1,tblptrh
  5076  0010F0                     	if	0	;tblptru may be non-zero
  5077  0010F0                     	endif
  5078  0010F0                     	if	0	;tblptru may be non-zero
  5079  0010F0                     	endif
  5080  0010F0  0008               	tblrd		*
  5081  0010F2  50F5               	movf	tablat,w,c
  5082  0010F4  ECD2  F008         	call	_lcdWrite
  5083  0010F8  4A36               	infsnz	cgrom_char@symbol^0,f,c
  5084  0010FA  2A37               	incf	(cgrom_char@symbol+1)^0,f,c
  5085  0010FC  2A39               	incf	cgrom_char@i^0,f,c
  5086  0010FE  0E07               	movlw	7
  5087  001100  6439               	cpfsgt	cgrom_char@i^0,c
  5088  001102  D7F0               	goto	l2279
  5089  001104  0C07               	retlw	7
  5090  001106                     __end_of_cgrom_char:
  5091                           	callstack 0
  5092                           
  5093 ;; *************** function _lcdWrite *****************
  5094 ;; Defined at:
  5095 ;;		line 50 in file "hd44780.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  byte            1    wreg     unsigned char 
  5098 ;;  type            1    2[COMRAM] enum E2011
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  byte            1    3[COMRAM] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1
  5110 ;;      Params:         1       0       0
  5111 ;;      Locals:         1       0       0
  5112 ;;      Temps:          0       0       0
  5113 ;;      Totals:         2       0       0
  5114 ;;Total ram usage:        2 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    2
  5117 ;; This function calls:
  5118 ;;		_lcdNibble
  5119 ;; This function is called by:
  5120 ;;		_initLCD
  5121 ;;		_clearLCD
  5122 ;;		_lcd_gotoxy
  5123 ;;		_lcd_putc
  5124 ;;		_lcdPrint
  5125 ;;		_cgrom_char
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text27
  5130  0011A4                     __ptext27:
  5131                           	callstack 0
  5132  0011A4                     _lcdWrite:
  5133                           	callstack 27
  5134                           
  5135                           ;incstack = 0
  5136                           ;lcdWrite@byte stored from wreg
  5137  0011A4  6E35               	movwf	lcdWrite@byte^0,c
  5138                           
  5139                           ;hd44780.c: 51: if (type == COMMAND)
  5140  0011A6  5034               	movf	lcdWrite@type^0,w,c
  5141  0011A8  E102               	bnz	l348
  5142                           
  5143                           ;hd44780.c: 52: PORTAbits.RA2 = 0;
  5144  0011AA  9480               	bcf	128,2,c	;volatile
  5145  0011AC  D001               	goto	l2165
  5146  0011AE                     l348:
  5147                           
  5148                           ;hd44780.c: 53: else;hd44780.c: 54: PORTAbits.RA2 = 1;
  5149  0011AE  8480               	bsf	128,2,c	;volatile
  5150  0011B0                     l2165:
  5151                           
  5152                           ;hd44780.c: 56: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5153  0011B0  0E42               	movlw	66
  5154  0011B2                     u2317:
  5155  0011B2  2EE8               	decfsz	wreg,f,c
  5156  0011B4  D7FE               	bra	u2317
  5157  0011B6  D000               	nop2	
  5158                           
  5159                           ;hd44780.c: 58: lcdNibble(byte >> 4);
  5160  0011B8  3835               	swapf	lcdWrite@byte^0,w,c
  5161  0011BA  0B0F               	andlw	15
  5162  0011BC  EC8D  F006         	call	_lcdNibble
  5163                           
  5164                           ;hd44780.c: 59: lcdNibble(byte & 0x0F);
  5165  0011C0  5035               	movf	lcdWrite@byte^0,w,c
  5166  0011C2  0B0F               	andlw	15
  5167  0011C4  EF8D  F006         	goto	_lcdNibble
  5168  0011C8                     __end_of_lcdWrite:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _lcdNibble *****************
  5172 ;; Defined at:
  5173 ;;		line 63 in file "hd44780.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  nibble          1    wreg     unsigned char 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  nibble          1    1[COMRAM] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1
  5187 ;;      Params:         0       0       0
  5188 ;;      Locals:         1       0       0
  5189 ;;      Temps:          1       0       0
  5190 ;;      Totals:         2       0       0
  5191 ;;Total ram usage:        2 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    1
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_initLCD
  5198 ;;		_lcdWrite
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text28
  5203  000D1A                     __ptext28:
  5204                           	callstack 0
  5205  000D1A                     _lcdNibble:
  5206                           	callstack 27
  5207                           
  5208                           ;incstack = 0
  5209                           ;lcdNibble@nibble stored from wreg
  5210  000D1A  6E33               	movwf	lcdNibble@nibble^0,c
  5211                           
  5212                           ;hd44780.c: 64: PORTCbits.RC0 = (nibble & 0x01) ? 1 : 0;
  5213  000D1C  A033               	btfss	lcdNibble@nibble^0,0,c
  5214  000D1E  D003               	goto	u10
  5215  000D20  6A32               	clrf	??_lcdNibble^0,c
  5216  000D22  2A32               	incf	??_lcdNibble^0,f,c
  5217  000D24  D001               	goto	u28
  5218  000D26                     u10:
  5219  000D26  6A32               	clrf	??_lcdNibble^0,c
  5220  000D28                     u28:
  5221  000D28  5082               	movf	130,w,c	;volatile
  5222  000D2A  1832               	xorwf	??_lcdNibble^0,w,c
  5223  000D2C  0BFE               	andlw	-2
  5224  000D2E  1832               	xorwf	??_lcdNibble^0,w,c
  5225  000D30  6E82               	movwf	130,c	;volatile
  5226                           
  5227                           ;hd44780.c: 65: PORTCbits.RC1 = (nibble & 0x02) ? 1 : 0;
  5228  000D32  A233               	btfss	lcdNibble@nibble^0,1,c
  5229  000D34  D003               	goto	u30
  5230  000D36  6A32               	clrf	??_lcdNibble^0,c
  5231  000D38  2A32               	incf	??_lcdNibble^0,f,c
  5232  000D3A  D001               	goto	u48
  5233  000D3C                     u30:
  5234  000D3C  6A32               	clrf	??_lcdNibble^0,c
  5235  000D3E                     u48:
  5236  000D3E  4632               	rlncf	??_lcdNibble^0,f,c
  5237  000D40  5082               	movf	130,w,c	;volatile
  5238  000D42  1832               	xorwf	??_lcdNibble^0,w,c
  5239  000D44  0BFD               	andlw	-3
  5240  000D46  1832               	xorwf	??_lcdNibble^0,w,c
  5241  000D48  6E82               	movwf	130,c	;volatile
  5242                           
  5243                           ;hd44780.c: 66: PORTCbits.RC2 = (nibble & 0x04) ? 1 : 0;
  5244  000D4A  A433               	btfss	lcdNibble@nibble^0,2,c
  5245  000D4C  D003               	goto	u50
  5246  000D4E  6A32               	clrf	??_lcdNibble^0,c
  5247  000D50  2A32               	incf	??_lcdNibble^0,f,c
  5248  000D52  D001               	goto	u68
  5249  000D54                     u50:
  5250  000D54  6A32               	clrf	??_lcdNibble^0,c
  5251  000D56                     u68:
  5252  000D56  D819               	call	PL30	;call to abstracted procedure
  5253  000D58  0BFB               	andlw	-5
  5254  000D5A  1832               	xorwf	??_lcdNibble^0,w,c
  5255  000D5C  6E82               	movwf	130,c	;volatile
  5256                           
  5257                           ;hd44780.c: 67: PORTCbits.RC3 = (nibble & 0x08) ? 1 : 0;
  5258  000D5E  A633               	btfss	lcdNibble@nibble^0,3,c
  5259  000D60  D003               	goto	u70
  5260  000D62  6A32               	clrf	??_lcdNibble^0,c
  5261  000D64  2A32               	incf	??_lcdNibble^0,f,c
  5262  000D66  D001               	goto	u88
  5263  000D68                     u70:
  5264  000D68  6A32               	clrf	??_lcdNibble^0,c
  5265  000D6A                     u88:
  5266  000D6A  4632               	rlncf	??_lcdNibble^0,f,c
  5267  000D6C  D80E               	call	PL30	;call to abstracted procedure
  5268  000D6E  0BF7               	andlw	-9
  5269  000D70  1832               	xorwf	??_lcdNibble^0,w,c
  5270  000D72  6E82               	movwf	130,c	;volatile
  5271                           
  5272                           ;hd44780.c: 70: PORTAbits.RA1 = 1;
  5273  000D74  8280               	bsf	128,1,c	;volatile
  5274                           
  5275                           ;hd44780.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5276  000D76  0E42               	movlw	66
  5277  000D78                     u2327:
  5278  000D78  2EE8               	decfsz	wreg,f,c
  5279  000D7A  D7FE               	bra	u2327
  5280  000D7C  D000               	nop2	
  5281                           
  5282                           ;hd44780.c: 72: PORTAbits.RA1 = 0;
  5283  000D7E  9280               	bcf	128,1,c	;volatile
  5284                           
  5285                           ;hd44780.c: 73: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5286  000D80  0E42               	movlw	66
  5287  000D82                     u2337:
  5288  000D82  2EE8               	decfsz	wreg,f,c
  5289  000D84  D7FE               	bra	u2337
  5290  000D86  D000               	nop2	
  5291  000D88  0012               	return		;funcret
  5292  000D8A                     __end_of_lcdNibble:
  5293                           	callstack 0
  5294  000D8A                     PL30:
  5295                           	callstack 27
  5296  000D8A  4632               	rlncf	??_lcdNibble^0,f,c
  5297  000D8C  4632               	rlncf	??_lcdNibble^0,f,c
  5298  000D8E  5082               	movf	130,w,c	;volatile
  5299  000D90  1832               	xorwf	??_lcdNibble^0,w,c
  5300  000D92  0012               	return	
  5301  000D94                     __end_ofPL30:
  5302                           	callstack 0
  5303                           
  5304 ;; *************** function _myInt *****************
  5305 ;; Defined at:
  5306 ;;		line 473 in file "main.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;		None
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1    wreg      void 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1
  5320 ;;      Params:         0       0       0
  5321 ;;      Locals:         0       0       0
  5322 ;;      Temps:          0       0       0
  5323 ;;      Totals:         0       0       0
  5324 ;;Total ram usage:        0 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		Interrupt level 2
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           	psect	intcode
  5334  000008                     __pintcode:
  5335                           	callstack 0
  5336  000008                     _myInt:
  5337                           	callstack 25
  5338                           
  5339                           ;incstack = 0
  5340  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5341                           
  5342                           ;main.c: 474: static uint8_t snd_delay;;main.c: 475: if (PIR1bits.TMR1IF == 1) {
  5343  00000A  A09E               	btfss	158,0,c	;volatile
  5344  00000C  D00D               	goto	i2l2141
  5345                           
  5346                           ;main.c: 476: PIR1bits.TMR1IF = 0;
  5347  00000E  909E               	bcf	158,0,c	;volatile
  5348                           
  5349                           ;main.c: 477: TMR1H = ((unsigned char)(((15536)>>8)&0xFF));
  5350  000010  0E3C               	movlw	60
  5351  000012  6ECF               	movwf	207,c	;volatile
  5352                           
  5353                           ;main.c: 478: TMR1L = ((unsigned char)((15536)&0xFF));
  5354  000014  0EB0               	movlw	176
  5355  000016  6ECE               	movwf	206,c	;volatile
  5356                           
  5357                           ;main.c: 479: if (++timer_val >= 30)
  5358  000018  2A31               	incf	_timer_val^0,f,c
  5359  00001A  0E1D               	movlw	29
  5360  00001C  6431               	cpfsgt	_timer_val^0,c
  5361  00001E  D004               	goto	i2l2141
  5362                           
  5363                           ;main.c: 480: {;main.c: 481: timer_val = 0;
  5364  000020  6A31               	clrf	_timer_val^0,c
  5365                           
  5366                           ;main.c: 482: time_flag = 1;
  5367  000022  0E01               	movlw	1
  5368  000024  6E30               	movwf	_time_flag^0,c
  5369                           
  5370                           ;main.c: 483: T1CONbits.TMR1ON = 0;
  5371  000026  90CD               	bcf	205,0,c	;volatile
  5372  000028                     i2l2141:
  5373                           
  5374                           ;main.c: 485: };main.c: 486: };main.c: 487: if (INTCONbits.T0IF == 1) {
  5375  000028  A4F2               	btfss	242,2,c	;volatile
  5376  00002A  D015               	goto	i2l248
  5377                           
  5378                           ;main.c: 488: INTCONbits.T0IF = 0;
  5379  00002C  94F2               	bcf	242,2,c	;volatile
  5380                           
  5381                           ;main.c: 489: TMR0H = ((unsigned char)(((45536)>>8)&0xFF));
  5382  00002E  0EB1               	movlw	177
  5383  000030  6ED7               	movwf	215,c	;volatile
  5384                           
  5385                           ;main.c: 490: TMR0L = ((unsigned char)((45536)&0xFF));
  5386  000032  0EE0               	movlw	224
  5387  000034  6ED6               	movwf	214,c	;volatile
  5388                           
  5389                           ;main.c: 491: read_key = 1;
  5390  000036  844A               	bsf	(_read_key/(0+8))^0,_read_key& (0+7),c
  5391                           
  5392                           ;main.c: 492: if (en_sound) {
  5393  000038  A24A               	btfss	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  5394  00003A  D00C               	goto	i2l243
  5395                           
  5396                           ;main.c: 493: snd_delay++;
  5397  00003C  2A20               	incf	myInt@snd_delay^0,f,c
  5398                           
  5399                           ;main.c: 494: if (snd_delay <= 20) {
  5400  00003E  0E15               	movlw	21
  5401  000040  6020               	cpfslt	myInt@snd_delay^0,c
  5402  000042  D002               	goto	i2l244
  5403                           
  5404                           ;main.c: 495: LATCbits.LATC4 = 1;
  5405  000044  888B               	bsf	139,4,c	;volatile
  5406                           
  5407                           ;main.c: 496: } else
  5408  000046  D001               	goto	i2l2157
  5409  000048                     i2l244:
  5410                           
  5411                           ;main.c: 497: LATCbits.LATC4 = 0;
  5412  000048  988B               	bcf	139,4,c	;volatile
  5413  00004A                     i2l2157:
  5414                           
  5415                           ;main.c: 498: if(snd_delay > 70)
  5416  00004A  0E46               	movlw	70
  5417  00004C  6420               	cpfsgt	myInt@snd_delay^0,c
  5418  00004E  D003               	goto	i2l248
  5419                           
  5420                           ;main.c: 499: snd_delay = 0;
  5421  000050  6A20               	clrf	myInt@snd_delay^0,c
  5422  000052  D001               	goto	i2l248
  5423  000054                     i2l243:
  5424                           
  5425                           ;main.c: 501: LATCbits.LATC4 = 0;
  5426  000054  988B               	bcf	139,4,c	;volatile
  5427  000056                     i2l248:
  5428  000056  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5429  000058  0011               	retfie		f
  5430  00005A                     __end_of_myInt:
  5431                           	callstack 0
  5432                           
  5433                           	psect	rparam
  5434  0000                     
  5435                           	psect	temp
  5436  00004B                     btemp:
  5437                           	callstack 0
  5438  00004B                     	ds	1
  5439  0000                     int$flags	set	btemp
  5440  0000                     wtemp8	set	btemp+1
  5441  0000                     ttemp5	set	btemp+1
  5442  0000                     ttemp6	set	btemp+4
  5443  0000                     ttemp7	set	btemp+8
  5444                           
  5445                           	psect	idloc
  5446                           
  5447                           ;Config register IDLOC0 @ 0x200000
  5448                           ;	unspecified, using default values
  5449  200000                     	org	2097152
  5450  200000  FF                 	db	255
  5451                           
  5452                           ;Config register IDLOC1 @ 0x200001
  5453                           ;	unspecified, using default values
  5454  200001                     	org	2097153
  5455  200001  FF                 	db	255
  5456                           
  5457                           ;Config register IDLOC2 @ 0x200002
  5458                           ;	unspecified, using default values
  5459  200002                     	org	2097154
  5460  200002  FF                 	db	255
  5461                           
  5462                           ;Config register IDLOC3 @ 0x200003
  5463                           ;	unspecified, using default values
  5464  200003                     	org	2097155
  5465  200003  FF                 	db	255
  5466                           
  5467                           ;Config register IDLOC4 @ 0x200004
  5468                           ;	unspecified, using default values
  5469  200004                     	org	2097156
  5470  200004  FF                 	db	255
  5471                           
  5472                           ;Config register IDLOC5 @ 0x200005
  5473                           ;	unspecified, using default values
  5474  200005                     	org	2097157
  5475  200005  FF                 	db	255
  5476                           
  5477                           ;Config register IDLOC6 @ 0x200006
  5478                           ;	unspecified, using default values
  5479  200006                     	org	2097158
  5480  200006  FF                 	db	255
  5481                           
  5482                           ;Config register IDLOC7 @ 0x200007
  5483                           ;	unspecified, using default values
  5484  200007                     	org	2097159
  5485  200007  FF                 	db	255
  5486                           
  5487                           	psect	config
  5488                           
  5489                           ; Padding undefined space
  5490  300000                     	org	3145728
  5491  300000  FF                 	db	255
  5492                           
  5493                           ;Config register CONFIG1H @ 0x300001
  5494                           ;	Oscillator Selection bits
  5495                           ;	OSC = INTIO2, Internal RC oscillator, port function on RA6 and port function on RA7
  5496                           ;	Fail-Safe Clock Monitor Enable bit
  5497                           ;	FSCM = OFF, Fail-Safe Clock Monitor disabled
  5498                           ;	Internal/External Switchover bit
  5499                           ;	IESO = OFF, Internal/External Switchover mode disabled
  5500  300001                     	org	3145729
  5501  300001  08                 	db	8
  5502                           
  5503                           ;Config register CONFIG2L @ 0x300002
  5504                           ;	Power-up Timer enable bit
  5505                           ;	PWRT = ON, PWRT enabled
  5506                           ;	Brown-out Reset enable bit
  5507                           ;	BOR = ON, Brown-out Reset enabled
  5508                           ;	Brown-out Reset Voltage bits
  5509                           ;	BORV = 27, VBOR set to 2.7V
  5510  300002                     	org	3145730
  5511  300002  0A                 	db	10
  5512                           
  5513                           ;Config register CONFIG2H @ 0x300003
  5514                           ;	Watchdog Timer Enable bit
  5515                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5516                           ;	Watchdog Timer Postscale Select bits
  5517                           ;	WDTPS = 32768, 1:32768
  5518  300003                     	org	3145731
  5519  300003  1E                 	db	30
  5520                           
  5521                           ; Padding undefined space
  5522  300004                     	org	3145732
  5523  300004  FF                 	db	255
  5524                           
  5525                           ;Config register CONFIG3H @ 0x300005
  5526                           ;	CCP2 MUX bit
  5527                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5528                           ;	PORTB A/D Enable bit
  5529                           ;	PBAD = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  5530                           ;	MCLR Pin Enable bit
  5531                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5532  300005                     	org	3145733
  5533  300005  81                 	db	129
  5534                           
  5535                           ;Config register CONFIG4L @ 0x300006
  5536                           ;	Stack Full/Underflow Reset Enable bit
  5537                           ;	STVR = ON, Stack full/underflow will cause Reset
  5538                           ;	Single-Supply ICSP Enable bit
  5539                           ;	LVP = OFF, Single-Supply ICSP disabled
  5540                           ;	Background Debugger Enable bit
  5541                           ;	DEBUG = 0x1, unprogrammed default
  5542  300006                     	org	3145734
  5543  300006  81                 	db	129
  5544                           
  5545                           ; Padding undefined space
  5546  300007                     	org	3145735
  5547  300007  FF                 	db	255
  5548                           
  5549                           ;Config register CONFIG5L @ 0x300008
  5550                           ;	Code Protection bit
  5551                           ;	CP0 = OFF, Block 0 (000200-0007FFh) not code-protected
  5552                           ;	Code Protection bit
  5553                           ;	CP1 = OFF, Block 1 (000800-000FFFh) not code-protected
  5554                           ;	Code Protection bit
  5555                           ;	CP2 = OFF, Block 2 (001000-0017FFh) not code-protected
  5556                           ;	Code Protection bit
  5557                           ;	CP3 = OFF, Block 3 (001800-001FFFh) not code-protected
  5558  300008                     	org	3145736
  5559  300008  0F                 	db	15
  5560                           
  5561                           ;Config register CONFIG5H @ 0x300009
  5562                           ;	Boot Block Code Protection bit
  5563                           ;	CPB = OFF, Boot block (000000-0001FFh) is not code-protected
  5564                           ;	Data EEPROM Code Protection bit
  5565                           ;	CPD = OFF, Data EEPROM is not code-protected
  5566  300009                     	org	3145737
  5567  300009  C0                 	db	192
  5568                           
  5569                           ;Config register CONFIG6L @ 0x30000A
  5570                           ;	Write Protection bit
  5571                           ;	WRT0 = OFF, Block 0 (000200-0007FFh) not write-protected
  5572                           ;	Write Protection bit
  5573                           ;	WRT1 = OFF, Block 1 (000800-000FFFh) not write-protected
  5574                           ;	Write Protection bit
  5575                           ;	WRT2 = OFF, Block 2 (001000-0017FFh) not write-protected
  5576                           ;	Write Protection bit
  5577                           ;	WRT3 = OFF, Block 3 (001800-001FFFh) not write-protected
  5578  30000A                     	org	3145738
  5579  30000A  0F                 	db	15
  5580                           
  5581                           ;Config register CONFIG6H @ 0x30000B
  5582                           ;	Configuration Register Write Protection bit
  5583                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5584                           ;	Boot Block Write Protection bit
  5585                           ;	WRTB = OFF, Boot block (000000-0001FFh) is not write-protected
  5586                           ;	Data EEPROM Write Protection bit
  5587                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5588  30000B                     	org	3145739
  5589  30000B  E0                 	db	224
  5590                           
  5591                           ;Config register CONFIG7L @ 0x30000C
  5592                           ;	Table Read Protection bit
  5593                           ;	EBTR0 = OFF, Block 0 (000200-0007FFh) not protected from table reads executed in other
      +                           blocks
  5594                           ;	Table Read Protection bit
  5595                           ;	EBTR1 = OFF, Block 1 (000800-000FFFh) not protected from table reads executed in other
      +                           blocks
  5596                           ;	Table Read Protection bit
  5597                           ;	EBTR2 = OFF, Block 2 (001000-0017FFh) not protected from table reads executed in other
      +                           blocks
  5598                           ;	Table Read Protection bit
  5599                           ;	EBTR3 = OFF, Block 3 (001800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5600  30000C                     	org	3145740
  5601  30000C  0F                 	db	15
  5602                           
  5603                           ;Config register CONFIG7H @ 0x30000D
  5604                           ;	Boot Block Table Read Protection bit
  5605                           ;	EBTRB = OFF, Boot block (000000-0001FFh) is not protected from table reads executed in
      +                           other blocks
  5606  30000D                     	org	3145741
  5607  30000D  40                 	db	64
  5608                           tosu	equ	0xFFF
  5609                           tosh	equ	0xFFE
  5610                           tosl	equ	0xFFD
  5611                           stkptr	equ	0xFFC
  5612                           pclatu	equ	0xFFB
  5613                           pclath	equ	0xFFA
  5614                           pcl	equ	0xFF9
  5615                           tblptru	equ	0xFF8
  5616                           tblptrh	equ	0xFF7
  5617                           tblptrl	equ	0xFF6
  5618                           tablat	equ	0xFF5
  5619                           prodh	equ	0xFF4
  5620                           prodl	equ	0xFF3
  5621                           indf0	equ	0xFEF
  5622                           postinc0	equ	0xFEE
  5623                           postdec0	equ	0xFED
  5624                           preinc0	equ	0xFEC
  5625                           plusw0	equ	0xFEB
  5626                           fsr0h	equ	0xFEA
  5627                           fsr0l	equ	0xFE9
  5628                           wreg	equ	0xFE8
  5629                           indf1	equ	0xFE7
  5630                           postinc1	equ	0xFE6
  5631                           postdec1	equ	0xFE5
  5632                           preinc1	equ	0xFE4
  5633                           plusw1	equ	0xFE3
  5634                           fsr1h	equ	0xFE2
  5635                           fsr1l	equ	0xFE1
  5636                           bsr	equ	0xFE0
  5637                           indf2	equ	0xFDF
  5638                           postinc2	equ	0xFDE
  5639                           postdec2	equ	0xFDD
  5640                           preinc2	equ	0xFDC
  5641                           plusw2	equ	0xFDB
  5642                           fsr2h	equ	0xFDA
  5643                           fsr2l	equ	0xFD9
  5644                           status	equ	0xFD8

Data Sizes:
    Strings     203
    Constant    88
    Data        5
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     19      74
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    cgrom_char@symbol	PTR unsigned char  size(2) Largest target is 8
		 -> symbol_4(CODE[8]), 

    lcdPrint@t	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_17(CODE[15]), STR_16(CODE[15]), STR_15(CODE[11]), STR_14(CODE[13]), 
		 -> STR_13(CODE[11]), STR_12(CODE[13]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[16]), STR_8(CODE[13]), STR_7(CODE[15]), STR_6(CODE[8]), 
		 -> STR_5(CODE[8]), STR_4(CODE[13]), STR_3(CODE[16]), STR_2(CODE[16]), 
		 -> STR_1(CODE[16]), 

    ds18b20_crc8@data_in	PTR unsigned char  size(1) Largest target is 9
		 -> ds18b20_readrom@temp_rom(COMRAM[8]), scratch(COMRAM[9]), 

    ds18b20_get_temp@minus	PTR unsigned char  size(1) Largest target is 1
		 -> minus_2(COMRAM[1]), minus_1(COMRAM[1]), 

    ds18b20_readTemp@time_flag	PTR unsigned char  size(1) Largest target is 1
		 -> time_flag(COMRAM[1]), 

    ds18b20_readTemp@timer_val	PTR unsigned char  size(1) Largest target is 1
		 -> timer_val(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_ds18b20_readrom
    _lcd_putc->_lcdWrite
    _lcdPrint->_lcd_gotoxy
    _lcd_gotoxy->_lcdWrite
    _ds18b20_readrom->_ds18b20_crc8
    _ds18b20_readTemp->_ds18b20_crc8
    ___lwmod->___lwdiv
    ___lbmod->___lbdiv
    _Main_init->_init_ds18b20
    _init_ds18b20->_write_byte
    _write_byte->_write_bit
    _initLCD->_clearLCD
    _clearLCD->_lcdWrite
    _cgrom_char->_lcdWrite
    _lcdWrite->_lcdNibble

Critical Paths under _myInt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInt in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   27386
                                             17 COMRAM     2     2      0
                           _Delay_ms
                          _Main_init
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                           _clearLCD
                   _ds18b20_get_temp
                   _ds18b20_readTemp
                    _ds18b20_readrom
                         _key_GetKey
                          _key_press
                           _lcdPrint
                         _lcd_gotoxy
                           _lcd_putc
                           _read_eep
                          _write_eep
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             1     1      0    1060
                                              4 COMRAM     1     1      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             6     4      2    5828
                                              7 COMRAM     6     4      2
                           _lcdWrite
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           3     2      1    3387
                                              4 COMRAM     3     2      1
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _key_press                                            1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _key_GetKey                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ds18b20_readrom                                     10    10      0    1746
                                              7 COMRAM    10    10      0
                           _Delay_ms
                       _ds18b20_crc8
                           _ow_reset
                          _read_byte
                         _write_byte
                          _write_eep
 ---------------------------------------------------------------------------------
 (1) _write_eep                                            2     1      1     576
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             5     3      2     198
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ds18b20_readTemp                                     8     6      2    1234
                                              7 COMRAM     8     6      2
                       _ds18b20_crc8
                           _ow_reset
                          _read_byte
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            4     4      0      60
                                              0 COMRAM     4     4      0
                           _read_bit
 ---------------------------------------------------------------------------------
 (3) _read_bit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_crc8                                         7     5      2     557
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _ds18b20_get_temp                                     6     4      2     423
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    2895
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    1986
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1    1375
                                              4 COMRAM     4     3      1
                            ___lbdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     770
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Main_init                                            0     0      0    4256
                         _cgrom_char
                            _initLCD
                       _init_ds18b20
 ---------------------------------------------------------------------------------
 (2) _init_ds18b20                                         4     4      0     839
                                              6 COMRAM     4     4      0
                           _ow_reset
                           _read_eep
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0      90
                                              1 COMRAM     5     5      0
                          _write_bit
 ---------------------------------------------------------------------------------
 (3) _write_bit                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_eep                                             2     0      2     554
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ow_reset                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0    2136
                                              5 COMRAM     1     1      0
                           _clearLCD
                          _lcdNibble
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _clearLCD                                             1     1      0    1038
                                              4 COMRAM     1     1      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (2) _cgrom_char                                           4     1      3    1281
                                              4 COMRAM     4     1      3
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (2) _lcdWrite                                             2     1      1    1038
                                              2 COMRAM     2     1      1
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myInt                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _Main_init
     _cgrom_char
       _lcdWrite
         _lcdNibble
     _initLCD
       _clearLCD
         _lcdWrite
           _lcdNibble
       _lcdNibble
       _lcdWrite
         _lcdNibble
     _init_ds18b20
       _ow_reset
       _read_eep
       _write_byte
         _write_bit
   ___lbdiv
   ___lbmod
     ___lbdiv (ARG)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _clearLCD
     _lcdWrite
       _lcdNibble
   _ds18b20_get_temp
   _ds18b20_readTemp
     _ds18b20_crc8
     _ow_reset
     _read_byte
       _read_bit
     _write_byte
       _write_bit
   _ds18b20_readrom
     _Delay_ms
     _ds18b20_crc8
     _ow_reset
     _read_byte
       _read_bit
     _write_byte
       _write_bit
     _write_eep
   _key_GetKey
   _key_press
   _lcdPrint
     _lcdWrite
       _lcdNibble
     _lcd_gotoxy
       _lcdWrite
         _lcdNibble
   _lcd_gotoxy
     _lcdWrite
       _lcdNibble
   _lcd_putc
     _lcdWrite
       _lcdNibble
   _read_eep
   _write_eep

 _myInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     13      4A       1       58.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A       7        0.0%
DATA                 0      0      4A       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Dec 03 13:48:43 2020

           myInt@snd_delay 0020                         PL2 0926                         PL4 0C7C  
                       PL6 0936                         PL8 093E                         u10 0D26  
                       u30 0D3C                         u50 0D54                         u28 0D28  
                       u70 0D68                         u48 0D3E                         u68 0D56  
                       u88 0D6A               lcdWrite@byte 0035                        PL10 094A  
                      PL20 0970                        PL12 0956                        PL30 0D8A  
                      PL22 097C                        PL14 0960                        PL40 09C2  
                      PL32 09A4                        PL24 0988                        PL16 096A  
                      PL50 09E8                        PL42 09CC                        PL34 09AE  
                      PL26 0990                        PL18 0BDA                        PL60 0C8A  
                      PL52 09EE                        PL44 09D4                        PL36 0E66  
                      PL28 099A                        PL62 0A0C                        PL54 09F6  
                      PL46 09DA                        PL38 09B8                        PL56 09FC  
                      PL48 09E2                        PL58 0A04               lcdWrite@type 0034  
                      l230 1198                        l311 0CC4                        l154 0444  
                      l156 058E                        l148 0276                        l149 050E  
                      l158 058A                        l319 0F4C                        l290 0B3A  
                      l451 0EEA                        l348 11AE                        l356 11F2  
                      l453 0EF4                        l278 0DBC                        l455 0F20  
                      l449 0EE2                        l945 0FB0                        l955 0FEE  
                      u124 107E                        u125 107A                        u234 1050  
                      u235 104C                        wreg 000FE8            lcdNibble@nibble 0033  
            write_eep@data 0032                lcd_gotoxy@x 0037                lcd_gotoxy@y 0036  
                     l1403 1058                       l1237 11DA                       l2221 0DBA  
                     l2301 0F5A                       l1271 106E                       l2231 0DBE  
                     l2165 11B0                       l2309 0F66                       l2413 0B3C  
                     l1533 0F0C                       l2423 0B48                       l2191 1186  
                     l2511 0E1A                       l1527 0EF6                       l2185 11F4  
                     l2603 0FA6                       l2611 0FC6                       l2451 0BB2  
                     l2195 115E                       l1539 0F12                       l2371 0BEA  
                     l2613 0FCE                       l2293 0F3C                       l2437 0B6C  
                     l2525 0E3C                       l2279 10E4                       l2551 10B4  
                     l1399 1038                       l2471 0BC4                       l2383 0C34  
                     l2375 0C02                       l2391 0C76                       l2703 03BA  
                     l2289 0F2C                       l2449 0BAA                       l2537 0E64  
                     l2377 0C0C                       l2801 0696                       l2705 041A  
                     l2547 10AE                       l2563 10D0                       l2571 113E  
                     l2619 0FE4                       l2395 0B0E                       l2387 0C62  
                     l2379 0C18                       l2731 05A2                       l2651 00CC  
                     l2485 0CDA                       l2389 0C72                       l2725 0592  
                     l2709 0500                       l2559 10C8                       l2591 0F80  
                     l2807 06AE                       l2671 012A                       l2663 0118  
                     l2593 0F88                       l2841 0716                       l2825 06E0  
                     l2817 06D0                       l2753 05E0                       l2745 05D0  
                     l2579 1154                       l2907 0810                       l2691 0332  
                     l2675 0162                       l2909 081C                       l2853 0740  
                     l2669 0122                       l2935 087E                       l2927 0868  
                     l2919 0858                       l2871 078C                       l2863 077C  
                     l2759 060E                       l2687 01EC                       l2953 08CA  
                     l2945 08BA                       l2785 0664                       l2777 0640  
                     l2769 0630                       l2689 024C                       l2963 08EC  
                     l2787 0668                       l2879 07A2                       l2967 08F8  
                     l2897 07EE                       l2889 07DE                       STR_1 1F43  
                     STR_2 1F53                       STR_3 1F63                       STR_4 1FC9  
                     STR_5 1FF6                       STR_6 1FEE                       STR_7 1F73  
                     STR_8 1FD6                       STR_9 1F33           ow_reset@presence 0032  
          _ds18b20_readrom 0E08                       u2107 118C                       u1500 0F8C  
                     u1420 0E2A                       u2117 105A                       _LATA 000F89  
                     _LATB 000F8A                       u2207 0A3E                       u2127 1228  
                     _LATC 000F8B                       u1600 0356                       u2217 0A4E  
                     u2137 109A                       u1530 0FD2                       u2307 1210  
                     u2227 0A64                       u2147 11DC                       u1460 10B8  
                     u2317 11B2                       u2237 0A78                       u2157 110C  
                     u1390 0CBA                       u2327 0D78                       u2247 0A8C  
                     u2167 1118                       u1640 054A                       u2337 0D82  
                     u2257 0AA0                       u2177 1128                       u2097 0BF6  
                     u1810 06A6                       u1650 0554                       u2267 0AB8  
                     u2187 0A1E                       u1580 0188                       u2277 0AD0  
                     u2197 0A2E                       u1670 0580                       u2287 0AE4  
                     u1680 058A                       u2297 0AFC                       u1825 06A8  
                     _main 005E                       fsr2h 000FDA                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 004B  
            write_byte@val 0035                       prodh 000FF4                       prodl 000FF3  
                     start 005A               ___param_bank 000000           _ds18b20_get_temp 0C90  
         _ds18b20_readTemp 0B0C                      ?_main 0032            __end_of___lbdiv 10D4  
                    _EEADR 000FA9                      STR_10 1F82                      STR_11 1FA0  
                    STR_12 1FBC                      STR_13 1FE3                      STR_14 1FAF  
                    STR_15 1FE3                      STR_16 1F91                      STR_17 1F91  
          __end_of___lbmod 115C                      _T1CON 000FCD            __end_of___lwdiv 0FBA  
          __end_of___lwmod 0FF8                      i2l243 0054                      i2l244 0048  
                    i2l248 0056                      _TMR0H 000FD7                      _TMR1H 000FCF  
                    _TMR0L 000FD6                      _TMR1L 000FCE                      _PORTA 000F80  
                    _PORTB 000F81                      _PORTC 000F82                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94            __end_of_initLCD 0B0C  
                    _fract 1F1B                      _myInt 0008             write_byte@temp 0036  
           __pbitbssCOMRAM 0250                      tablat 000FF5                      ttemp5 004C  
                    ttemp6 004F                      ttemp7 0053                      status 000FD8  
                    wtemp8 004C            ___lbdiv@divisor 0032            ___lbdiv@counter 0034  
         __end_of_Delay_ms 11A4            write_bit@bitval 0032            __initialization 0FF8  
          ds18b20_crc8@crc 0038               __end_of_main 0926        ds18b20_crc8@data_in 0032  
                   ??_main 0043              __activetblptr 000002              ?_init_ds18b20 0032  
  __end_of_ds18b20_readrom 0E66                     ?_myInt 0032                     _EEDATA 000FA8  
                   _EECON2 000FA7         __size_of_Main_init 0068                     i2l2141 0028  
                   i2l2157 004A           __end_of_clearLCD 121C           __end_of_lcdPrint 0C7C  
         __end_of_lcdWrite 11C8           __end_of_lcd_putc 1250                  ??___lbdiv 0033  
                ??___lbmod 0037                  ??___lwdiv 0036                  ??___lwmod 003D  
                   _dq_num 0045              Delay_ms@delay 0032           __end_of_read_eep 1244  
         __end_of_read_bit 1232                     clear_0 1020                     _select 0047  
                   _rom_dq 0001             ??_init_ds18b20 0038                  ??_initLCD 0037  
             __pdataCOMRAM 0045               __mediumconst 1EDA           __end_of_ow_reset 1136  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
         ___lbdiv@dividend 0033           __end_of_symbol_4 1F33            ___lbmod@divisor 0036  
               __accesstop 0080    __end_of__initialization 1026            ___lbmod@counter 0038  
            ___rparam_used 000001           write_eep@address 0033           ds18b20_crc8@data 0035  
           __pcstackCOMRAM 0032              __end_of_fract 1F2B              __end_of_myInt 005A  
        __end_of_Main_init 0ED8     ds18b20_crc8@loop_count 0037                 __end_ofPL2 0936  
               __end_ofPL4 0C8A                 __end_ofPL6 093E                 __end_ofPL8 094A  
         ___lbdiv@quotient 0035              ?_ds18b20_crc8 0032         __size_of_lcdNibble 0070  
     ds18b20_readTemp@temp 003D           ?_ds18b20_readrom 0032                  ?_Delay_ms 0032  
        lcd_gotoxy@address 0038                    ??_myInt 0032   __end_of_ds18b20_get_temp 0D1A  
 __end_of_ds18b20_readTemp 0BDA         __size_of_key_press 004E         __size_of_read_byte 0036  
  ds18b20_crc8@bit_counter 0034           ds18b20_readrom@i 0042        __end_of_HD44780_CYR 1F1B  
           ??_ds18b20_crc8 0034                 _cgrom_char 10D4                  ?_clearLCD 0032  
               ??_Delay_ms 0034                 _lcd_gotoxy 11E6                  ?_lcdPrint 0039  
                ?_lcdWrite 0034                  ?_lcd_putc 0032                  ?_read_bit 0032  
                ?_read_eep 0032                 _key_GetKey 1250       __end_of_init_ds18b20 0E08  
        __end_of_lcdNibble 0D8A         __size_of_write_bit 001E         __size_of_write_eep 0024  
                  __Hparam 0000                    __Lparam 0000                  ?_ow_reset 0032  
                  ___lbdiv 10A0                    ___lbmod 1136                    ___lwdiv 0F70  
                  ___lwmod 0FBA                    __pcinit 0FF8    ds18b20_readrom@temp_rom 0039  
                  __ramtop 0200                    __ptext0 005E                    __ptext1 1244  
                  __ptext2 0BE8                    __ptext3 11E6                    __ptext4 0ED8  
                  __ptext5 1250                    __ptext6 0E08                    __ptext7 115C  
                  __ptext8 1180                    __ptext9 0B0C                  _T0CONbits 000FD5  
                  _initLCD 0A14                  _T1CONbits 000FCD          __end_of_key_press 0F26  
        __end_of_read_byte 106A                 ??_clearLCD 0036                    _minus_1 0049  
                  _minus_2 0048                    _scratch 0027                    _sub_sel 0025  
               ??_lcdPrint 003B                 ??_lcdWrite 0035                 ??_lcd_putc 0036  
     end_of_initialization 1026                  Delay_ms@i 0035               key_press@key 0032  
            __Lmediumconst 1EDA                 ??_read_eep 0034                 ??_read_bit 0032  
              _HD44780_CYR 1EDB                 ??_ow_reset 0032                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc2 000FDE  
               _temp_ready 0011               read_byte@val 0034        ds18b20_get_temp@tmp 0035  
              ?_cgrom_char 0036                  _PORTAbits 000F80                  _PORTCbits 000F82  
            key_GetKey@key 0032          __end_of_write_bit 11E6          __end_of_write_eep 1180  
         ___lbmod@dividend 0037                  _TRISAbits 000F92                ?_lcd_gotoxy 0036  
              ___lbmod@rem 0039       __end_of_ds18b20_crc8 0F70                ?_key_GetKey 0032  
            __pidataCOMRAM 125A                 _write_byte 106A                  _Main_init 0E70  
              __end_ofPL10 0956                __end_ofPL20 097C                __end_ofPL12 0960  
              __end_ofPL30 0D94                __end_ofPL22 0988                __end_ofPL14 096A  
              __end_ofPL40 09CC                __end_ofPL32 09AE                __end_ofPL24 0990  
              __end_ofPL16 0970                __end_ofPL50 09EE                __end_ofPL42 09D4  
              __end_ofPL34 09B8                __end_ofPL26 099A                __end_ofPL18 0BE8  
              __end_ofPL60 0C90                __end_ofPL52 09F6                __end_ofPL44 09DA  
              __end_ofPL36 0E70                __end_ofPL28 09A4                __end_ofPL62 0A14  
              __end_ofPL54 09FC                __end_ofPL46 09E2                __end_ofPL38 09C2  
              __end_ofPL56 0A04                __end_ofPL48 09E8                __end_ofPL58 0A0C  
      start_initialization 0FF8          __size_of_Delay_ms 0024      __size_of_init_ds18b20 0074  
        ?_ds18b20_get_temp 0032         ??_ds18b20_get_temp 0034        __size_of_cgrom_char 0032  
        ?_ds18b20_readTemp 0039         ??_ds18b20_readTemp 003B   ds18b20_crc8@feedback_bit 0036  
      __size_of_lcd_gotoxy 001C            read_eep@address 0032                 read_byte@i 0035  
               ?_Main_init 0032        __size_of_key_GetKey 000A               _init_ds18b20 0D94  
              __pbssCOMRAM 0001          __size_of_clearLCD 001A          __size_of_lcdPrint 0094  
        __size_of_lcdWrite 0024   __size_of_ds18b20_readrom 005E          __size_of_lcd_putc 000C  
    ds18b20_crc8@num_bytes 0033          ds18b20_readTemp@i 0040          ds18b20_readTemp@j 003F  
        __size_of_read_eep 0012          __size_of_read_bit 0016           ___lwdiv@dividend 0032  
                __pintcode 0008              __pmediumconst 1EDA                  _lcdNibble 0D1A  
                 ?___lbdiv 0032                   ?___lbmod 0036                   ?___lwdiv 0032  
                 ?___lwmod 0039          __size_of_ow_reset 0030                ?_write_byte 0032  
                 ?_initLCD 0032      __size_of_ds18b20_crc8 004A           ___lwdiv@quotient 0036  
                _key_press 0ED8             __size_of_myInt 0052                  _read_byte 1034  
                 _LATCbits 000F8B                  _temp1_fix 0019                  _temp2_fix 0017  
                 _PIE1bits 000F9D                   _PIR1bits 000F9E              _set_t_dq1_dwn 0023  
            _set_t_dq2_dwn 0021                 ?_lcdNibble 0032                  _time_flag 0030  
                _timer_val 0031                  lcdPrint@t 0039               ??_cgrom_char 0039  
               _ADCON1bits 000FC1               _ds18b20_crc8 0F26                ??_Main_init 003C  
                _sound_yes 0250                  lcd_putc@c 0036                write_byte@i 0037  
                 _Delay_ms 1180               ??_lcd_gotoxy 0037                 ?_key_press 0032  
                _write_bit 11C8                  _write_eep 115C                _INTCON2bits 000FF1  
               ?_read_byte 0032                  copy_data0 100C              init_ds18b20@i 003B  
            init_ds18b20@q 003A        __size_of_write_byte 0036               ??_key_GetKey 0032  
               _EECON1bits 000FA6         __end_of_cgrom_char 1106                   __Hrparam 0000  
                 __Lrparam 0000          ??_ds18b20_readrom 0039         __end_of_lcd_gotoxy 1202  
           key_press@count 0015           __size_of___lbdiv 0034           __size_of___lbmod 0026  
         __size_of___lwdiv 004A           __size_of___lwmod 003E              _temperature_1 001D  
            _temperature_2 001B           __size_of_initLCD 00F8                   _clearLCD 1202  
              _key_pressed 001F         __end_of_key_GetKey 125A            ___lwdiv@divisor 0034  
          ___lwdiv@counter 0038                   __ptext10 1034                   __ptext11 121C  
                 __ptext20 106A                   __ptext12 0F26                   __ptext21 11C8  
                 __ptext13 0C90                   __ptext22 1232                   __ptext14 0FBA  
                 __ptext23 1106                   __ptext15 0F70                   __ptext24 0A14  
                 __ptext16 1136                   __ptext25 1202                   __ptext17 10A0  
                 __ptext26 10D4                   __ptext18 0E70                   __ptext27 11A4  
                 __ptext19 0D94                   __ptext28 0D1A                   _lcdPrint 0BE8  
                 _lcdWrite 11A4                 ?_write_bit 0032                 ?_write_eep 0032  
                 _en_sound 0251                   _lcd_putc 1244     ds18b20_get_temp@num_dq 0034  
            __size_of_main 08C8                   _read_bit 121C                   _read_eep 1232  
    ds18b20_readrom@num_dq 0041                   _read_key 0252          cgrom_char@address 0038  
             _set_t_dq1_up 0024               _set_t_dq2_up 0022                ??_lcdNibble 0032  
                 _ow_reset 1106                   int$flags 004B                   _sub_main 0046  
__size_of_ds18b20_get_temp 008A                   _symbol_4 1F2B  __size_of_ds18b20_readTemp 00CE  
               _INTCONbits 000FF2                ??_key_press 0032                ??_read_byte 0032  
                 intlevel2 0000           ___lwmod@dividend 0039      ds18b20_get_temp@minus 0032  
               _OSCCONbits 000FD3  ds18b20_readTemp@time_flag 0039  ds18b20_readTemp@timer_val 003A  
         cgrom_char@symbol 0036               ??_write_byte 0033            ___lwmod@divisor 003B  
     ds18b20_get_temp@temp 0036            ___lwmod@counter 003D                cgrom_char@i 0039  
              ??_write_eep 0033                ??_write_bit 0032                _pressed_key 0026  
       __end_of_write_byte 10A0  
