

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Dec 11 14:35:10 2020

Microchip MPLAB XC8 C Compiler v2.31 (Pro license) build 20201012212115 Og9s 
     1                           	processor	18F2320
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47                           	psect	pa_nodes0,global,class=CODE,delta=1
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F2320 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  00159E                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for _temperature_2
    89  00159E  7FFF               	dw	32767
    90                           
    91                           ;initializer for _temperature_1
    92  0015A0  7FFF               	dw	32767
    93                           
    94                           ;initializer for _dq_num
    95  0015A2  01                 	db	1
    96                           
    97                           ;initializer for _sub_main
    98  0015A3  01                 	db	1
    99                           
   100                           ;initializer for _select
   101  0015A4  01                 	db	1
   102                           
   103                           ;initializer for _minus_2
   104  0015A5  2B                 	db	43
   105                           
   106                           ;initializer for _minus_1
   107  0015A6  2B                 	db	43
   108                           
   109                           	psect	mediumconst
   110  001EB6                     __pmediumconst:
   111                           	callstack 0
   112  001EB6  00                 	db	0
   113  001EB7                     _HD44780_CYR:
   114                           	callstack 0
   115  001EB7  41                 	db	65
   116  001EB8  A0                 	db	160
   117  001EB9  42                 	db	66
   118  001EBA  A1                 	db	161
   119  001EBB  E0                 	db	224
   120  001EBC  45                 	db	69
   121  001EBD  A3                 	db	163
   122  001EBE  A4                 	db	164
   123  001EBF  A5                 	db	165
   124  001EC0  A6                 	db	166
   125  001EC1  4B                 	db	75
   126  001EC2  A7                 	db	167
   127  001EC3  4D                 	db	77
   128  001EC4  48                 	db	72
   129  001EC5  4F                 	db	79
   130  001EC6  A8                 	db	168
   131  001EC7  50                 	db	80
   132  001EC8  43                 	db	67
   133  001EC9  54                 	db	84
   134  001ECA  A9                 	db	169
   135  001ECB  AA                 	db	170
   136  001ECC  58                 	db	88
   137  001ECD  E1                 	db	225
   138  001ECE  AB                 	db	171
   139  001ECF  AC                 	db	172
   140  001ED0  E2                 	db	226
   141  001ED1  AD                 	db	173
   142  001ED2  AE                 	db	174
   143  001ED3  62                 	db	98
   144  001ED4  AF                 	db	175
   145  001ED5  B0                 	db	176
   146  001ED6  B1                 	db	177
   147  001ED7  61                 	db	97
   148  001ED8  B2                 	db	178
   149  001ED9  B3                 	db	179
   150  001EDA  B4                 	db	180
   151  001EDB  E3                 	db	227
   152  001EDC  65                 	db	101
   153  001EDD  B6                 	db	182
   154  001EDE  B7                 	db	183
   155  001EDF  B8                 	db	184
   156  001EE0  B9                 	db	185
   157  001EE1  BA                 	db	186
   158  001EE2  BB                 	db	187
   159  001EE3  BC                 	db	188
   160  001EE4  BD                 	db	189
   161  001EE5  6F                 	db	111
   162  001EE6  BE                 	db	190
   163  001EE7  70                 	db	112
   164  001EE8  63                 	db	99
   165  001EE9  BF                 	db	191
   166  001EEA  79                 	db	121
   167  001EEB  E4                 	db	228
   168  001EEC  78                 	db	120
   169  001EED  E5                 	db	229
   170  001EEE  C0                 	db	192
   171  001EEF  C1                 	db	193
   172  001EF0  E6                 	db	230
   173  001EF1  C2                 	db	194
   174  001EF2  C3                 	db	195
   175  001EF3  C4                 	db	196
   176  001EF4  C5                 	db	197
   177  001EF5  C6                 	db	198
   178  001EF6  C7                 	db	199
   179  001EF7                     __end_of_HD44780_CYR:
   180                           	callstack 0
   181  001EF7                     _fract:
   182                           	callstack 0
   183  001EF7  00                 	db	0
   184  001EF8  01                 	db	1
   185  001EF9  01                 	db	1
   186  001EFA  02                 	db	2
   187  001EFB  02                 	db	2
   188  001EFC  03                 	db	3
   189  001EFD  04                 	db	4
   190  001EFE  04                 	db	4
   191  001EFF  05                 	db	5
   192  001F00  06                 	db	6
   193  001F01  06                 	db	6
   194  001F02  07                 	db	7
   195  001F03  07                 	db	7
   196  001F04  08                 	db	8
   197  001F05  09                 	db	9
   198  001F06  09                 	db	9
   199  001F07                     __end_of_fract:
   200                           	callstack 0
   201  001F07                     _symbol_4:
   202                           	callstack 0
   203  001F07  06                 	db	6
   204  001F08  09                 	db	9
   205  001F09  09                 	db	9
   206  001F0A  06                 	db	6
   207  001F0B  00                 	db	0
   208  001F0C  00                 	db	0
   209  001F0D  00                 	db	0
   210  001F0E  00                 	db	0
   211  001F0F                     __end_of_symbol_4:
   212                           	callstack 0
   213  0000                     _EECON2	set	4007
   214  0000                     _EEDATA	set	4008
   215  0000                     _EEADR	set	4009
   216  0000                     _EECON1bits	set	4006
   217  0000                     _TRISAbits	set	3986
   218  0000                     _PORTCbits	set	3970
   219  0000                     _T1CONbits	set	4045
   220  0000                     _PIR1bits	set	3998
   221  0000                     _PIE1bits	set	3997
   222  0000                     _INTCON2bits	set	4081
   223  0000                     _INTCONbits	set	4082
   224  0000                     _TMR0L	set	4054
   225  0000                     _TMR0H	set	4055
   226  0000                     _T0CONbits	set	4053
   227  0000                     _TMR1L	set	4046
   228  0000                     _TMR1H	set	4047
   229  0000                     _T1CON	set	4045
   230  0000                     _PORTAbits	set	3968
   231  0000                     _ADCON1bits	set	4033
   232  0000                     _OSCCONbits	set	4051
   233  0000                     _TRISC	set	3988
   234  0000                     _LATC	set	3979
   235  0000                     _PORTC	set	3970
   236  0000                     _TRISB	set	3987
   237  0000                     _LATB	set	3978
   238  0000                     _TRISA	set	3986
   239  0000                     _LATA	set	3977
   240  0000                     _PORTA	set	3968
   241  0000                     _LATCbits	set	3979
   242  0000                     _PORTB	set	3969
   243  001F0F                     STR_10:
   244  001F0F  20                 	db	32
   245  001F10  CA                 	db	-54
   246  001F11  EE                 	db	-18
   247  001F12  E4                 	db	-28
   248  001F13  20                 	db	32
   249  001F14  EF                 	db	-17
   250  001F15  F0                 	db	-16
   251  001F16  EE                 	db	-18
   252  001F17  F7                 	db	-9
   253  001F18  E8                 	db	-24
   254  001F19  F2                 	db	-14
   255  001F1A  E0                 	db	-32
   256  001F1B  ED                 	db	-19
   257  001F1C  EE                 	db	-18
   258  001F1D  20                 	db	32
   259  001F1E  00                 	db	0
   260  001F1F                     STR_18:
   261  001F1F  D2                 	db	-46
   262  001F20  E5                 	db	-27
   263  001F21  EC                 	db	-20
   264  001F22  EF                 	db	-17
   265  001F23  20                 	db	32
   266  001F24  E4                 	db	-28
   267  001F25  F0                 	db	-16
   268  001F26  E1                 	db	-31
   269  001F27  3A                 	db	58	;':'
   270  001F28  20                 	db	32
   271  001F29  20                 	db	32
   272  001F2A  20                 	db	32
   273  001F2B  20                 	db	32
   274  001F2C  20                 	db	32
   275  001F2D  20                 	db	32
   276  001F2E  00                 	db	0
   277  001F2F                     STR_1:
   278  001F2F  2D                 	db	45
   279  001F30  2D                 	db	45
   280  001F31  2D                 	db	45
   281  001F32  D2                 	db	-46
   282  001F33  C5                 	db	-59
   283  001F34  D0                 	db	-48
   284  001F35  CC                 	db	-52
   285  001F36  CE                 	db	-50
   286  001F37  CC                 	db	-52
   287  001F38  C5                 	db	-59
   288  001F39  D2                 	db	-46
   289  001F3A  D0                 	db	-48
   290  001F3B  2D                 	db	45
   291  001F3C  2D                 	db	45
   292  001F3D  2D                 	db	45
   293  001F3E  00                 	db	0
   294  001F3F                     STR_2:
   295  001F3F  28                 	db	40
   296  001F40  63                 	db	99	;'c'
   297  001F41  29                 	db	41
   298  001F42  49                 	db	73	;'I'
   299  001F43  76                 	db	118	;'v'
   300  001F44  61                 	db	97	;'a'
   301  001F45  6E                 	db	110	;'n'
   302  001F46  5F                 	db	95	;'_'
   303  001F47  66                 	db	102	;'f'
   304  001F48  64                 	db	100	;'d'
   305  001F49  20                 	db	32
   306  001F4A  76                 	db	118	;'v'
   307  001F4B  31                 	db	49	;'1'
   308  001F4C  2E                 	db	46
   309  001F4D  30                 	db	48	;'0'
   310  001F4E  00                 	db	0
   311  001F4F                     STR_3:
   312  001F4F  C4                 	db	-60
   313  001F50  E0                 	db	-32
   314  001F51  F2                 	db	-14
   315  001F52  F7                 	db	-9
   316  001F53  E8                 	db	-24
   317  001F54  EA                 	db	-22
   318  001F55  20                 	db	32
   319  001F56  31                 	db	49	;'1'
   320  001F57  2C                 	db	44
   321  001F58  20                 	db	32
   322  001F59  E0                 	db	-32
   323  001F5A  E1                 	db	-31
   324  001F5B  EE                 	db	-18
   325  001F5C  20                 	db	32
   326  001F5D  32                 	db	50	;'2'
   327  001F5E  00                 	db	0
   328  001F5F                     STR_9:
   329  001F5F  20                 	db	32
   330  001F60  20                 	db	32
   331  001F61  31                 	db	49	;'1'
   332  001F62  20                 	db	32
   333  001F63  20                 	db	32
   334  001F64  20                 	db	32
   335  001F65  20                 	db	32
   336  001F66  20                 	db	32
   337  001F67  32                 	db	50	;'2'
   338  001F68  20                 	db	32
   339  001F69  20                 	db	32
   340  001F6A  20                 	db	32
   341  001F6B  31                 	db	49	;'1'
   342  001F6C  2D                 	db	45
   343  001F6D  32                 	db	50	;'2'
   344  001F6E  00                 	db	0
   345  001F6F                     STR_8:
   346  001F6F  CF                 	db	-49
   347  001F70  EE                 	db	-18
   348  001F71  F0                 	db	-16
   349  001F72  69                 	db	105	;'i'
   350  001F73  E3                 	db	-29
   351  001F74  20                 	db	32
   352  001F75  D1                 	db	-47
   353  001F76  E8                 	db	-24
   354  001F77  E3                 	db	-29
   355  001F78  ED                 	db	-19
   356  001F79  2E                 	db	46
   357  001F7A  20                 	db	32
   358  001F7B  4C                 	db	76	;'L'
   359  001F7C  65                 	db	101	;'e'
   360  001F7D  64                 	db	100	;'d'
   361  001F7E  00                 	db	0
   362  001F7F                     STR_17:
   363  001F7F  D2                 	db	-46
   364  001F80  E5                 	db	-27
   365  001F81  EC                 	db	-20
   366  001F82  EF                 	db	-17
   367  001F83  20                 	db	32
   368  001F84  CD                 	db	-51
   369  001F85  E8                 	db	-24
   370  001F86  E7                 	db	-25
   371  001F87  3A                 	db	58	;':'
   372  001F88  20                 	db	32
   373  001F89  20                 	db	32
   374  001F8A  20                 	db	32
   375  001F8B  20                 	db	32
   376  001F8C  20                 	db	32
   377  001F8D  00                 	db	0
   378  001F8E                     STR_12:
   379  001F8E  CA                 	db	-54
   380  001F8F  EE                 	db	-18
   381  001F90  EB                 	db	-21
   382  001F91  28                 	db	40
   383  001F92  31                 	db	49	;'1'
   384  001F93  29                 	db	41
   385  001F94  2F                 	db	47
   386  001F95  CA                 	db	-54
   387  001F96  F3                 	db	-13
   388  001F97  E1                 	db	-31
   389  001F98  28                 	db	40
   390  001F99  32                 	db	50	;'2'
   391  001F9A  29                 	db	41
   392  001F9B  3A                 	db	58	;':'
   393  001F9C  00                 	db	0
   394  001F9D                     STR_11:
   395  001F9D  20                 	db	32
   396  001F9E  20                 	db	32
   397  001F9F  20                 	db	32
   398  001FA0  C3                 	db	-61
   399  001FA1  F0                 	db	-16
   400  001FA2  E0                 	db	-32
   401  001FA3  ED                 	db	-19
   402  001FA4  E8                 	db	-24
   403  001FA5  F6                 	db	-10
   404  001FA6  69                 	db	105	;'i'
   405  001FA7  20                 	db	32
   406  001FA8  20                 	db	32
   407  001FA9  20                 	db	32
   408  001FAA  00                 	db	0
   409  001FAB                     STR_15:
   410  001FAB  20                 	db	32
   411  001FAC  20                 	db	32
   412  001FAD  20                 	db	32
   413  001FAE  20                 	db	32
   414  001FAF  CA                 	db	-54
   415  001FB0  F3                 	db	-13
   416  001FB1  E1                 	db	-31
   417  001FB2  EE                 	db	-18
   418  001FB3  E2                 	db	-30
   419  001FB4  E0                 	db	-32
   420  001FB5  20                 	db	32
   421  001FB6  20                 	db	32
   422  001FB7  00                 	db	0
   423  001FB8                     STR_13:
   424  001FB8  20                 	db	32
   425  001FB9  20                 	db	32
   426  001FBA  20                 	db	32
   427  001FBB  20                 	db	32
   428  001FBC  CA                 	db	-54
   429  001FBD  EE                 	db	-18
   430  001FBE  EB                 	db	-21
   431  001FBF  EE                 	db	-18
   432  001FC0  ED                 	db	-19
   433  001FC1  E0                 	db	-32
   434  001FC2  20                 	db	32
   435  001FC3  20                 	db	32
   436  001FC4  00                 	db	0
   437  001FC5                     STR_4:
   438  001FC5  C2                 	db	-62
   439  001FC6  E8                 	db	-24
   440  001FC7  E1                 	db	-31
   441  001FC8  69                 	db	105	;'i'
   442  001FC9  F0                 	db	-16
   443  001FCA  20                 	db	32
   444  001FCB  31                 	db	49	;'1'
   445  001FCC  38                 	db	56	;'8'
   446  001FCD  42                 	db	66	;'B'
   447  001FCE  32                 	db	50	;'2'
   448  001FCF  30                 	db	48	;'0'
   449  001FD0  3A                 	db	58	;':'
   450  001FD1  00                 	db	0
   451  001FD2                     STR_14:
   452  001FD2  D2                 	db	-46
   453  001FD3  E5                 	db	-27
   454  001FD4  EC                 	db	-20
   455  001FD5  EF                 	db	-17
   456  001FD6  20                 	db	32
   457  001FD7  C2                 	db	-62
   458  001FD8  E5                 	db	-27
   459  001FD9  F0                 	db	-16
   460  001FDA  F5                 	db	-11
   461  001FDB  3A                 	db	58	;':'
   462  001FDC  00                 	db	0
   463  001FDD                     STR_16:
   464  001FDD  D2                 	db	-46
   465  001FDE  E5                 	db	-27
   466  001FDF  EC                 	db	-20
   467  001FE0  EF                 	db	-17
   468  001FE1  20                 	db	32
   469  001FE2  F6                 	db	-10
   470  001FE3  69                 	db	105	;'i'
   471  001FE4  EB                 	db	-21
   472  001FE5  69                 	db	105	;'i'
   473  001FE6  3A                 	db	58	;':'
   474  001FE7  00                 	db	0
   475  001FE8                     STR_6:
   476  001FE8  CA                 	db	-54
   477  001FE9  F3                 	db	-13
   478  001FEA  E1                 	db	-31
   479  001FEB  EE                 	db	-18
   480  001FEC  E2                 	db	-30
   481  001FED  E0                 	db	-32
   482  001FEE  3A                 	db	58	;':'
   483  001FEF  00                 	db	0
   484  001FF0                     STR_5:
   485  001FF0  CA                 	db	-54
   486  001FF1  EE                 	db	-18
   487  001FF2  EB                 	db	-21
   488  001FF3  EE                 	db	-18
   489  001FF4  ED                 	db	-19
   490  001FF5  E0                 	db	-32
   491  001FF6  3A                 	db	58	;':'
   492  001FF7  00                 	db	0
   493  001FF8                     STR_7:
   494  001FF8  CF                 	db	-49
   495  001FF9  EE                 	db	-18
   496  001FFA  F0                 	db	-16
   497  001FFB  69                 	db	105	;'i'
   498  001FFC  E3                 	db	-29
   499  001FFD  3A                 	db	58	;':'
   500  001FFE  00                 	db	0
   501  001FFF  00                 	db	0	; dummy byte at the end
   502  0000                     
   503                           ; #config settings
   504                           
   505                           	psect	cinit
   506  00133C                     __pcinit:
   507                           	callstack 0
   508  00133C                     start_initialization:
   509                           	callstack 0
   510  00133C                     __initialization:
   511                           	callstack 0
   512                           
   513                           ; Initialize objects allocated to COMRAM (9 bytes)
   514                           ; load TBLPTR registers with __pidataCOMRAM
   515  00133C  0E9E               	movlw	low __pidataCOMRAM
   516  00133E  6EF6               	movwf	tblptrl,c
   517  001340  0E15               	movlw	high __pidataCOMRAM
   518  001342  6EF7               	movwf	tblptrh,c
   519  001344  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   520  001346  6EF8               	movwf	tblptru,c
   521  001348  EE00  F042         	lfsr	0,__pdataCOMRAM
   522  00134C  EE10 F009          	lfsr	1,9
   523  001350                     copy_data0:
   524  001350  0009               	tblrd		*+
   525  001352  CFF5 FFEE          	movff	tablat,postinc0
   526  001356  50E5               	movf	postdec1,w,c
   527  001358  50E1               	movf	fsr1l,w,c
   528  00135A  E1FA               	bnz	copy_data0
   529                           
   530                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   531  00135C  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   532                           
   533                           ; Clear objects allocated to COMRAM (45 bytes)
   534  00135E  EE00  F001         	lfsr	0,__pbssCOMRAM
   535  001362  0E2D               	movlw	45
   536  001364                     clear_0:
   537  001364  6AEE               	clrf	postinc0,c
   538  001366  06E8               	decf	wreg,f,c
   539  001368  E1FD               	bnz	clear_0
   540  00136A                     end_of_initialization:
   541                           	callstack 0
   542  00136A                     __end_of__initialization:
   543                           	callstack 0
   544  00136A  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   545  00136C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   546  00136E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   547  001370  6EF8               	movwf	tblptru,c
   548  001372  0100               	movlb	0
   549  001374  EF49  F000         	goto	_main	;jump to C main() function
   550                           
   551                           	psect	bitbssCOMRAM
   552  000258                     __pbitbssCOMRAM:
   553                           	callstack 0
   554  000258                     _snd_b_b:
   555                           	callstack 0
   556  000258                     	ds	1
   557  000259                     _snd_k_b:
   558                           	callstack 0
   559  000259                     	ds	1
   560  00025A                     _snd_all:
   561                           	callstack 0
   562  00025A                     	ds	1
   563  00025B                     _snd_b:
   564                           	callstack 0
   565  00025B                     	ds	1
   566  00025C                     _snd_k:
   567                           	callstack 0
   568  00025C                     	ds	1
   569  00025D                     _sound_yes:
   570                           	callstack 0
   571  00025D                     	ds	1
   572  00025E                     _en_sound:
   573                           	callstack 0
   574  00025E                     	ds	1
   575  00025F                     _read_key:
   576                           	callstack 0
   577  00025F                     	ds	1
   578                           
   579                           	psect	bssCOMRAM
   580  000001                     __pbssCOMRAM:
   581                           	callstack 0
   582  000001                     _rom_dq:
   583                           	callstack 0
   584  000001                     	ds	16
   585  000011                     _temp_ready:
   586                           	callstack 0
   587  000011                     	ds	4
   588  000015                     key_press@count:
   589                           	callstack 0
   590  000015                     	ds	2
   591  000017                     _temp1_fix:
   592                           	callstack 0
   593  000017                     	ds	2
   594  000019                     _set_t_dq2:
   595                           	callstack 0
   596  000019                     	ds	2
   597  00001B                     _key_pressed:
   598                           	callstack 0
   599  00001B                     	ds	1
   600  00001C                     myInt@snd_delay:
   601                           	callstack 0
   602  00001C                     	ds	1
   603  00001D                     _set_t_dq2_10:
   604                           	callstack 0
   605  00001D                     	ds	1
   606  00001E                     _set_t_dq2_100:
   607                           	callstack 0
   608  00001E                     	ds	1
   609  00001F                     _set_t_dq1_dwn:
   610                           	callstack 0
   611  00001F                     	ds	1
   612  000020                     _set_t_dq1_up:
   613                           	callstack 0
   614  000020                     	ds	1
   615  000021                     _sub_sel:
   616                           	callstack 0
   617  000021                     	ds	1
   618  000022                     _pressed_key:
   619                           	callstack 0
   620  000022                     	ds	1
   621  000023                     _scratch:
   622                           	callstack 0
   623  000023                     	ds	9
   624  00002C                     _time_flag:
   625                           	callstack 0
   626  00002C                     	ds	1
   627  00002D                     _timer_val:
   628                           	callstack 0
   629  00002D                     	ds	1
   630                           
   631                           	psect	dataCOMRAM
   632  000042                     __pdataCOMRAM:
   633                           	callstack 0
   634  000042                     _temperature_2:
   635                           	callstack 0
   636  000042                     	ds	2
   637  000044                     _temperature_1:
   638                           	callstack 0
   639  000044                     	ds	2
   640  000046                     _dq_num:
   641                           	callstack 0
   642  000046                     	ds	1
   643  000047                     _sub_main:
   644                           	callstack 0
   645  000047                     	ds	1
   646  000048                     _select:
   647                           	callstack 0
   648  000048                     	ds	1
   649  000049                     _minus_2:
   650                           	callstack 0
   651  000049                     	ds	1
   652  00004A                     _minus_1:
   653                           	callstack 0
   654  00004A                     	ds	1
   655                           
   656                           	psect	cstackCOMRAM
   657  00002E                     __pcstackCOMRAM:
   658                           	callstack 0
   659  00002E                     ??_read_byte:
   660  00002E                     ??_lcdNibble:
   661  00002E                     ?_ds18b20_get_temp:
   662                           	callstack 0
   663  00002E                     ?___lwdiv:
   664                           	callstack 0
   665  00002E                     ds18b20_get_temp@minus:
   666                           	callstack 0
   667  00002E                     ds18b20_crc8@data_in:
   668                           	callstack 0
   669  00002E                     ow_reset@presence:
   670                           	callstack 0
   671  00002E                     write_bit@bitval:
   672                           	callstack 0
   673  00002E                     write_eep@data:
   674                           	callstack 0
   675  00002E                     key_press@key:
   676                           	callstack 0
   677  00002E                     key_GetKey@key:
   678                           	callstack 0
   679  00002E                     ___lbdiv@divisor:
   680                           	callstack 0
   681  00002E                     Delay_ms@delay:
   682                           	callstack 0
   683  00002E                     read_eep@address:
   684                           	callstack 0
   685  00002E                     ___lwdiv@dividend:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x0
   689  00002E                     	ds	1
   690  00002F                     ??_write_byte:
   691  00002F                     ds18b20_crc8@num_bytes:
   692                           	callstack 0
   693  00002F                     lcdNibble@nibble:
   694                           	callstack 0
   695  00002F                     write_eep@address:
   696                           	callstack 0
   697  00002F                     ___lbdiv@dividend:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x1
   701  00002F                     	ds	1
   702  000030                     ??_Delay_ms:
   703  000030                     ds18b20_get_temp@num_dq:
   704                           	callstack 0
   705  000030                     ds18b20_crc8@bit_counter:
   706                           	callstack 0
   707  000030                     lcdWrite@type:
   708                           	callstack 0
   709  000030                     read_byte@val:
   710                           	callstack 0
   711  000030                     ___lbdiv@counter:
   712                           	callstack 0
   713  000030                     ___lwdiv@divisor:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x2
   717  000030                     	ds	1
   718  000031                     ds18b20_get_temp@tmp:
   719                           	callstack 0
   720  000031                     ds18b20_crc8@data:
   721                           	callstack 0
   722  000031                     lcdWrite@byte:
   723                           	callstack 0
   724  000031                     read_byte@i:
   725                           	callstack 0
   726  000031                     write_byte@val:
   727                           	callstack 0
   728  000031                     ___lbdiv@quotient:
   729                           	callstack 0
   730  000031                     Delay_ms@i:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x3
   734  000031                     	ds	1
   735  000032                     ??_clearLCD:
   736  000032                     ds18b20_crc8@feedback_bit:
   737                           	callstack 0
   738  000032                     lcd_gotoxy@y:
   739                           	callstack 0
   740  000032                     lcd_putc@c:
   741                           	callstack 0
   742  000032                     write_byte@temp:
   743                           	callstack 0
   744  000032                     ___lbmod@divisor:
   745                           	callstack 0
   746  000032                     ds18b20_get_temp@temp:
   747                           	callstack 0
   748  000032                     cgrom_char@symbol:
   749                           	callstack 0
   750  000032                     ___lwdiv@quotient:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x4
   754  000032                     	ds	1
   755  000033                     ??_initLCD:
   756  000033                     ds18b20_crc8@loop_count:
   757                           	callstack 0
   758  000033                     lcd_gotoxy@x:
   759                           	callstack 0
   760  000033                     write_byte@i:
   761                           	callstack 0
   762  000033                     ___lbmod@dividend:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x5
   766  000033                     	ds	1
   767  000034                     ??_init_ds18b20:
   768  000034                     ds18b20_crc8@crc:
   769                           	callstack 0
   770  000034                     lcd_gotoxy@address:
   771                           	callstack 0
   772  000034                     cgrom_char@address:
   773                           	callstack 0
   774  000034                     ___lbmod@counter:
   775                           	callstack 0
   776  000034                     ___lwdiv@counter:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x6
   780  000034                     	ds	1
   781  000035                     ?___lwmod:
   782                           	callstack 0
   783  000035                     ds18b20_readTemp@time_flag:
   784                           	callstack 0
   785  000035                     cgrom_char@i:
   786                           	callstack 0
   787  000035                     ___lbmod@rem:
   788                           	callstack 0
   789  000035                     lcdPrint@t:
   790                           	callstack 0
   791  000035                     ___lwmod@dividend:
   792                           	callstack 0
   793  000035                     ds18b20_readrom@temp_rom:
   794                           	callstack 0
   795                           
   796                           ; 8 bytes @ 0x7
   797  000035                     	ds	1
   798  000036                     init_ds18b20@q:
   799                           	callstack 0
   800  000036                     ds18b20_readTemp@timer_val:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x8
   804  000036                     	ds	1
   805  000037                     ??_lcdPrint:
   806  000037                     ??_ds18b20_readTemp:
   807  000037                     init_ds18b20@i:
   808                           	callstack 0
   809  000037                     ___lwmod@divisor:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x9
   813  000037                     	ds	1
   814  000038                     
   815                           ; 1 bytes @ 0xA
   816  000038                     	ds	1
   817  000039                     ___lwmod@counter:
   818                           	callstack 0
   819  000039                     ds18b20_readTemp@temp:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0xB
   823  000039                     	ds	2
   824  00003B                     ds18b20_readTemp@j:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0xD
   828  00003B                     	ds	1
   829  00003C                     ds18b20_readTemp@i:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0xE
   833  00003C                     	ds	1
   834  00003D                     ds18b20_readrom@num_dq:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0xF
   838  00003D                     	ds	1
   839  00003E                     ds18b20_readrom@i:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x10
   843  00003E                     	ds	1
   844  00003F                     ??_main:
   845                           
   846                           ; 1 bytes @ 0x11
   847  00003F                     	ds	3
   848                           
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 34 in file "main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1
   868 ;;      Params:         0       0       0
   869 ;;      Locals:         0       0       0
   870 ;;      Temps:          3       0       0
   871 ;;      Totals:         3       0       0
   872 ;;Total ram usage:        3 bytes
   873 ;; Hardware stack levels required when called:    6
   874 ;; This function calls:
   875 ;;		_Delay_ms
   876 ;;		_Main_init
   877 ;;		___lbdiv
   878 ;;		___lbmod
   879 ;;		___lwdiv
   880 ;;		___lwmod
   881 ;;		_clearLCD
   882 ;;		_ds18b20_get_temp
   883 ;;		_ds18b20_readTemp
   884 ;;		_ds18b20_readrom
   885 ;;		_key_GetKey
   886 ;;		_key_press
   887 ;;		_lcdPrint
   888 ;;		_lcd_gotoxy
   889 ;;		_lcd_putc
   890 ;;		_read_eep
   891 ;;		_write_eep
   892 ;; This function is called by:
   893 ;;		Startup code after reset
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text0
   898  000092                     __ptext0:
   899                           	callstack 0
   900  000092                     _main:
   901                           	callstack 25
   902                           
   903                           ;main.c: 35: Main_init();
   904                           
   905                           ;incstack = 0
   906  000092  ECA4  F008         	call	_Main_init	;wreg free
   907                           
   908                           ;main.c: 37: lcd_gotoxy(1, 1);
   909  000096  0E01               	movlw	1
   910  000098  6E32               	movwf	lcd_gotoxy@y^0,c
   911  00009A  EC95  F00A         	call	_lcd_gotoxy
   912                           
   913                           ;main.c: 38: lcdPrint("---ÒÅÐÌÎÌÅÒÐ---");
   914  00009E  0E2F               	movlw	low STR_1
   915  0000A0  6E35               	movwf	lcdPrint@t^0,c
   916  0000A2  0E1F               	movlw	high STR_1
   917  0000A4  6E36               	movwf	(lcdPrint@t+1)^0,c
   918  0000A6  EC94  F007         	call	_lcdPrint	;wreg free
   919                           
   920                           ;main.c: 39: lcd_gotoxy(1, 2);
   921  0000AA  EC65  F006         	call	PL22	;call to abstracted procedure
   922  0000AE  EC95  F00A         	call	_lcd_gotoxy
   923                           
   924                           ;main.c: 40: lcdPrint("(c)Ivan_fd v1.0");
   925  0000B2  0E3F               	movlw	low STR_2
   926  0000B4  6E35               	movwf	lcdPrint@t^0,c
   927  0000B6  0E1F               	movlw	high STR_2
   928  0000B8  6E36               	movwf	(lcdPrint@t+1)^0,c
   929  0000BA  EC94  F007         	call	_lcdPrint	;wreg free
   930                           
   931                           ;main.c: 41: Delay_ms(2000);
   932  0000BE  0E07               	movlw	7
   933  0000C0  6E2F               	movwf	(Delay_ms@delay+1)^0,c
   934  0000C2  0ED0               	movlw	208
   935  0000C4  6E2E               	movwf	Delay_ms@delay^0,c
   936  0000C6  EC62  F00A         	call	_Delay_ms	;wreg free
   937                           
   938                           ;main.c: 42: clearLCD();
   939  0000CA  ECA3  F00A         	call	_clearLCD	;wreg free
   940                           
   941                           ;main.c: 43: if ((PORTB & (1 << 1)) == 0) {
   942  0000CE  B281               	btfsc	129,1,c	;volatile
   943  0000D0  D017               	goto	l2767
   944                           
   945                           ;main.c: 44: clearLCD();
   946  0000D2  ECA3  F00A         	call	_clearLCD	;wreg free
   947                           
   948                           ;main.c: 45: select = 2;
   949  0000D6  0E02               	movlw	2
   950                           
   951                           ;main.c: 46: lcd_gotoxy(1, 1);
   952  0000D8  EC87  F006         	call	PL42	;call to abstracted procedure
   953  0000DC  EC95  F00A         	call	_lcd_gotoxy
   954                           
   955                           ;main.c: 47: lcdPrint("Äàò÷èê 1, àáî 2");
   956  0000E0  0E4F               	movlw	low STR_3
   957  0000E2  6E35               	movwf	lcdPrint@t^0,c
   958  0000E4  0E1F               	movlw	high STR_3
   959  0000E6  6E36               	movwf	(lcdPrint@t+1)^0,c
   960  0000E8  EC94  F007         	call	_lcdPrint	;wreg free
   961                           
   962                           ;main.c: 48: lcd_gotoxy(1, 2);
   963  0000EC  EC65  F006         	call	PL22	;call to abstracted procedure
   964  0000F0  EC95  F00A         	call	_lcd_gotoxy
   965                           
   966                           ;main.c: 49: lcdPrint("Âèáið 18B20:");
   967  0000F4  0EC5               	movlw	low STR_4
   968  0000F6  6E35               	movwf	lcdPrint@t^0,c
   969  0000F8  0E1F               	movlw	high STR_4
   970  0000FA  6E36               	movwf	(lcdPrint@t+1)^0,c
   971  0000FC  EC94  F007         	call	_lcdPrint	;wreg free
   972  000100                     l2767:
   973                           
   974                           ;main.c: 51: };main.c: 53: set_t_dq1_up = read_eep(16);
   975  000100  6A2F               	clrf	(read_eep@address+1)^0,c
   976  000102  0E10               	movlw	16
   977  000104  6E2E               	movwf	read_eep@address^0,c
   978  000106  ECBB  F00A         	call	_read_eep	;wreg free
   979  00010A  6E20               	movwf	_set_t_dq1_up^0,c
   980                           
   981                           ;main.c: 54: set_t_dq1_dwn = read_eep(17);
   982  00010C  6A2F               	clrf	(read_eep@address+1)^0,c
   983  00010E  0E11               	movlw	17
   984  000110  6E2E               	movwf	read_eep@address^0,c
   985  000112  ECBB  F00A         	call	_read_eep	;wreg free
   986  000116  6E1F               	movwf	_set_t_dq1_dwn^0,c
   987                           
   988                           ;main.c: 55: set_t_dq2 = (uint16_t) read_eep(18) << 8 | read_eep(19);
   989  000118  6A2F               	clrf	(read_eep@address+1)^0,c
   990  00011A  0E13               	movlw	19
   991  00011C  6E2E               	movwf	read_eep@address^0,c
   992  00011E  ECBB  F00A         	call	_read_eep	;wreg free
   993  000122  6E3F               	movwf	??_main^0,c
   994  000124  6A2F               	clrf	(read_eep@address+1)^0,c
   995  000126  0E12               	movlw	18
   996  000128  6E2E               	movwf	read_eep@address^0,c
   997  00012A  ECBB  F00A         	call	_read_eep	;wreg free
   998  00012E  6E40               	movwf	(??_main+1)^0,c
   999  000130  503F               	movf	??_main^0,w,c
  1000  000132  6E19               	movwf	_set_t_dq2^0,c
  1001  000134  C040  F01A         	movff	??_main+1,_set_t_dq2+1
  1002                           
  1003                           ;main.c: 58: temp1_fix = (uint16_t) read_eep(20) << 8 | read_eep(20 + 1);
  1004  000138  6A2F               	clrf	(read_eep@address+1)^0,c
  1005  00013A  0E15               	movlw	21
  1006  00013C  6E2E               	movwf	read_eep@address^0,c
  1007  00013E  ECBB  F00A         	call	_read_eep	;wreg free
  1008  000142  6E3F               	movwf	??_main^0,c
  1009  000144  6A2F               	clrf	(read_eep@address+1)^0,c
  1010  000146  0E14               	movlw	20
  1011  000148  6E2E               	movwf	read_eep@address^0,c
  1012  00014A  ECBB  F00A         	call	_read_eep	;wreg free
  1013  00014E  6E40               	movwf	(??_main+1)^0,c
  1014  000150  503F               	movf	??_main^0,w,c
  1015  000152  6E17               	movwf	_temp1_fix^0,c
  1016  000154  C040  F018         	movff	??_main+1,_temp1_fix+1
  1017  000158                     l2775:
  1018                           
  1019                           ;main.c: 65: if (read_key) {
  1020  000158  AE4B               	btfss	(_read_key/(0+8))^0,_read_key& (0+7),c
  1021  00015A  D003               	goto	l2781
  1022                           
  1023                           ;main.c: 66: key_press();
  1024  00015C  EC0E  F009         	call	_key_press	;wreg free
  1025                           
  1026                           ;main.c: 67: read_key = 0;
  1027  000160  9E4B               	bcf	(_read_key/(0+8))^0,_read_key& (0+7),c
  1028  000162                     l2781:
  1029                           
  1030                           ;main.c: 68: };main.c: 69: pressed_key = key_GetKey();
  1031  000162  ECCA  F00A         	call	_key_GetKey	;wreg free
  1032  000166  6E22               	movwf	_pressed_key^0,c
  1033                           
  1034                           ;main.c: 71: switch (select) {
  1035  000168  EF1C  F006         	goto	l3127
  1036  00016C                     l2783:
  1037                           
  1038                           ;main.c: 73: if (ds18b20_readTemp(&time_flag, &timer_val)) {
  1039  00016C  0E2C               	movlw	low _time_flag
  1040  00016E  6E35               	movwf	ds18b20_readTemp@time_flag^0,c
  1041  000170  0E2D               	movlw	low _timer_val
  1042  000172  6E36               	movwf	ds18b20_readTemp@timer_val^0,c
  1043  000174  EC28  F007         	call	_ds18b20_readTemp	;wreg free
  1044  000178  0900               	iorlw	0
  1045  00017A  E101 D2E7          	bz	l2839
  1046                           
  1047                           ;main.c: 74: temperature_1 = ds18b20_get_temp(1, &minus_1);
  1048  00017E  0E4A               	movlw	low _minus_1
  1049  000180  6E2E               	movwf	ds18b20_get_temp@minus^0,c
  1050  000182  0E01               	movlw	1
  1051  000184  ECE8  F007         	call	_ds18b20_get_temp
  1052  000188  C02E  F044         	movff	?_ds18b20_get_temp,_temperature_1
  1053  00018C  C02F  F045         	movff	?_ds18b20_get_temp+1,_temperature_1+1
  1054                           
  1055                           ;main.c: 75: temperature_2 = ds18b20_get_temp(2, &minus_2);
  1056  000190  0E49               	movlw	low _minus_2
  1057  000192  6E2E               	movwf	ds18b20_get_temp@minus^0,c
  1058  000194  0E02               	movlw	2
  1059  000196  ECE8  F007         	call	_ds18b20_get_temp
  1060  00019A  C02E  F042         	movff	?_ds18b20_get_temp,_temperature_2
  1061  00019E  C02F  F043         	movff	?_ds18b20_get_temp+1,_temperature_2+1
  1062  0001A2  D2D4               	goto	l2839
  1063  0001A4                     l2787:
  1064                           
  1065                           ;main.c: 84: lcd_gotoxy(1, 1);
  1066  0001A4  0E01               	movlw	1
  1067  0001A6  6E32               	movwf	lcd_gotoxy@y^0,c
  1068  0001A8  EC95  F00A         	call	_lcd_gotoxy
  1069                           
  1070                           ;main.c: 85: lcdPrint("Êîëîíà:");
  1071  0001AC  0EF0               	movlw	low STR_5
  1072  0001AE  6E35               	movwf	lcdPrint@t^0,c
  1073  0001B0  0E1F               	movlw	high STR_5
  1074  0001B2  6E36               	movwf	(lcdPrint@t+1)^0,c
  1075  0001B4  EC94  F007         	call	_lcdPrint	;wreg free
  1076                           
  1077                           ;main.c: 87: if (!(temperature_1 == 32767)) {
  1078  0001B8  2844               	incf	_temperature_1^0,w,c
  1079  0001BA  E104               	bnz	u1750
  1080  0001BC  0E7F               	movlw	127
  1081  0001BE  1845               	xorwf	(_temperature_1+1)^0,w,c
  1082  0001C0  E101 D0BC          	bz	l2803
  1083  0001C4                     u1750:
  1084                           
  1085                           ;main.c: 88: if (((temperature_1 / 1000) % 10) == 0) {
  1086  0001C4  EC62  F006         	call	PL20	;call to abstracted procedure
  1087  0001C8  EC47  F006         	call	PL8	;call to abstracted procedure
  1088  0001CC  EC5A  F009         	call	___lwdiv	;wreg free
  1089  0001D0  EC35  F006         	call	PL2	;call to abstracted procedure
  1090  0001D4  EC7F  F009         	call	___lwmod	;wreg free
  1091  0001D8  5035               	movf	?___lwmod^0,w,c
  1092  0001DA  1036               	iorwf	(?___lwmod+1)^0,w,c
  1093  0001DC  E16E               	bnz	l2801
  1094                           
  1095                           ;main.c: 89: if (((temperature_1 / 100) % 10) == 0) {
  1096  0001DE  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1097  0001E0  0E64               	movlw	100
  1098  0001E2  EC47  F006         	call	PL8	;call to abstracted procedure
  1099  0001E6  EC5A  F009         	call	___lwdiv	;wreg free
  1100  0001EA  EC35  F006         	call	PL2	;call to abstracted procedure
  1101  0001EE  EC7F  F009         	call	___lwmod	;wreg free
  1102  0001F2  5035               	movf	?___lwmod^0,w,c
  1103  0001F4  1036               	iorwf	(?___lwmod+1)^0,w,c
  1104  0001F6  E12B               	bnz	l2799
  1105                           
  1106                           ;main.c: 90: lcd_putc(minus_1);
  1107  0001F8  504A               	movf	_minus_1^0,w,c
  1108  0001FA  ECC4  F00A         	call	_lcd_putc
  1109                           
  1110                           ;main.c: 92: lcd_putc(((temperature_1 / 10) % 10) + 48);
  1111  0001FE  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1112  000200  0E0A               	movlw	10
  1113  000202  EC47  F006         	call	PL8	;call to abstracted procedure
  1114  000206  EC5A  F009         	call	___lwdiv	;wreg free
  1115  00020A  EC35  F006         	call	PL2	;call to abstracted procedure
  1116  00020E  EC7F  F009         	call	___lwmod	;wreg free
  1117  000212  5035               	movf	?___lwmod^0,w,c
  1118  000214  0F30               	addlw	48
  1119  000216  ECC4  F00A         	call	_lcd_putc
  1120                           
  1121                           ;main.c: 93: lcd_putc('.');
  1122  00021A  0E2E               	movlw	46
  1123  00021C  ECC4  F00A         	call	_lcd_putc
  1124                           
  1125                           ;main.c: 94: lcd_putc(((temperature_1 % 10) + 48));
  1126  000220  EC58  F006         	call	PL16	;call to abstracted procedure
  1127  000224  EC3D  F006         	call	PL4	;call to abstracted procedure
  1128  000228  EC7F  F009         	call	___lwmod	;wreg free
  1129  00022C  5035               	movf	?___lwmod^0,w,c
  1130  00022E  0F30               	addlw	48
  1131  000230  ECC4  F00A         	call	_lcd_putc
  1132                           
  1133                           ;main.c: 95: lcd_putc(0x01);
  1134  000234  0E01               	movlw	1
  1135  000236  ECC4  F00A         	call	_lcd_putc
  1136                           
  1137                           ;main.c: 97: lcd_putc(' ');
  1138  00023A  0E20               	movlw	32
  1139  00023C  ECC4  F00A         	call	_lcd_putc
  1140                           
  1141                           ;main.c: 98: lcd_putc(' ');
  1142  000240  0E20               	movlw	32
  1143  000242  ECC4  F00A         	call	_lcd_putc
  1144                           
  1145                           ;main.c: 99: lcd_putc(' ');
  1146  000246  0E20               	movlw	32
  1147  000248  ECC4  F00A         	call	_lcd_putc
  1148                           
  1149                           ;main.c: 100: } else {
  1150  00024C  D08C               	goto	l160
  1151  00024E                     l2799:
  1152                           
  1153                           ;main.c: 101: lcd_putc(minus_1);
  1154  00024E  504A               	movf	_minus_1^0,w,c
  1155  000250  ECC4  F00A         	call	_lcd_putc
  1156                           
  1157                           ;main.c: 102: lcd_putc(((temperature_1 / 100) % 10) + 48);
  1158  000254  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1159  000256  0E64               	movlw	100
  1160  000258  EC47  F006         	call	PL8	;call to abstracted procedure
  1161  00025C  EC5A  F009         	call	___lwdiv	;wreg free
  1162  000260  EC35  F006         	call	PL2	;call to abstracted procedure
  1163  000264  EC7F  F009         	call	___lwmod	;wreg free
  1164  000268  5035               	movf	?___lwmod^0,w,c
  1165  00026A  0F30               	addlw	48
  1166  00026C  ECC4  F00A         	call	_lcd_putc
  1167                           
  1168                           ;main.c: 103: lcd_putc(((temperature_1 / 10) % 10) + 48);
  1169  000270  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1170  000272  0E0A               	movlw	10
  1171  000274  EC47  F006         	call	PL8	;call to abstracted procedure
  1172  000278  EC5A  F009         	call	___lwdiv	;wreg free
  1173  00027C  EC35  F006         	call	PL2	;call to abstracted procedure
  1174  000280  EC7F  F009         	call	___lwmod	;wreg free
  1175  000284  5035               	movf	?___lwmod^0,w,c
  1176  000286  0F30               	addlw	48
  1177  000288  ECC4  F00A         	call	_lcd_putc
  1178                           
  1179                           ;main.c: 104: lcd_putc('.');
  1180  00028C  0E2E               	movlw	46
  1181  00028E  ECC4  F00A         	call	_lcd_putc
  1182                           
  1183                           ;main.c: 105: lcd_putc(((temperature_1 % 10) + 48));
  1184  000292  EC58  F006         	call	PL16	;call to abstracted procedure
  1185  000296  EC3D  F006         	call	PL4	;call to abstracted procedure
  1186  00029A  EC7F  F009         	call	___lwmod	;wreg free
  1187  00029E  5035               	movf	?___lwmod^0,w,c
  1188  0002A0  0F30               	addlw	48
  1189  0002A2  ECC4  F00A         	call	_lcd_putc
  1190                           
  1191                           ;main.c: 106: lcd_putc(0x01);
  1192  0002A6  0E01               	movlw	1
  1193  0002A8  ECC4  F00A         	call	_lcd_putc
  1194                           
  1195                           ;main.c: 108: lcd_putc(' ');
  1196  0002AC  0E20               	movlw	32
  1197  0002AE  ECC4  F00A         	call	_lcd_putc
  1198                           
  1199                           ;main.c: 109: lcd_putc(' ');
  1200  0002B2  0E20               	movlw	32
  1201  0002B4  ECC4  F00A         	call	_lcd_putc
  1202  0002B8  D056               	goto	l160
  1203  0002BA                     l2801:
  1204                           
  1205                           ;main.c: 113: lcd_putc(minus_1);
  1206  0002BA  504A               	movf	_minus_1^0,w,c
  1207  0002BC  ECC4  F00A         	call	_lcd_putc
  1208                           
  1209                           ;main.c: 114: lcd_putc(((temperature_1 / 1000) % 10) + 48);
  1210  0002C0  EC62  F006         	call	PL20	;call to abstracted procedure
  1211  0002C4  EC47  F006         	call	PL8	;call to abstracted procedure
  1212  0002C8  EC5A  F009         	call	___lwdiv	;wreg free
  1213  0002CC  EC35  F006         	call	PL2	;call to abstracted procedure
  1214  0002D0  EC7F  F009         	call	___lwmod	;wreg free
  1215  0002D4  5035               	movf	?___lwmod^0,w,c
  1216  0002D6  0F30               	addlw	48
  1217  0002D8  ECC4  F00A         	call	_lcd_putc
  1218                           
  1219                           ;main.c: 115: lcd_putc(((temperature_1 / 100) % 10) + 48);
  1220  0002DC  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1221  0002DE  0E64               	movlw	100
  1222  0002E0  EC47  F006         	call	PL8	;call to abstracted procedure
  1223  0002E4  EC5A  F009         	call	___lwdiv	;wreg free
  1224  0002E8  EC35  F006         	call	PL2	;call to abstracted procedure
  1225  0002EC  EC7F  F009         	call	___lwmod	;wreg free
  1226  0002F0  5035               	movf	?___lwmod^0,w,c
  1227  0002F2  0F30               	addlw	48
  1228  0002F4  ECC4  F00A         	call	_lcd_putc
  1229                           
  1230                           ;main.c: 116: lcd_putc(((temperature_1 / 10) % 10) + 48);
  1231  0002F8  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1232  0002FA  0E0A               	movlw	10
  1233  0002FC  EC47  F006         	call	PL8	;call to abstracted procedure
  1234  000300  EC5A  F009         	call	___lwdiv	;wreg free
  1235  000304  EC35  F006         	call	PL2	;call to abstracted procedure
  1236  000308  EC7F  F009         	call	___lwmod	;wreg free
  1237  00030C  5035               	movf	?___lwmod^0,w,c
  1238  00030E  0F30               	addlw	48
  1239  000310  ECC4  F00A         	call	_lcd_putc
  1240                           
  1241                           ;main.c: 117: lcd_putc('.');
  1242  000314  0E2E               	movlw	46
  1243  000316  ECC4  F00A         	call	_lcd_putc
  1244                           
  1245                           ;main.c: 118: lcd_putc(((temperature_1 % 10) + 48));
  1246  00031A  EC58  F006         	call	PL16	;call to abstracted procedure
  1247  00031E  EC3D  F006         	call	PL4	;call to abstracted procedure
  1248  000322  EC7F  F009         	call	___lwmod	;wreg free
  1249  000326  5035               	movf	?___lwmod^0,w,c
  1250  000328  0F30               	addlw	48
  1251  00032A  ECC4  F00A         	call	_lcd_putc
  1252                           
  1253                           ;main.c: 119: lcd_putc(0x01);
  1254  00032E  0E01               	movlw	1
  1255  000330  ECC4  F00A         	call	_lcd_putc
  1256                           
  1257                           ;main.c: 121: lcd_putc(' ');
  1258  000334  0E20               	movlw	32
  1259  000336  ECC4  F00A         	call	_lcd_putc
  1260  00033A  D015               	goto	l160
  1261  00033C                     l2803:
  1262                           
  1263                           ;main.c: 125: lcd_putc('-');
  1264  00033C  0E2D               	movlw	45
  1265  00033E  ECC4  F00A         	call	_lcd_putc
  1266                           
  1267                           ;main.c: 126: lcd_putc('-');
  1268  000342  0E2D               	movlw	45
  1269  000344  ECC4  F00A         	call	_lcd_putc
  1270                           
  1271                           ;main.c: 127: lcd_putc('-');
  1272  000348  0E2D               	movlw	45
  1273  00034A  ECC4  F00A         	call	_lcd_putc
  1274                           
  1275                           ;main.c: 128: lcd_putc(' ');
  1276  00034E  0E20               	movlw	32
  1277  000350  ECC4  F00A         	call	_lcd_putc
  1278                           
  1279                           ;main.c: 129: lcd_putc(' ');
  1280  000354  0E20               	movlw	32
  1281  000356  ECC4  F00A         	call	_lcd_putc
  1282                           
  1283                           ;main.c: 130: lcd_putc(' ');
  1284  00035A  0E20               	movlw	32
  1285  00035C  ECC4  F00A         	call	_lcd_putc
  1286                           
  1287                           ;main.c: 131: lcd_putc(' ');
  1288  000360  0E20               	movlw	32
  1289  000362  ECC4  F00A         	call	_lcd_putc
  1290  000366                     l160:
  1291                           
  1292                           ;main.c: 132: };main.c: 133: lcd_gotoxy(1, 2);
  1293  000366  EC65  F006         	call	PL22	;call to abstracted procedure
  1294  00036A  EC95  F00A         	call	_lcd_gotoxy
  1295                           
  1296                           ;main.c: 134: lcd_putc(0xCE);
  1297  00036E  0ECE               	movlw	206
  1298  000370  ECC4  F00A         	call	_lcd_putc
  1299                           
  1300                           ;main.c: 135: lcd_putc(((temp1_fix / 100) % 10) + 48);
  1301  000374  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1302  000376  0E64               	movlw	100
  1303  000378  EC68  F006         	call	PL26	;call to abstracted procedure
  1304  00037C  EC5A  F009         	call	___lwdiv	;wreg free
  1305  000380  EC35  F006         	call	PL2	;call to abstracted procedure
  1306  000384  EC7F  F009         	call	___lwmod	;wreg free
  1307  000388  5035               	movf	?___lwmod^0,w,c
  1308  00038A  0F30               	addlw	48
  1309  00038C  ECC4  F00A         	call	_lcd_putc
  1310                           
  1311                           ;main.c: 136: lcd_putc(((temp1_fix / 10) % 10) + 48);
  1312  000390  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1313  000392  0E0A               	movlw	10
  1314  000394  EC68  F006         	call	PL26	;call to abstracted procedure
  1315  000398  EC5A  F009         	call	___lwdiv	;wreg free
  1316  00039C  EC35  F006         	call	PL2	;call to abstracted procedure
  1317  0003A0  EC7F  F009         	call	___lwmod	;wreg free
  1318  0003A4  5035               	movf	?___lwmod^0,w,c
  1319  0003A6  0F30               	addlw	48
  1320  0003A8  ECC4  F00A         	call	_lcd_putc
  1321                           
  1322                           ;main.c: 137: lcd_putc('.');
  1323  0003AC  0E2E               	movlw	46
  1324  0003AE  ECC4  F00A         	call	_lcd_putc
  1325                           
  1326                           ;main.c: 138: lcd_putc(((temp1_fix % 10) + 48));
  1327  0003B2  C017  F035         	movff	_temp1_fix,___lwmod@dividend
  1328  0003B6  C018  F036         	movff	_temp1_fix+1,___lwmod@dividend+1
  1329  0003BA  EC3D  F006         	call	PL4	;call to abstracted procedure
  1330  0003BE  EC7F  F009         	call	___lwmod	;wreg free
  1331  0003C2  5035               	movf	?___lwmod^0,w,c
  1332  0003C4  0F30               	addlw	48
  1333  0003C6  ECC4  F00A         	call	_lcd_putc
  1334                           
  1335                           ;main.c: 139: lcd_putc(0x01);
  1336  0003CA  0E01               	movlw	1
  1337  0003CC  ECC4  F00A         	call	_lcd_putc
  1338                           
  1339                           ;main.c: 140: lcd_putc(' ');
  1340  0003D0  0E20               	movlw	32
  1341  0003D2  ECC4  F00A         	call	_lcd_putc
  1342                           
  1343                           ;main.c: 141: lcd_putc(0xD9);
  1344  0003D6  0ED9               	movlw	217
  1345  0003D8  ECC4  F00A         	call	_lcd_putc
  1346                           
  1347                           ;main.c: 142: lcd_putc(((set_t_dq1_up / 10) % 10) + 48);
  1348  0003DC  EC82  F006         	call	PL40	;call to abstracted procedure
  1349  0003E0  ECF2  F009         	call	___lbdiv
  1350  0003E4  EC3D  F00A         	call	___lbmod
  1351  0003E8  0F30               	addlw	48
  1352  0003EA  ECC4  F00A         	call	_lcd_putc
  1353                           
  1354                           ;main.c: 143: lcd_putc('.');
  1355  0003EE  0E2E               	movlw	46
  1356  0003F0  ECC4  F00A         	call	_lcd_putc
  1357                           
  1358                           ;main.c: 144: lcd_putc(((set_t_dq1_up % 10) + 48));
  1359  0003F4  EC98  F006         	call	PL52	;call to abstracted procedure
  1360  0003F8  EC3D  F00A         	call	___lbmod
  1361  0003FC  0F30               	addlw	48
  1362  0003FE  ECC4  F00A         	call	_lcd_putc
  1363                           
  1364                           ;main.c: 145: lcd_putc(' ');
  1365  000402  0E20               	movlw	32
  1366  000404  ECC4  F00A         	call	_lcd_putc
  1367                           
  1368                           ;main.c: 146: lcd_putc(0xDA);
  1369  000408  0EDA               	movlw	218
  1370  00040A  ECC4  F00A         	call	_lcd_putc
  1371                           
  1372                           ;main.c: 147: lcd_putc(((set_t_dq1_dwn / 10) % 10) + 48);
  1373  00040E  EC79  F006         	call	PL34	;call to abstracted procedure
  1374  000412  ECF2  F009         	call	___lbdiv
  1375  000416  EC3D  F00A         	call	___lbmod
  1376  00041A  0F30               	addlw	48
  1377  00041C  ECC4  F00A         	call	_lcd_putc
  1378                           
  1379                           ;main.c: 148: lcd_putc('.');
  1380  000420  0E2E               	movlw	46
  1381  000422  ECC4  F00A         	call	_lcd_putc
  1382                           
  1383                           ;main.c: 149: lcd_putc(((set_t_dq1_dwn % 10) + 48));
  1384  000426  ECA8  F006         	call	PL62	;call to abstracted procedure
  1385  00042A  EC3D  F00A         	call	___lbmod
  1386  00042E  0F30               	addlw	48
  1387  000430  ECC4  F00A         	call	_lcd_putc
  1388                           
  1389                           ;main.c: 151: break;
  1390  000434  D192               	goto	l161
  1391  000436                     l2805:
  1392                           
  1393                           ;main.c: 153: lcd_gotoxy(1, 1);
  1394  000436  0E01               	movlw	1
  1395  000438  6E32               	movwf	lcd_gotoxy@y^0,c
  1396  00043A  EC95  F00A         	call	_lcd_gotoxy
  1397                           
  1398                           ;main.c: 154: lcdPrint("Êóáîâà:");
  1399  00043E  0EE8               	movlw	low STR_6
  1400  000440  6E35               	movwf	lcdPrint@t^0,c
  1401  000442  0E1F               	movlw	high STR_6
  1402  000444  6E36               	movwf	(lcdPrint@t+1)^0,c
  1403  000446  EC94  F007         	call	_lcdPrint	;wreg free
  1404                           
  1405                           ;main.c: 156: if (!(temperature_2 == 32767)) {
  1406  00044A  2842               	incf	_temperature_2^0,w,c
  1407  00044C  E104               	bnz	u1780
  1408  00044E  0E7F               	movlw	127
  1409  000450  1843               	xorwf	(_temperature_2+1)^0,w,c
  1410  000452  E101 D0AA          	bz	l2821
  1411  000456                     u1780:
  1412                           
  1413                           ;main.c: 157: if (((temperature_2 / 1000) % 10) == 0) {
  1414  000456  EC62  F006         	call	PL20	;call to abstracted procedure
  1415  00045A  EC4D  F006         	call	PL10	;call to abstracted procedure
  1416  00045E  EC5A  F009         	call	___lwdiv	;wreg free
  1417  000462  EC35  F006         	call	PL2	;call to abstracted procedure
  1418  000466  EC7F  F009         	call	___lwmod	;wreg free
  1419  00046A  5035               	movf	?___lwmod^0,w,c
  1420  00046C  1036               	iorwf	(?___lwmod+1)^0,w,c
  1421  00046E  E165               	bnz	l2819
  1422                           
  1423                           ;main.c: 158: if (((temperature_2 / 100) % 10) == 0) {
  1424  000470  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1425  000472  0E64               	movlw	100
  1426  000474  EC4D  F006         	call	PL10	;call to abstracted procedure
  1427  000478  EC5A  F009         	call	___lwdiv	;wreg free
  1428  00047C  DBF6               	call	PL2	;call to abstracted procedure
  1429  00047E  EC7F  F009         	call	___lwmod	;wreg free
  1430  000482  5035               	movf	?___lwmod^0,w,c
  1431  000484  1036               	iorwf	(?___lwmod+1)^0,w,c
  1432  000486  E129               	bnz	l2817
  1433                           
  1434                           ;main.c: 159: lcd_putc(minus_2);
  1435  000488  5049               	movf	_minus_2^0,w,c
  1436  00048A  ECC4  F00A         	call	_lcd_putc
  1437                           
  1438                           ;main.c: 161: lcd_putc(((temperature_2 / 10) % 10) + 48);
  1439  00048E  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1440  000490  0E0A               	movlw	10
  1441  000492  EC4D  F006         	call	PL10	;call to abstracted procedure
  1442  000496  EC5A  F009         	call	___lwdiv	;wreg free
  1443  00049A  DBE7               	call	PL2	;call to abstracted procedure
  1444  00049C  EC7F  F009         	call	___lwmod	;wreg free
  1445  0004A0  5035               	movf	?___lwmod^0,w,c
  1446  0004A2  0F30               	addlw	48
  1447  0004A4  ECC4  F00A         	call	_lcd_putc
  1448                           
  1449                           ;main.c: 162: lcd_putc('.');
  1450  0004A8  0E2E               	movlw	46
  1451  0004AA  ECC4  F00A         	call	_lcd_putc
  1452                           
  1453                           ;main.c: 163: lcd_putc(((temperature_2 % 10) + 48));
  1454  0004AE  EC5D  F006         	call	PL18	;call to abstracted procedure
  1455  0004B2  DBE3               	call	PL4	;call to abstracted procedure
  1456  0004B4  EC7F  F009         	call	___lwmod	;wreg free
  1457  0004B8  5035               	movf	?___lwmod^0,w,c
  1458  0004BA  0F30               	addlw	48
  1459  0004BC  ECC4  F00A         	call	_lcd_putc
  1460                           
  1461                           ;main.c: 164: lcd_putc(0x01);
  1462  0004C0  0E01               	movlw	1
  1463  0004C2  ECC4  F00A         	call	_lcd_putc
  1464                           
  1465                           ;main.c: 166: lcd_putc(' ');
  1466  0004C6  0E20               	movlw	32
  1467  0004C8  ECC4  F00A         	call	_lcd_putc
  1468                           
  1469                           ;main.c: 167: lcd_putc(' ');
  1470  0004CC  0E20               	movlw	32
  1471  0004CE  ECC4  F00A         	call	_lcd_putc
  1472                           
  1473                           ;main.c: 168: lcd_putc(' ');
  1474  0004D2  0E20               	movlw	32
  1475  0004D4  ECC4  F00A         	call	_lcd_putc
  1476                           
  1477                           ;main.c: 169: } else {
  1478  0004D8  D07D               	goto	l168
  1479  0004DA                     l2817:
  1480                           
  1481                           ;main.c: 170: lcd_putc(minus_2);
  1482  0004DA  5049               	movf	_minus_2^0,w,c
  1483  0004DC  ECC4  F00A         	call	_lcd_putc
  1484                           
  1485                           ;main.c: 171: lcd_putc(((temperature_2 / 100) % 10) + 48);
  1486  0004E0  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1487  0004E2  0E64               	movlw	100
  1488  0004E4  DBDA               	call	PL10	;call to abstracted procedure
  1489  0004E6  EC5A  F009         	call	___lwdiv	;wreg free
  1490  0004EA  DBBF               	call	PL2	;call to abstracted procedure
  1491  0004EC  EC7F  F009         	call	___lwmod	;wreg free
  1492  0004F0  5035               	movf	?___lwmod^0,w,c
  1493  0004F2  0F30               	addlw	48
  1494  0004F4  ECC4  F00A         	call	_lcd_putc
  1495                           
  1496                           ;main.c: 172: lcd_putc(((temperature_2 / 10) % 10) + 48);
  1497  0004F8  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1498  0004FA  0E0A               	movlw	10
  1499  0004FC  DBCE               	call	PL10	;call to abstracted procedure
  1500  0004FE  EC5A  F009         	call	___lwdiv	;wreg free
  1501  000502  DBB3               	call	PL2	;call to abstracted procedure
  1502  000504  EC7F  F009         	call	___lwmod	;wreg free
  1503  000508  5035               	movf	?___lwmod^0,w,c
  1504  00050A  0F30               	addlw	48
  1505  00050C  ECC4  F00A         	call	_lcd_putc
  1506                           
  1507                           ;main.c: 173: lcd_putc('.');
  1508  000510  0E2E               	movlw	46
  1509  000512  ECC4  F00A         	call	_lcd_putc
  1510                           
  1511                           ;main.c: 174: lcd_putc(((temperature_2 % 10) + 48));
  1512  000516  DBD1               	call	PL18	;call to abstracted procedure
  1513  000518  DBB0               	call	PL4	;call to abstracted procedure
  1514  00051A  EC7F  F009         	call	___lwmod	;wreg free
  1515  00051E  5035               	movf	?___lwmod^0,w,c
  1516  000520  0F30               	addlw	48
  1517  000522  ECC4  F00A         	call	_lcd_putc
  1518                           
  1519                           ;main.c: 175: lcd_putc(0x01);
  1520  000526  0E01               	movlw	1
  1521  000528  ECC4  F00A         	call	_lcd_putc
  1522                           
  1523                           ;main.c: 177: lcd_putc(' ');
  1524  00052C  0E20               	movlw	32
  1525  00052E  ECC4  F00A         	call	_lcd_putc
  1526                           
  1527                           ;main.c: 178: lcd_putc(' ');
  1528  000532  0E20               	movlw	32
  1529  000534  ECC4  F00A         	call	_lcd_putc
  1530  000538  D04D               	goto	l168
  1531  00053A                     l2819:
  1532                           
  1533                           ;main.c: 182: lcd_putc(minus_2);
  1534  00053A  5049               	movf	_minus_2^0,w,c
  1535  00053C  ECC4  F00A         	call	_lcd_putc
  1536                           
  1537                           ;main.c: 183: lcd_putc(((temperature_2 / 1000) % 10) + 48);
  1538  000540  DBC1               	call	PL20	;call to abstracted procedure
  1539  000542  DBAB               	call	PL10	;call to abstracted procedure
  1540  000544  EC5A  F009         	call	___lwdiv	;wreg free
  1541  000548  DB90               	call	PL2	;call to abstracted procedure
  1542  00054A  EC7F  F009         	call	___lwmod	;wreg free
  1543  00054E  5035               	movf	?___lwmod^0,w,c
  1544  000550  0F30               	addlw	48
  1545  000552  ECC4  F00A         	call	_lcd_putc
  1546                           
  1547                           ;main.c: 184: lcd_putc(((temperature_2 / 100) % 10) + 48);
  1548  000556  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1549  000558  0E64               	movlw	100
  1550  00055A  DB9F               	call	PL10	;call to abstracted procedure
  1551  00055C  EC5A  F009         	call	___lwdiv	;wreg free
  1552  000560  DB84               	call	PL2	;call to abstracted procedure
  1553  000562  EC7F  F009         	call	___lwmod	;wreg free
  1554  000566  5035               	movf	?___lwmod^0,w,c
  1555  000568  0F30               	addlw	48
  1556  00056A  ECC4  F00A         	call	_lcd_putc
  1557                           
  1558                           ;main.c: 185: lcd_putc(((temperature_2 / 10) % 10) + 48);
  1559  00056E  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1560  000570  0E0A               	movlw	10
  1561  000572  DB93               	call	PL10	;call to abstracted procedure
  1562  000574  EC5A  F009         	call	___lwdiv	;wreg free
  1563  000578  DB78               	call	PL2	;call to abstracted procedure
  1564  00057A  EC7F  F009         	call	___lwmod	;wreg free
  1565  00057E  5035               	movf	?___lwmod^0,w,c
  1566  000580  0F30               	addlw	48
  1567  000582  ECC4  F00A         	call	_lcd_putc
  1568                           
  1569                           ;main.c: 186: lcd_putc('.');
  1570  000586  0E2E               	movlw	46
  1571  000588  ECC4  F00A         	call	_lcd_putc
  1572                           
  1573                           ;main.c: 187: lcd_putc(((temperature_2 % 10) + 48));
  1574  00058C  DB96               	call	PL18	;call to abstracted procedure
  1575  00058E  DB75               	call	PL4	;call to abstracted procedure
  1576  000590  EC7F  F009         	call	___lwmod	;wreg free
  1577  000594  5035               	movf	?___lwmod^0,w,c
  1578  000596  0F30               	addlw	48
  1579  000598  ECC4  F00A         	call	_lcd_putc
  1580                           
  1581                           ;main.c: 188: lcd_putc(0x01);
  1582  00059C  0E01               	movlw	1
  1583  00059E  ECC4  F00A         	call	_lcd_putc
  1584                           
  1585                           ;main.c: 190: lcd_putc(' ');
  1586  0005A2  0E20               	movlw	32
  1587  0005A4  ECC4  F00A         	call	_lcd_putc
  1588  0005A8  D015               	goto	l168
  1589  0005AA                     l2821:
  1590                           
  1591                           ;main.c: 194: lcd_putc('-');
  1592  0005AA  0E2D               	movlw	45
  1593  0005AC  ECC4  F00A         	call	_lcd_putc
  1594                           
  1595                           ;main.c: 195: lcd_putc('-');
  1596  0005B0  0E2D               	movlw	45
  1597  0005B2  ECC4  F00A         	call	_lcd_putc
  1598                           
  1599                           ;main.c: 196: lcd_putc('-');
  1600  0005B6  0E2D               	movlw	45
  1601  0005B8  ECC4  F00A         	call	_lcd_putc
  1602                           
  1603                           ;main.c: 197: lcd_putc(' ');
  1604  0005BC  0E20               	movlw	32
  1605  0005BE  ECC4  F00A         	call	_lcd_putc
  1606                           
  1607                           ;main.c: 198: lcd_putc(' ');
  1608  0005C2  0E20               	movlw	32
  1609  0005C4  ECC4  F00A         	call	_lcd_putc
  1610                           
  1611                           ;main.c: 199: lcd_putc(' ');
  1612  0005C8  0E20               	movlw	32
  1613  0005CA  ECC4  F00A         	call	_lcd_putc
  1614                           
  1615                           ;main.c: 200: lcd_putc(' ');
  1616  0005CE  0E20               	movlw	32
  1617  0005D0  ECC4  F00A         	call	_lcd_putc
  1618  0005D4                     l168:
  1619                           
  1620                           ;main.c: 201: };main.c: 202: lcd_gotoxy(1, 2);
  1621  0005D4  DB7A               	call	PL22	;call to abstracted procedure
  1622  0005D6  EC95  F00A         	call	_lcd_gotoxy
  1623                           
  1624                           ;main.c: 203: lcdPrint("Ïîðiã:");
  1625  0005DA  0EF8               	movlw	low STR_7
  1626  0005DC  6E35               	movwf	lcdPrint@t^0,c
  1627  0005DE  0E1F               	movlw	high STR_7
  1628  0005E0  6E36               	movwf	(lcdPrint@t+1)^0,c
  1629  0005E2  EC94  F007         	call	_lcdPrint	;wreg free
  1630                           
  1631                           ;main.c: 204: lcd_putc('+');
  1632  0005E6  0E2B               	movlw	43
  1633  0005E8  ECC4  F00A         	call	_lcd_putc
  1634                           
  1635                           ;main.c: 205: if (!(((set_t_dq2 / 1000) % 10) == 0)) {
  1636  0005EC  DB6B               	call	PL20	;call to abstracted procedure
  1637  0005EE  DB49               	call	PL6	;call to abstracted procedure
  1638  0005F0  EC5A  F009         	call	___lwdiv	;wreg free
  1639  0005F4  DB3A               	call	PL2	;call to abstracted procedure
  1640  0005F6  EC7F  F009         	call	___lwmod	;wreg free
  1641  0005FA  5035               	movf	?___lwmod^0,w,c
  1642  0005FC  1036               	iorwf	(?___lwmod+1)^0,w,c
  1643  0005FE  E03B               	bz	l2831
  1644                           
  1645                           ;main.c: 206: lcd_putc(((set_t_dq2 / 1000) % 10) + 48);
  1646  000600  DB61               	call	PL20	;call to abstracted procedure
  1647  000602  DB3F               	call	PL6	;call to abstracted procedure
  1648  000604  EC5A  F009         	call	___lwdiv	;wreg free
  1649  000608  DB30               	call	PL2	;call to abstracted procedure
  1650  00060A  EC7F  F009         	call	___lwmod	;wreg free
  1651  00060E  5035               	movf	?___lwmod^0,w,c
  1652  000610  0F30               	addlw	48
  1653  000612  ECC4  F00A         	call	_lcd_putc
  1654                           
  1655                           ;main.c: 207: lcd_putc(((set_t_dq2 / 100) % 10) + 48);
  1656  000616  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1657  000618  0E64               	movlw	100
  1658  00061A  DB33               	call	PL6	;call to abstracted procedure
  1659  00061C  EC5A  F009         	call	___lwdiv	;wreg free
  1660  000620  DB24               	call	PL2	;call to abstracted procedure
  1661  000622  EC7F  F009         	call	___lwmod	;wreg free
  1662  000626  5035               	movf	?___lwmod^0,w,c
  1663  000628  0F30               	addlw	48
  1664  00062A  ECC4  F00A         	call	_lcd_putc
  1665                           
  1666                           ;main.c: 208: lcd_putc(((set_t_dq2 / 10) % 10) + 48);
  1667  00062E  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1668  000630  0E0A               	movlw	10
  1669  000632  DB27               	call	PL6	;call to abstracted procedure
  1670  000634  EC5A  F009         	call	___lwdiv	;wreg free
  1671  000638  DB18               	call	PL2	;call to abstracted procedure
  1672  00063A  EC7F  F009         	call	___lwmod	;wreg free
  1673  00063E  5035               	movf	?___lwmod^0,w,c
  1674  000640  0F30               	addlw	48
  1675  000642  ECC4  F00A         	call	_lcd_putc
  1676                           
  1677                           ;main.c: 209: lcd_putc('.');
  1678  000646  0E2E               	movlw	46
  1679  000648  ECC4  F00A         	call	_lcd_putc
  1680                           
  1681                           ;main.c: 210: lcd_putc(((set_t_dq2 % 10) + 48));
  1682  00064C  DB2C               	call	PL12	;call to abstracted procedure
  1683  00064E  DB15               	call	PL4	;call to abstracted procedure
  1684  000650  EC7F  F009         	call	___lwmod	;wreg free
  1685  000654  5035               	movf	?___lwmod^0,w,c
  1686  000656  0F30               	addlw	48
  1687  000658  ECC4  F00A         	call	_lcd_putc
  1688                           
  1689                           ;main.c: 211: lcd_putc(0x01);
  1690  00065C  0E01               	movlw	1
  1691  00065E  ECC4  F00A         	call	_lcd_putc
  1692                           
  1693                           ;main.c: 212: lcd_putc(' ');
  1694  000662  0E20               	movlw	32
  1695  000664  ECC4  F00A         	call	_lcd_putc
  1696                           
  1697                           ;main.c: 213: lcd_putc(' ');
  1698  000668  0E20               	movlw	32
  1699  00066A  ECC4  F00A         	call	_lcd_putc
  1700                           
  1701                           ;main.c: 214: lcd_putc(' ');
  1702  00066E  0E20               	movlw	32
  1703  000670  ECC4  F00A         	call	_lcd_putc
  1704                           
  1705                           ;main.c: 215: } else if (!(((set_t_dq2 / 100) % 10) == 0)) {
  1706  000674  D072               	goto	l161
  1707  000676                     l2831:
  1708  000676  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1709  000678  0E64               	movlw	100
  1710  00067A  DB03               	call	PL6	;call to abstracted procedure
  1711  00067C  EC5A  F009         	call	___lwdiv	;wreg free
  1712  000680  DAF4               	call	PL2	;call to abstracted procedure
  1713  000682  EC7F  F009         	call	___lwmod	;wreg free
  1714  000686  5035               	movf	?___lwmod^0,w,c
  1715  000688  1036               	iorwf	(?___lwmod+1)^0,w,c
  1716  00068A  E033               	bz	l2835
  1717                           
  1718                           ;main.c: 216: lcd_putc(((set_t_dq2 / 100) % 10) + 48);
  1719  00068C  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1720  00068E  0E64               	movlw	100
  1721  000690  DAF8               	call	PL6	;call to abstracted procedure
  1722  000692  EC5A  F009         	call	___lwdiv	;wreg free
  1723  000696  DAE9               	call	PL2	;call to abstracted procedure
  1724  000698  EC7F  F009         	call	___lwmod	;wreg free
  1725  00069C  5035               	movf	?___lwmod^0,w,c
  1726  00069E  0F30               	addlw	48
  1727  0006A0  ECC4  F00A         	call	_lcd_putc
  1728                           
  1729                           ;main.c: 217: lcd_putc(((set_t_dq2 / 10) % 10) + 48);
  1730  0006A4  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1731  0006A6  0E0A               	movlw	10
  1732  0006A8  DAEC               	call	PL6	;call to abstracted procedure
  1733  0006AA  EC5A  F009         	call	___lwdiv	;wreg free
  1734  0006AE  DADD               	call	PL2	;call to abstracted procedure
  1735  0006B0  EC7F  F009         	call	___lwmod	;wreg free
  1736  0006B4  5035               	movf	?___lwmod^0,w,c
  1737  0006B6  0F30               	addlw	48
  1738  0006B8  ECC4  F00A         	call	_lcd_putc
  1739                           
  1740                           ;main.c: 218: lcd_putc('.');
  1741  0006BC  0E2E               	movlw	46
  1742  0006BE  ECC4  F00A         	call	_lcd_putc
  1743                           
  1744                           ;main.c: 219: lcd_putc(((set_t_dq2 % 10) + 48));
  1745  0006C2  DAF1               	call	PL12	;call to abstracted procedure
  1746  0006C4  DADA               	call	PL4	;call to abstracted procedure
  1747  0006C6  EC7F  F009         	call	___lwmod	;wreg free
  1748  0006CA  5035               	movf	?___lwmod^0,w,c
  1749  0006CC  0F30               	addlw	48
  1750  0006CE  ECC4  F00A         	call	_lcd_putc
  1751                           
  1752                           ;main.c: 220: lcd_putc(0x01);
  1753  0006D2  0E01               	movlw	1
  1754  0006D4  ECC4  F00A         	call	_lcd_putc
  1755                           
  1756                           ;main.c: 221: lcd_putc(' ');
  1757  0006D8  0E20               	movlw	32
  1758  0006DA  ECC4  F00A         	call	_lcd_putc
  1759                           
  1760                           ;main.c: 222: lcd_putc(' ');
  1761  0006DE  0E20               	movlw	32
  1762  0006E0  ECC4  F00A         	call	_lcd_putc
  1763                           
  1764                           ;main.c: 223: lcd_putc(' ');
  1765  0006E4  0E20               	movlw	32
  1766  0006E6  ECC4  F00A         	call	_lcd_putc
  1767                           
  1768                           ;main.c: 224: lcd_putc(' ');
  1769  0006EA  0E20               	movlw	32
  1770  0006EC  ECC4  F00A         	call	_lcd_putc
  1771                           
  1772                           ;main.c: 225: } else {
  1773  0006F0  D034               	goto	l161
  1774  0006F2                     l2835:
  1775                           
  1776                           ;main.c: 226: lcd_putc(((set_t_dq2 / 10) % 10) + 48);
  1777  0006F2  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  1778  0006F4  0E0A               	movlw	10
  1779  0006F6  DAC5               	call	PL6	;call to abstracted procedure
  1780  0006F8  EC5A  F009         	call	___lwdiv	;wreg free
  1781  0006FC  DAB6               	call	PL2	;call to abstracted procedure
  1782  0006FE  EC7F  F009         	call	___lwmod	;wreg free
  1783  000702  5035               	movf	?___lwmod^0,w,c
  1784  000704  0F30               	addlw	48
  1785  000706  ECC4  F00A         	call	_lcd_putc
  1786                           
  1787                           ;main.c: 227: lcd_putc('.');
  1788  00070A  0E2E               	movlw	46
  1789  00070C  ECC4  F00A         	call	_lcd_putc
  1790                           
  1791                           ;main.c: 228: lcd_putc(((set_t_dq2 % 10) + 48));
  1792  000710  DACA               	call	PL12	;call to abstracted procedure
  1793  000712  DAB3               	call	PL4	;call to abstracted procedure
  1794  000714  EC7F  F009         	call	___lwmod	;wreg free
  1795  000718  5035               	movf	?___lwmod^0,w,c
  1796  00071A  0F30               	addlw	48
  1797  00071C  ECC4  F00A         	call	_lcd_putc
  1798                           
  1799                           ;main.c: 229: lcd_putc(0x01);
  1800  000720  0E01               	movlw	1
  1801  000722  ECC4  F00A         	call	_lcd_putc
  1802                           
  1803                           ;main.c: 230: lcd_putc(' ');
  1804  000726  0E20               	movlw	32
  1805  000728  ECC4  F00A         	call	_lcd_putc
  1806                           
  1807                           ;main.c: 231: lcd_putc(' ');
  1808  00072C  0E20               	movlw	32
  1809  00072E  ECC4  F00A         	call	_lcd_putc
  1810                           
  1811                           ;main.c: 232: lcd_putc(' ');
  1812  000732  0E20               	movlw	32
  1813  000734  ECC4  F00A         	call	_lcd_putc
  1814                           
  1815                           ;main.c: 233: lcd_putc(' ');
  1816  000738  0E20               	movlw	32
  1817  00073A  ECC4  F00A         	call	_lcd_putc
  1818                           
  1819                           ;main.c: 234: lcd_putc(' ');
  1820  00073E  0E20               	movlw	32
  1821  000740  ECC4  F00A         	call	_lcd_putc
  1822                           
  1823                           ;main.c: 235: lcd_putc(' ');
  1824  000744  0E20               	movlw	32
  1825  000746  ECC4  F00A         	call	_lcd_putc
  1826  00074A  D007               	goto	l161
  1827  00074C                     l2839:
  1828  00074C  5047               	movf	_sub_main^0,w,c
  1829                           
  1830                           ; Switch size 1, requested type "space"
  1831                           ; Number of cases is 2, Range of values is 1 to 2
  1832                           ; switch strategies available:
  1833                           ; Name         Instructions Cycles
  1834                           ; simple_byte            7     4 (average)
  1835                           ;	Chosen strategy is simple_byte
  1836  00074E  0A01               	xorlw	1	; case 1
  1837  000750  E101 D528          	bz	l2787
  1838  000754  0A03               	xorlw	3	; case 2
  1839  000756  E101 D66E          	bz	l2805
  1840  00075A                     l161:
  1841                           
  1842                           ;main.c: 245: if (sound_yes) {
  1843  00075A  AA4B               	btfss	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  1844  00075C  D04C               	goto	l2865
  1845                           
  1846                           ;main.c: 246: lcd_gotoxy(15, 1);
  1847  00075E  DADB               	call	PL44	;call to abstracted procedure
  1848  000760  EC95  F00A         	call	_lcd_gotoxy
  1849                           
  1850                           ;main.c: 247: lcd_putc(' ');
  1851  000764  0E20               	movlw	32
  1852  000766  ECC4  F00A         	call	_lcd_putc
  1853                           
  1854                           ;main.c: 248: lcd_putc(0xED);
  1855  00076A  0EED               	movlw	237
  1856  00076C  ECC4  F00A         	call	_lcd_putc
  1857                           
  1858                           ;main.c: 249: if (((temperature_1 >= (temp1_fix + set_t_dq1_up)) ||;main.c: 250: (temper
      +                          ature_1 <= (temp1_fix - set_t_dq1_dwn))) &&;main.c: 251: !(temperature_1 == 32767))
  1859  000770  5020               	movf	_set_t_dq1_up^0,w,c
  1860  000772  2417               	addwf	_temp1_fix^0,w,c
  1861  000774  6E3F               	movwf	??_main^0,c
  1862  000776  0E00               	movlw	0
  1863  000778  2018               	addwfc	(_temp1_fix+1)^0,w,c
  1864  00077A  6E40               	movwf	(??_main+1)^0,c
  1865  00077C  503F               	movf	??_main^0,w,c
  1866  00077E  5C44               	subwf	_temperature_1^0,w,c
  1867  000780  5040               	movf	(??_main+1)^0,w,c
  1868  000782  5845               	subwfb	(_temperature_1+1)^0,w,c
  1869  000784  E20B               	bc	u1850
  1870  000786  501F               	movf	_set_t_dq1_dwn^0,w,c
  1871  000788  5C17               	subwf	_temp1_fix^0,w,c
  1872  00078A  6E3F               	movwf	??_main^0,c
  1873  00078C  0E00               	movlw	0
  1874  00078E  5818               	subwfb	(_temp1_fix+1)^0,w,c
  1875  000790  6E40               	movwf	(??_main+1)^0,c
  1876  000792  5044               	movf	_temperature_1^0,w,c
  1877  000794  5C3F               	subwf	??_main^0,w,c
  1878  000796  5045               	movf	(_temperature_1+1)^0,w,c
  1879  000798  5840               	subwfb	(??_main+1)^0,w,c
  1880  00079A  E307               	bnc	l174
  1881  00079C                     u1850:
  1882  00079C  2844               	incf	_temperature_1^0,w,c
  1883  00079E  E103               	bnz	u1860
  1884  0007A0  0E7F               	movlw	127
  1885  0007A2  1845               	xorwf	(_temperature_1+1)^0,w,c
  1886  0007A4  E002               	bz	l174
  1887  0007A6                     u1860:
  1888                           
  1889                           ;main.c: 253: snd_k_b = 1;
  1890  0007A6  824B               	bsf	(_snd_k_b/(0+8))^0,_snd_k_b& (0+7),c
  1891  0007A8  D001               	goto	l2851
  1892  0007AA                     l174:
  1893                           
  1894                           ;main.c: 254: else;main.c: 255: snd_k_b = 0;
  1895  0007AA  924B               	bcf	(_snd_k_b/(0+8))^0,_snd_k_b& (0+7),c
  1896  0007AC                     l2851:
  1897                           
  1898                           ;main.c: 257: if ((temperature_2 >= set_t_dq2) && !(temperature_2 == 32767))
  1899  0007AC  5019               	movf	_set_t_dq2^0,w,c
  1900  0007AE  5C42               	subwf	_temperature_2^0,w,c
  1901  0007B0  501A               	movf	(_set_t_dq2+1)^0,w,c
  1902  0007B2  5843               	subwfb	(_temperature_2+1)^0,w,c
  1903  0007B4  E307               	bnc	l178
  1904  0007B6  2842               	incf	_temperature_2^0,w,c
  1905  0007B8  E103               	bnz	u1880
  1906  0007BA  0E7F               	movlw	127
  1907  0007BC  1843               	xorwf	(_temperature_2+1)^0,w,c
  1908  0007BE  E002               	bz	l178
  1909  0007C0                     u1880:
  1910                           
  1911                           ;main.c: 258: snd_b_b = 1;
  1912  0007C0  804B               	bsf	(_snd_b_b/(0+8))^0,_snd_b_b& (0+7),c
  1913  0007C2  D001               	goto	l179
  1914  0007C4                     l178:
  1915                           
  1916                           ;main.c: 259: else;main.c: 260: snd_b_b = 0;
  1917  0007C4  904B               	bcf	(_snd_b_b/(0+8))^0,_snd_b_b& (0+7),c
  1918  0007C6                     l179:
  1919                           
  1920                           ;main.c: 262: if (snd_k_b && snd_b_b) {
  1921  0007C6  B24B               	btfsc	(_snd_k_b/(0+8))^0,_snd_k_b& (0+7),c
  1922  0007C8  A04B               	btfss	(_snd_b_b/(0+8))^0,_snd_b_b& (0+7),c
  1923  0007CA  D005               	goto	l180
  1924                           
  1925                           ;main.c: 263: en_sound = 1;
  1926  0007CC  8C4B               	bsf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  1927                           
  1928                           ;main.c: 264: snd_k = 0;
  1929  0007CE  984B               	bcf	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  1930                           
  1931                           ;main.c: 265: snd_b = 0;
  1932  0007D0  964B               	bcf	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  1933                           
  1934                           ;main.c: 266: snd_all = 1;
  1935  0007D2  844B               	bsf	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  1936                           
  1937                           ;main.c: 267: }else if(snd_b_b){
  1938  0007D4  D01B               	goto	l2871
  1939  0007D6                     l180:
  1940  0007D6  A04B               	btfss	(_snd_b_b/(0+8))^0,_snd_b_b& (0+7),c
  1941  0007D8  D005               	goto	l182
  1942                           
  1943                           ;main.c: 268: en_sound = 1;
  1944  0007DA  8C4B               	bsf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  1945                           
  1946                           ;main.c: 269: snd_k = 0;
  1947  0007DC  984B               	bcf	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  1948                           
  1949                           ;main.c: 270: snd_all = 0;
  1950  0007DE  944B               	bcf	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  1951                           
  1952                           ;main.c: 271: snd_b = 1;
  1953  0007E0  864B               	bsf	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  1954                           
  1955                           ;main.c: 272: }else if(snd_k_b){
  1956  0007E2  D014               	goto	l2871
  1957  0007E4                     l182:
  1958  0007E4  A24B               	btfss	(_snd_k_b/(0+8))^0,_snd_k_b& (0+7),c
  1959  0007E6  D005               	goto	l184
  1960                           
  1961                           ;main.c: 273: en_sound = 1;
  1962  0007E8  8C4B               	bsf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  1963                           
  1964                           ;main.c: 274: snd_k = 1;
  1965  0007EA  884B               	bsf	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  1966                           
  1967                           ;main.c: 275: snd_all = 0;
  1968  0007EC  944B               	bcf	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  1969                           
  1970                           ;main.c: 276: snd_b = 0;
  1971  0007EE  964B               	bcf	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  1972                           
  1973                           ;main.c: 277: }else
  1974  0007F0  D00D               	goto	l2871
  1975  0007F2                     l184:
  1976                           
  1977                           ;main.c: 278: en_sound = 0;
  1978  0007F2  9C4B               	bcf	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  1979  0007F4  D00B               	goto	l2871
  1980  0007F6                     l2865:
  1981                           
  1982                           ;main.c: 281: lcd_gotoxy(15, 1);
  1983  0007F6  DA8F               	call	PL44	;call to abstracted procedure
  1984  0007F8  EC95  F00A         	call	_lcd_gotoxy
  1985                           
  1986                           ;main.c: 282: lcd_putc(' ');
  1987  0007FC  0E20               	movlw	32
  1988  0007FE  ECC4  F00A         	call	_lcd_putc
  1989                           
  1990                           ;main.c: 283: lcd_putc(0xD5);
  1991  000802  0ED5               	movlw	213
  1992  000804  ECC4  F00A         	call	_lcd_putc
  1993                           
  1994                           ;main.c: 284: LATCbits.LATC4 = 0;
  1995  000808  988B               	bcf	139,4,c	;volatile
  1996  00080A  D7F3               	goto	l184
  1997  00080C                     l2871:
  1998                           
  1999                           ;main.c: 286: };main.c: 289: if (pressed_key == 1) {
  2000  00080C  0422               	decf	_pressed_key^0,w,c
  2001  00080E  E115               	bnz	l2885
  2002                           
  2003                           ;main.c: 290: clearLCD();
  2004  000810  ECA3  F00A         	call	_clearLCD	;wreg free
  2005                           
  2006                           ;main.c: 291: select = 7;
  2007  000814  0E07               	movlw	7
  2008                           
  2009                           ;main.c: 292: lcd_gotoxy(1, 1);
  2010  000816  DA7B               	call	PL42	;call to abstracted procedure
  2011  000818  EC95  F00A         	call	_lcd_gotoxy
  2012                           
  2013                           ;main.c: 293: lcdPrint("Ïîðiã Ñèãí. Led");
  2014  00081C  0E6F               	movlw	low STR_8
  2015  00081E  6E35               	movwf	lcdPrint@t^0,c
  2016  000820  0E1F               	movlw	high STR_8
  2017  000822  6E36               	movwf	(lcdPrint@t+1)^0,c
  2018  000824  EC94  F007         	call	_lcdPrint	;wreg free
  2019                           
  2020                           ;main.c: 294: lcd_gotoxy(1, 2);
  2021  000828  DA50               	call	PL22	;call to abstracted procedure
  2022  00082A  EC95  F00A         	call	_lcd_gotoxy
  2023                           
  2024                           ;main.c: 295: lcdPrint("  1     2   1-2");
  2025  00082E  0E5F               	movlw	low STR_9
  2026  000830  6E35               	movwf	lcdPrint@t^0,c
  2027  000832  0E1F               	movlw	high STR_9
  2028  000834  6E36               	movwf	(lcdPrint@t+1)^0,c
  2029  000836  EC94  F007         	call	_lcdPrint	;wreg free
  2030  00083A                     l2885:
  2031                           
  2032                           ;main.c: 297: };main.c: 299: if (pressed_key == 2) {
  2033  00083A  0E02               	movlw	2
  2034  00083C  1822               	xorwf	_pressed_key^0,w,c
  2035  00083E  E105               	bnz	l2893
  2036                           
  2037                           ;main.c: 300: if (sub_main == 1)
  2038  000840  0447               	decf	_sub_main^0,w,c
  2039                           
  2040                           ;main.c: 301: sub_main = 2;
  2041  000842  0E02               	movlw	2
  2042  000844  A4D8               	btfss	status,2,c
  2043                           
  2044                           ;main.c: 302: else;main.c: 303: sub_main = 1;
  2045  000846  0E01               	movlw	1
  2046  000848  6E47               	movwf	_sub_main^0,c
  2047  00084A                     l2893:
  2048                           
  2049                           ;main.c: 304: };main.c: 306: if (pressed_key == 3) {
  2050  00084A  0E03               	movlw	3
  2051  00084C  1822               	xorwf	_pressed_key^0,w,c
  2052  00084E  E010               	bz	l2901
  2053  000850  D483               	goto	l2775
  2054  000852                     l193:
  2055                           
  2056                           ;main.c: 310: temp1_fix = temperature_1;
  2057  000852  C044  F017         	movff	_temperature_1,_temp1_fix
  2058  000856  C045  F018         	movff	_temperature_1+1,_temp1_fix+1
  2059                           
  2060                           ;main.c: 311: write_eep(20, (temp1_fix >> 8));
  2061  00085A  C018  F02E         	movff	_temp1_fix+1,write_eep@data
  2062  00085E  0E14               	movlw	20
  2063  000860  EC50  F00A         	call	_write_eep
  2064                           
  2065                           ;main.c: 312: write_eep(20 + 1, (uint8_t) temp1_fix);
  2066  000864  C017  F02E         	movff	_temp1_fix,write_eep@data
  2067  000868  0E15               	movlw	21
  2068  00086A  EC50  F00A         	call	_write_eep
  2069                           
  2070                           ;main.c: 313: break;
  2071  00086E  D004               	goto	l2903
  2072  000870                     l2901:
  2073  000870  5047               	movf	_sub_main^0,w,c
  2074                           
  2075                           ; Switch size 1, requested type "space"
  2076                           ; Number of cases is 2, Range of values is 1 to 2
  2077                           ; switch strategies available:
  2078                           ; Name         Instructions Cycles
  2079                           ; simple_byte            7     4 (average)
  2080                           ;	Chosen strategy is simple_byte
  2081  000872  0A01               	xorlw	1	; case 1
  2082  000874  E0EE               	bz	l193
  2083  000876  0A03               	xorlw	3	; case 2
  2084  000878                     l2903:
  2085                           
  2086                           ;main.c: 320: Delay_ms(10);
  2087  000878  DA67               	call	PL58	;call to abstracted procedure
  2088  00087A  EC62  F00A         	call	_Delay_ms	;wreg free
  2089  00087E  D46C               	goto	l2775
  2090  000880                     l2905:
  2091                           
  2092                           ;main.c: 327: lcd_gotoxy(14, 2);
  2093  000880  0E02               	movlw	2
  2094  000882  6E32               	movwf	lcd_gotoxy@y^0,c
  2095  000884  0E0E               	movlw	14
  2096  000886  EC95  F00A         	call	_lcd_gotoxy
  2097                           
  2098                           ;main.c: 328: lcd_putc(dq_num + 48);
  2099  00088A  5046               	movf	_dq_num^0,w,c
  2100  00088C  0F30               	addlw	48
  2101  00088E  ECC4  F00A         	call	_lcd_putc
  2102                           
  2103                           ;main.c: 329: if (pressed_key == 1) {
  2104  000892  0422               	decf	_pressed_key^0,w,c
  2105  000894  E106               	bnz	l2915
  2106                           
  2107                           ;main.c: 330: dq_num++;
  2108  000896  2A46               	incf	_dq_num^0,f,c
  2109                           
  2110                           ;main.c: 331: if (dq_num == 3)
  2111  000898  0E03               	movlw	3
  2112  00089A  1846               	xorwf	_dq_num^0,w,c
  2113  00089C  E102               	bnz	l2915
  2114                           
  2115                           ;main.c: 332: dq_num = 1;
  2116  00089E  0E01               	movlw	1
  2117  0008A0  6E46               	movwf	_dq_num^0,c
  2118  0008A2                     l2915:
  2119                           
  2120                           ;main.c: 333: };main.c: 334: if (pressed_key == 2) {
  2121  0008A2  0E02               	movlw	2
  2122  0008A4  1822               	xorwf	_pressed_key^0,w,c
  2123  0008A6  E105               	bnz	l2923
  2124                           
  2125                           ;main.c: 335: dq_num--;
  2126  0008A8  0646               	decf	_dq_num^0,f,c
  2127                           
  2128                           ;main.c: 336: if (dq_num == 0)
  2129  0008AA  5046               	movf	_dq_num^0,w,c
  2130  0008AC  E102               	bnz	l2923
  2131                           
  2132                           ;main.c: 337: dq_num = 2;
  2133  0008AE  0E02               	movlw	2
  2134  0008B0  6E46               	movwf	_dq_num^0,c
  2135  0008B2                     l2923:
  2136                           
  2137                           ;main.c: 338: };main.c: 339: if (pressed_key == 3) {
  2138  0008B2  0E03               	movlw	3
  2139  0008B4  1822               	xorwf	_pressed_key^0,w,c
  2140  0008B6  E001 D44F          	bnz	l2775
  2141                           
  2142                           ;main.c: 340: if (ds18b20_readrom(dq_num)) {
  2143  0008BA  5046               	movf	_dq_num^0,w,c
  2144  0008BC  ECDB  F008         	call	_ds18b20_readrom
  2145  0008C0  0900               	iorlw	0
  2146  0008C2  E009               	bz	l2931
  2147                           
  2148                           ;main.c: 341: lcd_gotoxy(1, 2);
  2149  0008C4  DA02               	call	PL22	;call to abstracted procedure
  2150  0008C6  EC95  F00A         	call	_lcd_gotoxy
  2151                           
  2152                           ;main.c: 342: lcdPrint(" Êîä ïðî÷èòàíî ");
  2153  0008CA  0E0F               	movlw	low STR_10
  2154  0008CC  6E35               	movwf	lcdPrint@t^0,c
  2155  0008CE  0E1F               	movlw	high STR_10
  2156  0008D0  6E36               	movwf	(lcdPrint@t+1)^0,c
  2157  0008D2  EC94  F007         	call	_lcdPrint	;wreg free
  2158  0008D6                     l2931:
  2159                           
  2160                           ;main.c: 343: };main.c: 345: select = 3;
  2161  0008D6  0E03               	movlw	3
  2162  0008D8  D033               	goto	L2
  2163  0008DA                     l2933:
  2164                           
  2165                           ;main.c: 351: if (pressed_key == 1) {
  2166  0008DA  0422               	decf	_pressed_key^0,w,c
  2167  0008DC  E115               	bnz	l2947
  2168                           
  2169                           ;main.c: 352: clearLCD();
  2170  0008DE  ECA3  F00A         	call	_clearLCD	;wreg free
  2171                           
  2172                           ;main.c: 353: select = 4;
  2173  0008E2  0E04               	movlw	4
  2174                           
  2175                           ;main.c: 354: lcd_gotoxy(1, 1);
  2176  0008E4  DA14               	call	PL42	;call to abstracted procedure
  2177  0008E6  EC95  F00A         	call	_lcd_gotoxy
  2178                           
  2179                           ;main.c: 355: lcdPrint("   Ãðàíèöi   ");
  2180  0008EA  0E9D               	movlw	low STR_11
  2181  0008EC  6E35               	movwf	lcdPrint@t^0,c
  2182  0008EE  0E1F               	movlw	high STR_11
  2183  0008F0  6E36               	movwf	(lcdPrint@t+1)^0,c
  2184  0008F2  EC94  F007         	call	_lcdPrint	;wreg free
  2185                           
  2186                           ;main.c: 356: lcd_gotoxy(1, 2);
  2187  0008F6  D9E9               	call	PL22	;call to abstracted procedure
  2188  0008F8  EC95  F00A         	call	_lcd_gotoxy
  2189                           
  2190                           ;main.c: 357: lcdPrint("Êîë(1)/Êóá(2):");
  2191  0008FC  0E8E               	movlw	low STR_12
  2192  0008FE  6E35               	movwf	lcdPrint@t^0,c
  2193  000900  0E1F               	movlw	high STR_12
  2194  000902  6E36               	movwf	(lcdPrint@t+1)^0,c
  2195  000904  EC94  F007         	call	_lcdPrint	;wreg free
  2196  000908                     l2947:
  2197                           
  2198                           ;main.c: 358: };main.c: 360: if (pressed_key == 2) {
  2199  000908  0E02               	movlw	2
  2200  00090A  1822               	xorwf	_pressed_key^0,w,c
  2201  00090C  E107               	bnz	l2953
  2202                           
  2203                           ;main.c: 361: sound_yes = !(sound_yes);
  2204  00090E  BA4B               	btfsc	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  2205  000910  D002               	goto	u2050
  2206  000912  8A4B               	bsf	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  2207  000914  D001               	goto	u2065
  2208  000916                     u2050:
  2209  000916  9A4B               	bcf	(_sound_yes/(0+8))^0,_sound_yes& (0+7),c
  2210  000918                     u2065:
  2211                           
  2212                           ;main.c: 362: select = 1;
  2213  000918  0E01               	movlw	1
  2214  00091A  6E48               	movwf	_select^0,c
  2215  00091C                     l2953:
  2216                           
  2217                           ;main.c: 363: };main.c: 364: if (pressed_key == 3) {
  2218  00091C  0E03               	movlw	3
  2219  00091E  1822               	xorwf	_pressed_key^0,w,c
  2220  000920  E001 D41A          	bnz	l2775
  2221                           
  2222                           ;main.c: 365: LATCbits.LATC5 = !(LATCbits.LATC5);
  2223  000924  BA8B               	btfsc	139,5,c	;volatile
  2224  000926  D003               	goto	u2080
  2225  000928  6A3F               	clrf	??_main^0,c
  2226  00092A  2A3F               	incf	??_main^0,f,c
  2227  00092C  D001               	goto	u2098
  2228  00092E                     u2080:
  2229  00092E  6A3F               	clrf	??_main^0,c
  2230  000930                     u2098:
  2231  000930  3A3F               	swapf	??_main^0,f,c
  2232  000932  463F               	rlncf	??_main^0,f,c
  2233  000934  508B               	movf	139,w,c	;volatile
  2234  000936  183F               	xorwf	??_main^0,w,c
  2235  000938  0BDF               	andlw	-33
  2236  00093A  183F               	xorwf	??_main^0,w,c
  2237  00093C  6E8B               	movwf	139,c	;volatile
  2238                           
  2239                           ;main.c: 366: select = 1;
  2240  00093E  0E01               	movlw	1
  2241  000940                     L2:
  2242  000940  6E48               	movwf	_select^0,c
  2243  000942  D40A               	goto	l2775
  2244  000944                     l2959:
  2245                           
  2246                           ;main.c: 370: lcd_gotoxy(16, 2);
  2247  000944  0E02               	movlw	2
  2248  000946  6E32               	movwf	lcd_gotoxy@y^0,c
  2249  000948  0E10               	movlw	16
  2250  00094A  EC95  F00A         	call	_lcd_gotoxy
  2251                           
  2252                           ;main.c: 371: lcd_putc(dq_num + 48);
  2253  00094E  5046               	movf	_dq_num^0,w,c
  2254  000950  0F30               	addlw	48
  2255  000952  ECC4  F00A         	call	_lcd_putc
  2256                           
  2257                           ;main.c: 372: if (pressed_key == 1) {
  2258  000956  0422               	decf	_pressed_key^0,w,c
  2259  000958  E106               	bnz	l2969
  2260                           
  2261                           ;main.c: 373: dq_num++;
  2262  00095A  2A46               	incf	_dq_num^0,f,c
  2263                           
  2264                           ;main.c: 374: if (dq_num == 3)
  2265  00095C  0E03               	movlw	3
  2266  00095E  1846               	xorwf	_dq_num^0,w,c
  2267  000960  E102               	bnz	l2969
  2268                           
  2269                           ;main.c: 375: dq_num = 1;
  2270  000962  0E01               	movlw	1
  2271  000964  6E46               	movwf	_dq_num^0,c
  2272  000966                     l2969:
  2273                           
  2274                           ;main.c: 376: };main.c: 377: if (pressed_key == 2) {
  2275  000966  0E02               	movlw	2
  2276  000968  1822               	xorwf	_pressed_key^0,w,c
  2277  00096A  E105               	bnz	l2977
  2278                           
  2279                           ;main.c: 378: dq_num--;
  2280  00096C  0646               	decf	_dq_num^0,f,c
  2281                           
  2282                           ;main.c: 379: if (dq_num == 0)
  2283  00096E  5046               	movf	_dq_num^0,w,c
  2284  000970  E102               	bnz	l2977
  2285                           
  2286                           ;main.c: 380: dq_num = 2;
  2287  000972  0E02               	movlw	2
  2288  000974  6E46               	movwf	_dq_num^0,c
  2289  000976                     l2977:
  2290                           
  2291                           ;main.c: 381: };main.c: 382: if (pressed_key == 3) {
  2292  000976  0E03               	movlw	3
  2293  000978  1822               	xorwf	_pressed_key^0,w,c
  2294  00097A  E002 EFAC  F000    	bnz	l2775
  2295                           
  2296                           ;main.c: 383: if (dq_num == 1) {
  2297  000980  0446               	decf	_dq_num^0,w,c
  2298  000982  E119               	bnz	l2993
  2299                           
  2300                           ;main.c: 384: select = 5;
  2301  000984  0E05               	movlw	5
  2302                           
  2303                           ;main.c: 385: sub_sel = 1;
  2304  000986  D9D8               	call	PL54	;call to abstracted procedure
  2305                           
  2306                           ;main.c: 386: clearLCD();
  2307  000988  ECA3  F00A         	call	_clearLCD	;wreg free
  2308                           
  2309                           ;main.c: 387: lcd_gotoxy(1, 1);
  2310  00098C  0E01               	movlw	1
  2311  00098E  6E32               	movwf	lcd_gotoxy@y^0,c
  2312  000990  EC95  F00A         	call	_lcd_gotoxy
  2313                           
  2314                           ;main.c: 388: lcdPrint("    Êîëîíà  ");
  2315  000994  0EB8               	movlw	low STR_13
  2316  000996  6E35               	movwf	lcdPrint@t^0,c
  2317  000998  0E1F               	movlw	high STR_13
  2318  00099A  6E36               	movwf	(lcdPrint@t+1)^0,c
  2319  00099C  EC94  F007         	call	_lcdPrint	;wreg free
  2320                           
  2321                           ;main.c: 389: lcd_gotoxy(1, 2);
  2322  0009A0  D994               	call	PL22	;call to abstracted procedure
  2323  0009A2  EC95  F00A         	call	_lcd_gotoxy
  2324                           
  2325                           ;main.c: 390: lcdPrint("Òåìï Âåðõ:");
  2326  0009A6  0ED2               	movlw	low STR_14
  2327  0009A8  6E35               	movwf	lcdPrint@t^0,c
  2328  0009AA  0E1F               	movlw	high STR_14
  2329  0009AC  6E36               	movwf	(lcdPrint@t+1)^0,c
  2330  0009AE  EC94  F007         	call	_lcdPrint	;wreg free
  2331                           
  2332                           ;main.c: 391: } else {
  2333  0009B2  EFAC  F000         	goto	l2775
  2334  0009B6                     l2993:
  2335                           
  2336                           ;main.c: 392: select = 6;
  2337  0009B6  0E06               	movlw	6
  2338                           
  2339                           ;main.c: 393: sub_sel = 1;
  2340  0009B8  D9BF               	call	PL54	;call to abstracted procedure
  2341                           
  2342                           ;main.c: 394: clearLCD();
  2343  0009BA  ECA3  F00A         	call	_clearLCD	;wreg free
  2344                           
  2345                           ;main.c: 395: lcd_gotoxy(1, 1);
  2346  0009BE  0E01               	movlw	1
  2347  0009C0  6E32               	movwf	lcd_gotoxy@y^0,c
  2348  0009C2  EC95  F00A         	call	_lcd_gotoxy
  2349                           
  2350                           ;main.c: 396: lcdPrint("    Êóáîâà  ");
  2351  0009C6  0EAB               	movlw	low STR_15
  2352  0009C8  6E35               	movwf	lcdPrint@t^0,c
  2353  0009CA  0E1F               	movlw	high STR_15
  2354  0009CC  6E36               	movwf	(lcdPrint@t+1)^0,c
  2355  0009CE  EC94  F007         	call	_lcdPrint	;wreg free
  2356                           
  2357                           ;main.c: 397: lcd_gotoxy(1, 2);
  2358  0009D2  D97B               	call	PL22	;call to abstracted procedure
  2359  0009D4  EC95  F00A         	call	_lcd_gotoxy
  2360                           
  2361                           ;main.c: 398: lcdPrint("Òåìï öiëi:");
  2362  0009D8  0EDD               	movlw	low STR_16
  2363  0009DA  6E35               	movwf	lcdPrint@t^0,c
  2364  0009DC  0E1F               	movlw	high STR_16
  2365  0009DE  6E36               	movwf	(lcdPrint@t+1)^0,c
  2366  0009E0  EC94  F007         	call	_lcdPrint	;wreg free
  2367                           
  2368                           ;main.c: 399: set_t_dq2_100 = set_t_dq2 / 10;
  2369  0009E4  C019  F02E         	movff	_set_t_dq2,___lwdiv@dividend
  2370  0009E8  C01A  F02F         	movff	_set_t_dq2+1,___lwdiv@dividend+1
  2371  0009EC  6A31               	clrf	(___lwdiv@divisor+1)^0,c
  2372  0009EE  0E0A               	movlw	10
  2373  0009F0  6E30               	movwf	___lwdiv@divisor^0,c
  2374  0009F2  EC5A  F009         	call	___lwdiv	;wreg free
  2375  0009F6  502E               	movf	?___lwdiv^0,w,c
  2376  0009F8  6E1E               	movwf	_set_t_dq2_100^0,c
  2377                           
  2378                           ;main.c: 400: set_t_dq2_10 = set_t_dq2 % 10;
  2379  0009FA  D955               	call	PL12	;call to abstracted procedure
  2380  0009FC  D93E               	call	PL4	;call to abstracted procedure
  2381  0009FE  EC7F  F009         	call	___lwmod	;wreg free
  2382  000A02  5035               	movf	?___lwmod^0,w,c
  2383  000A04  6E1D               	movwf	_set_t_dq2_10^0,c
  2384  000A06  EFAC  F000         	goto	l2775
  2385  000A0A                     l3009:
  2386                           
  2387                           ;main.c: 408: lcd_gotoxy(11, 2);
  2388  000A0A  D98B               	call	PL48	;call to abstracted procedure
  2389  000A0C  EC95  F00A         	call	_lcd_gotoxy
  2390                           
  2391                           ;main.c: 409: lcd_putc('+');
  2392  000A10  0E2B               	movlw	43
  2393  000A12  ECC4  F00A         	call	_lcd_putc
  2394                           
  2395                           ;main.c: 410: lcd_putc(((set_t_dq1_up / 10) % 10) + 48);
  2396  000A16  D976               	call	PL40	;call to abstracted procedure
  2397  000A18  ECF2  F009         	call	___lbdiv
  2398  000A1C  EC3D  F00A         	call	___lbmod
  2399  000A20  0F30               	addlw	48
  2400  000A22  ECC4  F00A         	call	_lcd_putc
  2401                           
  2402                           ;main.c: 411: lcd_putc('.');
  2403  000A26  0E2E               	movlw	46
  2404  000A28  ECC4  F00A         	call	_lcd_putc
  2405                           
  2406                           ;main.c: 412: lcd_putc(((set_t_dq1_up % 10) + 48));
  2407  000A2C  D981               	call	PL52	;call to abstracted procedure
  2408  000A2E  EC3D  F00A         	call	___lbmod
  2409  000A32  0F30               	addlw	48
  2410  000A34  ECC4  F00A         	call	_lcd_putc
  2411                           
  2412                           ;main.c: 414: if (pressed_key == 1) {
  2413  000A38  0422               	decf	_pressed_key^0,w,c
  2414  000A3A  E105               	bnz	l3019
  2415                           
  2416                           ;main.c: 415: set_t_dq1_up++;
  2417  000A3C  2A20               	incf	_set_t_dq1_up^0,f,c
  2418                           
  2419                           ;main.c: 416: if (set_t_dq1_up == 11)
  2420  000A3E  0E0B               	movlw	11
  2421  000A40  1820               	xorwf	_set_t_dq1_up^0,w,c
  2422  000A42  E101               	bnz	l3019
  2423                           
  2424                           ;main.c: 417: set_t_dq1_up = 0;
  2425  000A44  6A20               	clrf	_set_t_dq1_up^0,c
  2426  000A46                     l3019:
  2427                           
  2428                           ;main.c: 418: };main.c: 419: if (pressed_key == 2) {
  2429  000A46  0E02               	movlw	2
  2430  000A48  1822               	xorwf	_pressed_key^0,w,c
  2431  000A4A  E105               	bnz	l3027
  2432                           
  2433                           ;main.c: 420: set_t_dq1_up--;
  2434  000A4C  0620               	decf	_set_t_dq1_up^0,f,c
  2435                           
  2436                           ;main.c: 421: if (set_t_dq1_up == 255)
  2437  000A4E  2820               	incf	_set_t_dq1_up^0,w,c
  2438  000A50  E102               	bnz	l3027
  2439                           
  2440                           ;main.c: 422: set_t_dq1_up = 10;
  2441  000A52  0E0A               	movlw	10
  2442  000A54  6E20               	movwf	_set_t_dq1_up^0,c
  2443  000A56                     l3027:
  2444                           
  2445                           ;main.c: 423: };main.c: 424: if (pressed_key == 3) {
  2446  000A56  0E03               	movlw	3
  2447  000A58  1822               	xorwf	_pressed_key^0,w,c
  2448  000A5A  E002 EFAC  F000    	bnz	l2775
  2449                           
  2450                           ;main.c: 425: sub_sel = 2;
  2451                           
  2452                           ;main.c: 426: lcd_gotoxy(1, 2);
  2453  000A60  D94D               	call	PL38	;call to abstracted procedure
  2454  000A62  EC95  F00A         	call	_lcd_gotoxy
  2455                           
  2456                           ;main.c: 427: lcdPrint("Òåìï Íèç:     ");
  2457  000A66  0E7F               	movlw	low STR_17
  2458  000A68  6E35               	movwf	lcdPrint@t^0,c
  2459  000A6A  0E1F               	movlw	high STR_17
  2460  000A6C  6E36               	movwf	(lcdPrint@t+1)^0,c
  2461  000A6E  EC94  F007         	call	_lcdPrint	;wreg free
  2462  000A72  EFAC  F000         	goto	l2775
  2463  000A76                     l3035:
  2464                           
  2465                           ;main.c: 431: lcd_gotoxy(10, 2);
  2466  000A76  D952               	call	PL46	;call to abstracted procedure
  2467  000A78  EC95  F00A         	call	_lcd_gotoxy
  2468                           
  2469                           ;main.c: 432: lcd_putc('-');
  2470  000A7C  0E2D               	movlw	45
  2471  000A7E  ECC4  F00A         	call	_lcd_putc
  2472                           
  2473                           ;main.c: 433: lcd_putc(((set_t_dq1_dwn / 10) % 10) + 48);
  2474  000A82  D937               	call	PL34	;call to abstracted procedure
  2475  000A84  ECF2  F009         	call	___lbdiv
  2476  000A88  EC3D  F00A         	call	___lbmod
  2477  000A8C  0F30               	addlw	48
  2478  000A8E  ECC4  F00A         	call	_lcd_putc
  2479                           
  2480                           ;main.c: 434: lcd_putc('.');
  2481  000A92  0E2E               	movlw	46
  2482  000A94  ECC4  F00A         	call	_lcd_putc
  2483                           
  2484                           ;main.c: 435: lcd_putc(((set_t_dq1_dwn % 10) + 48));
  2485  000A98  D95B               	call	PL62	;call to abstracted procedure
  2486  000A9A  EC3D  F00A         	call	___lbmod
  2487  000A9E  0F30               	addlw	48
  2488  000AA0  ECC4  F00A         	call	_lcd_putc
  2489                           
  2490                           ;main.c: 437: if (pressed_key == 1) {
  2491  000AA4  0422               	decf	_pressed_key^0,w,c
  2492  000AA6  E105               	bnz	l3045
  2493                           
  2494                           ;main.c: 438: set_t_dq1_dwn++;
  2495  000AA8  2A1F               	incf	_set_t_dq1_dwn^0,f,c
  2496                           
  2497                           ;main.c: 439: if (set_t_dq1_dwn == 11)
  2498  000AAA  0E0B               	movlw	11
  2499  000AAC  181F               	xorwf	_set_t_dq1_dwn^0,w,c
  2500  000AAE  E101               	bnz	l3045
  2501                           
  2502                           ;main.c: 440: set_t_dq1_dwn = 0;
  2503  000AB0  6A1F               	clrf	_set_t_dq1_dwn^0,c
  2504  000AB2                     l3045:
  2505                           
  2506                           ;main.c: 441: };main.c: 442: if (pressed_key == 2) {
  2507  000AB2  0E02               	movlw	2
  2508  000AB4  1822               	xorwf	_pressed_key^0,w,c
  2509  000AB6  E105               	bnz	l3053
  2510                           
  2511                           ;main.c: 443: set_t_dq1_dwn--;
  2512  000AB8  061F               	decf	_set_t_dq1_dwn^0,f,c
  2513                           
  2514                           ;main.c: 444: if (set_t_dq1_dwn == 255)
  2515  000ABA  281F               	incf	_set_t_dq1_dwn^0,w,c
  2516  000ABC  E102               	bnz	l3053
  2517                           
  2518                           ;main.c: 445: set_t_dq1_dwn = 10;
  2519  000ABE  0E0A               	movlw	10
  2520  000AC0  6E1F               	movwf	_set_t_dq1_dwn^0,c
  2521  000AC2                     l3053:
  2522                           
  2523                           ;main.c: 446: };main.c: 447: if (pressed_key == 3) {
  2524  000AC2  0E03               	movlw	3
  2525  000AC4  1822               	xorwf	_pressed_key^0,w,c
  2526  000AC6  E002 EFAC  F000    	bnz	l2775
  2527                           
  2528                           ;main.c: 448: select = 1;
  2529  000ACC  0E01               	movlw	1
  2530  000ACE  6E48               	movwf	_select^0,c
  2531                           
  2532                           ;main.c: 449: write_eep(16, set_t_dq1_up);
  2533  000AD0  C020  F02E         	movff	_set_t_dq1_up,write_eep@data
  2534  000AD4  0E10               	movlw	16
  2535  000AD6  EC50  F00A         	call	_write_eep
  2536                           
  2537                           ;main.c: 450: write_eep(17, set_t_dq1_dwn);
  2538  000ADA  C01F  F02E         	movff	_set_t_dq1_dwn,write_eep@data
  2539  000ADE  0E11               	movlw	17
  2540  000AE0  EC50  F00A         	call	_write_eep
  2541  000AE4  EFAC  F000         	goto	l2775
  2542  000AE8                     l3063:
  2543  000AE8  5021               	movf	_sub_sel^0,w,c
  2544                           
  2545                           ; Switch size 1, requested type "space"
  2546                           ; Number of cases is 2, Range of values is 1 to 2
  2547                           ; switch strategies available:
  2548                           ; Name         Instructions Cycles
  2549                           ; simple_byte            7     4 (average)
  2550                           ;	Chosen strategy is simple_byte
  2551  000AEA  0A01               	xorlw	1	; case 1
  2552  000AEC  E08E               	bz	l3009
  2553  000AEE  0A03               	xorlw	3	; case 2
  2554  000AF0  E0C2               	bz	l3035
  2555  000AF2  EFAC  F000         	goto	l2775
  2556  000AF6                     l3065:
  2557                           
  2558                           ;main.c: 459: lcd_gotoxy(11, 2);
  2559  000AF6  D915               	call	PL48	;call to abstracted procedure
  2560  000AF8  EC95  F00A         	call	_lcd_gotoxy
  2561                           
  2562                           ;main.c: 460: lcd_putc('+');
  2563  000AFC  0E2B               	movlw	43
  2564  000AFE  ECC4  F00A         	call	_lcd_putc
  2565                           
  2566                           ;main.c: 461: lcd_putc(((set_t_dq2_100 / 100) % 10) + 48);
  2567  000B02  D8EC               	call	PL28	;call to abstracted procedure
  2568  000B04  ECF2  F009         	call	___lbdiv
  2569  000B08  EC3D  F00A         	call	___lbmod
  2570  000B0C  0F30               	addlw	48
  2571  000B0E  ECC4  F00A         	call	_lcd_putc
  2572                           
  2573                           ;main.c: 462: lcd_putc(((set_t_dq2_100 / 10) % 10) + 48);
  2574  000B12  D8EA               	call	PL30	;call to abstracted procedure
  2575  000B14  ECF2  F009         	call	___lbdiv
  2576  000B18  EC3D  F00A         	call	___lbmod
  2577  000B1C  0F30               	addlw	48
  2578  000B1E  ECC4  F00A         	call	_lcd_putc
  2579                           
  2580                           ;main.c: 463: lcd_putc(((set_t_dq2_100 % 10) + 48));
  2581  000B22  D90E               	call	PL56	;call to abstracted procedure
  2582  000B24  EC3D  F00A         	call	___lbmod
  2583  000B28  0F30               	addlw	48
  2584  000B2A  ECC4  F00A         	call	_lcd_putc
  2585                           
  2586                           ;main.c: 464: lcd_putc('.');
  2587  000B2E  0E2E               	movlw	46
  2588  000B30  ECC4  F00A         	call	_lcd_putc
  2589                           
  2590                           ;main.c: 465: lcd_putc((set_t_dq2_10 % 10) + 48);
  2591  000B34  D8F9               	call	PL50	;call to abstracted procedure
  2592  000B36  EC3D  F00A         	call	___lbmod
  2593  000B3A  0F30               	addlw	48
  2594  000B3C  ECC4  F00A         	call	_lcd_putc
  2595                           
  2596                           ;main.c: 468: if (pressed_key == 1) {
  2597  000B40  0422               	decf	_pressed_key^0,w,c
  2598  000B42  E105               	bnz	l3075
  2599                           
  2600                           ;main.c: 469: set_t_dq2_100++;
  2601  000B44  2A1E               	incf	_set_t_dq2_100^0,f,c
  2602                           
  2603                           ;main.c: 470: if (set_t_dq2_100 >= 105)
  2604  000B46  0E68               	movlw	104
  2605  000B48  641E               	cpfsgt	_set_t_dq2_100^0,c
  2606  000B4A  D001               	goto	l3075
  2607                           
  2608                           ;main.c: 471: set_t_dq2_100 = 0;
  2609  000B4C  6A1E               	clrf	_set_t_dq2_100^0,c
  2610  000B4E                     l3075:
  2611                           
  2612                           ;main.c: 472: };main.c: 473: if (pressed_key == 2) {
  2613  000B4E  0E02               	movlw	2
  2614  000B50  1822               	xorwf	_pressed_key^0,w,c
  2615  000B52  E105               	bnz	l3083
  2616                           
  2617                           ;main.c: 474: set_t_dq2_100--;
  2618  000B54  061E               	decf	_set_t_dq2_100^0,f,c
  2619                           
  2620                           ;main.c: 475: if (set_t_dq2_100 == 255)
  2621  000B56  281E               	incf	_set_t_dq2_100^0,w,c
  2622  000B58  E102               	bnz	l3083
  2623                           
  2624                           ;main.c: 476: set_t_dq2_100 = 105;
  2625  000B5A  0E69               	movlw	105
  2626  000B5C  6E1E               	movwf	_set_t_dq2_100^0,c
  2627  000B5E                     l3083:
  2628                           
  2629                           ;main.c: 477: };main.c: 478: if (pressed_key == 3) {
  2630  000B5E  0E03               	movlw	3
  2631  000B60  1822               	xorwf	_pressed_key^0,w,c
  2632  000B62  E002 EFAC  F000    	bnz	l2775
  2633                           
  2634                           ;main.c: 479: sub_sel = 2;
  2635                           
  2636                           ;main.c: 480: lcd_gotoxy(1, 2);
  2637  000B68  D8C9               	call	PL38	;call to abstracted procedure
  2638  000B6A  EC95  F00A         	call	_lcd_gotoxy
  2639                           
  2640                           ;main.c: 481: lcdPrint("Òåìï äðá:      ");
  2641  000B6E  0E1F               	movlw	low STR_18
  2642  000B70  6E35               	movwf	lcdPrint@t^0,c
  2643  000B72  0E1F               	movlw	high STR_18
  2644  000B74  6E36               	movwf	(lcdPrint@t+1)^0,c
  2645  000B76  EC94  F007         	call	_lcdPrint	;wreg free
  2646  000B7A  EFAC  F000         	goto	l2775
  2647  000B7E                     l3091:
  2648                           
  2649                           ;main.c: 485: lcd_gotoxy(10, 2);
  2650  000B7E  D8CE               	call	PL46	;call to abstracted procedure
  2651  000B80  EC95  F00A         	call	_lcd_gotoxy
  2652                           
  2653                           ;main.c: 486: lcd_putc('+');
  2654  000B84  0E2B               	movlw	43
  2655  000B86  ECC4  F00A         	call	_lcd_putc
  2656                           
  2657                           ;main.c: 487: lcd_putc(((set_t_dq2_100 / 100) % 10) + 48);
  2658  000B8A  D8A8               	call	PL28	;call to abstracted procedure
  2659  000B8C  ECF2  F009         	call	___lbdiv
  2660  000B90  EC3D  F00A         	call	___lbmod
  2661  000B94  0F30               	addlw	48
  2662  000B96  ECC4  F00A         	call	_lcd_putc
  2663                           
  2664                           ;main.c: 488: lcd_putc(((set_t_dq2_100 / 10) % 10) + 48);
  2665  000B9A  D8A6               	call	PL30	;call to abstracted procedure
  2666  000B9C  ECF2  F009         	call	___lbdiv
  2667  000BA0  EC3D  F00A         	call	___lbmod
  2668  000BA4  0F30               	addlw	48
  2669  000BA6  ECC4  F00A         	call	_lcd_putc
  2670                           
  2671                           ;main.c: 489: lcd_putc(((set_t_dq2_100 % 10) + 48));
  2672  000BAA  D8CA               	call	PL56	;call to abstracted procedure
  2673  000BAC  EC3D  F00A         	call	___lbmod
  2674  000BB0  0F30               	addlw	48
  2675  000BB2  ECC4  F00A         	call	_lcd_putc
  2676                           
  2677                           ;main.c: 490: lcd_putc('.');
  2678  000BB6  0E2E               	movlw	46
  2679  000BB8  ECC4  F00A         	call	_lcd_putc
  2680                           
  2681                           ;main.c: 491: lcd_putc((set_t_dq2_10 % 10) + 48);
  2682  000BBC  D8B5               	call	PL50	;call to abstracted procedure
  2683  000BBE  EC3D  F00A         	call	___lbmod
  2684  000BC2  0F30               	addlw	48
  2685  000BC4  ECC4  F00A         	call	_lcd_putc
  2686                           
  2687                           ;main.c: 492: lcd_putc(' ');
  2688  000BC8  0E20               	movlw	32
  2689  000BCA  ECC4  F00A         	call	_lcd_putc
  2690                           
  2691                           ;main.c: 494: if (pressed_key == 1) {
  2692  000BCE  0422               	decf	_pressed_key^0,w,c
  2693  000BD0  E105               	bnz	l3101
  2694                           
  2695                           ;main.c: 495: set_t_dq2_10++;
  2696  000BD2  2A1D               	incf	_set_t_dq2_10^0,f,c
  2697                           
  2698                           ;main.c: 496: if (set_t_dq2_10 == 10)
  2699  000BD4  0E0A               	movlw	10
  2700  000BD6  181D               	xorwf	_set_t_dq2_10^0,w,c
  2701  000BD8  E101               	bnz	l3101
  2702                           
  2703                           ;main.c: 497: set_t_dq2_10 = 0;
  2704  000BDA  6A1D               	clrf	_set_t_dq2_10^0,c
  2705  000BDC                     l3101:
  2706                           
  2707                           ;main.c: 498: };main.c: 499: if (pressed_key == 2) {
  2708  000BDC  0E02               	movlw	2
  2709  000BDE  1822               	xorwf	_pressed_key^0,w,c
  2710  000BE0  E105               	bnz	l3109
  2711                           
  2712                           ;main.c: 500: set_t_dq2_10--;
  2713  000BE2  061D               	decf	_set_t_dq2_10^0,f,c
  2714                           
  2715                           ;main.c: 501: if (set_t_dq2_10 == 255)
  2716  000BE4  281D               	incf	_set_t_dq2_10^0,w,c
  2717  000BE6  E102               	bnz	l3109
  2718                           
  2719                           ;main.c: 502: set_t_dq2_10 = 9;
  2720  000BE8  0E09               	movlw	9
  2721  000BEA  6E1D               	movwf	_set_t_dq2_10^0,c
  2722  000BEC                     l3109:
  2723                           
  2724                           ;main.c: 503: };main.c: 504: if (pressed_key == 3) {
  2725  000BEC  0E03               	movlw	3
  2726  000BEE  1822               	xorwf	_pressed_key^0,w,c
  2727  000BF0  E002 EFAC  F000    	bnz	l2775
  2728                           
  2729                           ;main.c: 505: select = 1;
  2730  000BF6  0E01               	movlw	1
  2731  000BF8  6E48               	movwf	_select^0,c
  2732                           
  2733                           ;main.c: 506: set_t_dq2 = (set_t_dq2_100 * 10) + set_t_dq2_10;
  2734  000BFA  501E               	movf	_set_t_dq2_100^0,w,c
  2735  000BFC  0D0A               	mullw	10
  2736  000BFE  CFF3 F03F          	movff	prodl,??_main
  2737  000C02  CFF4 F040          	movff	prodh,??_main+1
  2738  000C06  501D               	movf	_set_t_dq2_10^0,w,c
  2739  000C08  243F               	addwf	??_main^0,w,c
  2740  000C0A  6E19               	movwf	_set_t_dq2^0,c
  2741  000C0C  0E00               	movlw	0
  2742  000C0E  2040               	addwfc	(??_main+1)^0,w,c
  2743  000C10  6E1A               	movwf	(_set_t_dq2+1)^0,c
  2744                           
  2745                           ;main.c: 507: write_eep(18, ((unsigned char)(((set_t_dq2)>>8)&0xFF)));
  2746  000C12  C01A  F02E         	movff	_set_t_dq2+1,write_eep@data
  2747  000C16  0E12               	movlw	18
  2748  000C18  EC50  F00A         	call	_write_eep
  2749                           
  2750                           ;main.c: 508: write_eep(19, ((unsigned char)((set_t_dq2)&0xFF)));
  2751  000C1C  C019  F02E         	movff	_set_t_dq2,write_eep@data
  2752  000C20  0E13               	movlw	19
  2753  000C22  EC50  F00A         	call	_write_eep
  2754  000C26  D628               	goto	l2903
  2755  000C28                     l3123:
  2756  000C28  5021               	movf	_sub_sel^0,w,c
  2757                           
  2758                           ; Switch size 1, requested type "space"
  2759                           ; Number of cases is 2, Range of values is 1 to 2
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte            7     4 (average)
  2763                           ;	Chosen strategy is simple_byte
  2764  000C2A  0A01               	xorlw	1	; case 1
  2765  000C2C  E101 D763          	bz	l3065
  2766  000C30  0A03               	xorlw	3	; case 2
  2767  000C32  E0A5               	bz	l3091
  2768  000C34  EFAC  F000         	goto	l2775
  2769  000C38                     l3127:
  2770  000C38  5048               	movf	_select^0,w,c
  2771                           
  2772                           ; Switch size 1, requested type "space"
  2773                           ; Number of cases is 7, Range of values is 1 to 7
  2774                           ; switch strategies available:
  2775                           ; Name         Instructions Cycles
  2776                           ; simple_byte           22    12 (average)
  2777                           ;	Chosen strategy is simple_byte
  2778  000C3A  0A01               	xorlw	1	; case 1
  2779  000C3C  E102 EFB6  F000    	bz	l2783
  2780  000C42  0A03               	xorlw	3	; case 2
  2781  000C44  E101 D61C          	bz	l2905
  2782  000C48  0A01               	xorlw	1	; case 3
  2783  000C4A  E102 EFAC  F000    	bz	l2775
  2784  000C50  0A07               	xorlw	7	; case 4
  2785  000C52  E101 D677          	bz	l2959
  2786  000C56  0A01               	xorlw	1	; case 5
  2787  000C58  E101 D746          	bz	l3063
  2788  000C5C  0A03               	xorlw	3	; case 6
  2789  000C5E  E0E4               	bz	l3123
  2790  000C60  0A01               	xorlw	1	; case 7
  2791  000C62  E101 D63A          	bz	l2933
  2792  000C66  EFAC  F000         	goto	l2775
  2793  000C6A                     __end_of_main:
  2794                           	callstack 0
  2795  000C6A                     PL2:
  2796                           	callstack 25
  2797  000C6A  C02E  F035         	movff	?___lwdiv,___lwmod@dividend
  2798  000C6E  C02F  F036         	movff	?___lwdiv+1,___lwmod@dividend+1
  2799  000C72  6A38               	clrf	(___lwmod@divisor+1)^0,c
  2800  000C74  0E0A               	movlw	10
  2801  000C76  6E37               	movwf	___lwmod@divisor^0,c
  2802  000C78  0C0A               	retlw	10
  2803  000C7A                     __end_ofPL2:
  2804                           	callstack 0
  2805  000C7A                     PL4:
  2806                           	callstack 25
  2807  000C7A  6A38               	clrf	(___lwmod@divisor+1)^0,c
  2808  000C7C  0E0A               	movlw	10
  2809  000C7E  6E37               	movwf	___lwmod@divisor^0,c
  2810  000C80  0C0A               	retlw	10
  2811  000C82                     __end_ofPL4:
  2812                           	callstack 0
  2813  000C82                     PL6:
  2814                           	callstack 25
  2815  000C82  6E30               	movwf	___lwdiv@divisor^0,c
  2816  000C84  C019  F02E         	movff	_set_t_dq2,___lwdiv@dividend
  2817  000C88  C01A  F02F         	movff	_set_t_dq2+1,___lwdiv@dividend+1
  2818  000C8C  0012               	return	
  2819  000C8E                     __end_ofPL6:
  2820                           	callstack 0
  2821  000C8E                     PL8:
  2822                           	callstack 25
  2823  000C8E  6E30               	movwf	___lwdiv@divisor^0,c
  2824  000C90  C044  F02E         	movff	_temperature_1,___lwdiv@dividend
  2825  000C94  C045  F02F         	movff	_temperature_1+1,___lwdiv@dividend+1
  2826  000C98  0012               	return	
  2827  000C9A                     __end_ofPL8:
  2828                           	callstack 0
  2829  000C9A                     PL10:
  2830                           	callstack 25
  2831  000C9A  6E30               	movwf	___lwdiv@divisor^0,c
  2832  000C9C  C042  F02E         	movff	_temperature_2,___lwdiv@dividend
  2833  000CA0  C043  F02F         	movff	_temperature_2+1,___lwdiv@dividend+1
  2834  000CA4  0012               	return	
  2835  000CA6                     __end_ofPL10:
  2836                           	callstack 0
  2837  000CA6                     PL12:
  2838                           	callstack 25
  2839  000CA6  C019  F035         	movff	_set_t_dq2,___lwmod@dividend
  2840  000CAA  C01A  F036         	movff	_set_t_dq2+1,___lwmod@dividend+1
  2841  000CAE  0012               	return	
  2842  000CB0                     __end_ofPL12:
  2843                           	callstack 0
  2844  000CB0                     PL16:
  2845                           	callstack 25
  2846  000CB0  C044  F035         	movff	_temperature_1,___lwmod@dividend
  2847  000CB4  C045  F036         	movff	_temperature_1+1,___lwmod@dividend+1
  2848  000CB8  0012               	return	
  2849  000CBA                     __end_ofPL16:
  2850                           	callstack 0
  2851  000CBA                     PL18:
  2852                           	callstack 25
  2853  000CBA  C042  F035         	movff	_temperature_2,___lwmod@dividend
  2854  000CBE  C043  F036         	movff	_temperature_2+1,___lwmod@dividend+1
  2855  000CC2  0012               	return	
  2856  000CC4                     __end_ofPL18:
  2857                           	callstack 0
  2858  000CC4                     PL20:
  2859                           	callstack 25
  2860  000CC4  0E03               	movlw	3
  2861  000CC6  6E31               	movwf	(___lwdiv@divisor+1)^0,c
  2862  000CC8  0CE8               	retlw	232
  2863  000CCA                     __end_ofPL20:
  2864                           	callstack 0
  2865  000CCA                     PL22:
  2866                           	callstack 25
  2867  000CCA  0E02               	movlw	2
  2868  000CCC  6E32               	movwf	lcd_gotoxy@y^0,c
  2869  000CCE  0C01               	retlw	1
  2870  000CD0                     __end_ofPL22:
  2871                           	callstack 0
  2872  000CD0                     PL26:
  2873                           	callstack 25
  2874  000CD0  6E30               	movwf	___lwdiv@divisor^0,c
  2875  000CD2  C017  F02E         	movff	_temp1_fix,___lwdiv@dividend
  2876  000CD6  C018  F02F         	movff	_temp1_fix+1,___lwdiv@dividend+1
  2877  000CDA  0012               	return	
  2878  000CDC                     __end_ofPL26:
  2879                           	callstack 0
  2880  000CDC                     PL28:
  2881                           	callstack 25
  2882  000CDC  0E0A               	movlw	10
  2883  000CDE  6E32               	movwf	___lbmod@divisor^0,c
  2884  000CE0  0E64               	movlw	100
  2885  000CE2  6E2E               	movwf	___lbdiv@divisor^0,c
  2886  000CE4  501E               	movf	_set_t_dq2_100^0,w,c
  2887  000CE6  0012               	return	
  2888  000CE8                     __end_ofPL28:
  2889                           	callstack 0
  2890  000CE8                     PL30:
  2891                           	callstack 25
  2892  000CE8  0E0A               	movlw	10
  2893  000CEA  6E32               	movwf	___lbmod@divisor^0,c
  2894  000CEC  6E2E               	movwf	___lbdiv@divisor^0,c
  2895  000CEE  501E               	movf	_set_t_dq2_100^0,w,c
  2896  000CF0  0012               	return	
  2897  000CF2                     __end_ofPL30:
  2898                           	callstack 0
  2899  000CF2                     PL34:
  2900                           	callstack 25
  2901  000CF2  0E0A               	movlw	10
  2902  000CF4  6E32               	movwf	___lbmod@divisor^0,c
  2903  000CF6  6E2E               	movwf	___lbdiv@divisor^0,c
  2904  000CF8  501F               	movf	_set_t_dq1_dwn^0,w,c
  2905  000CFA  0012               	return	
  2906  000CFC                     __end_ofPL34:
  2907                           	callstack 0
  2908  000CFC                     PL38:
  2909                           	callstack 25
  2910  000CFC  0E02               	movlw	2
  2911  000CFE  6E21               	movwf	_sub_sel^0,c
  2912  000D00  6E32               	movwf	lcd_gotoxy@y^0,c
  2913  000D02  0C01               	retlw	1
  2914  000D04                     __end_ofPL38:
  2915                           	callstack 0
  2916  000D04                     PL40:
  2917                           	callstack 25
  2918  000D04  0E0A               	movlw	10
  2919  000D06  6E32               	movwf	___lbmod@divisor^0,c
  2920  000D08  6E2E               	movwf	___lbdiv@divisor^0,c
  2921  000D0A  5020               	movf	_set_t_dq1_up^0,w,c
  2922  000D0C  0012               	return	
  2923  000D0E                     __end_ofPL40:
  2924                           	callstack 0
  2925  000D0E                     PL42:
  2926                           	callstack 25
  2927  000D0E  6E48               	movwf	_select^0,c
  2928  000D10  0E01               	movlw	1
  2929  000D12  6E32               	movwf	lcd_gotoxy@y^0,c
  2930  000D14  0C01               	retlw	1
  2931  000D16                     __end_ofPL42:
  2932                           	callstack 0
  2933  000D16                     PL44:
  2934                           	callstack 25
  2935  000D16  0E01               	movlw	1
  2936  000D18  6E32               	movwf	lcd_gotoxy@y^0,c
  2937  000D1A  0C0F               	retlw	15
  2938  000D1C                     __end_ofPL44:
  2939                           	callstack 0
  2940  000D1C                     PL46:
  2941                           	callstack 25
  2942  000D1C  0E02               	movlw	2
  2943  000D1E  6E32               	movwf	lcd_gotoxy@y^0,c
  2944  000D20  0C0A               	retlw	10
  2945  000D22                     __end_ofPL46:
  2946                           	callstack 0
  2947  000D22                     PL48:
  2948                           	callstack 25
  2949  000D22  0E02               	movlw	2
  2950  000D24  6E32               	movwf	lcd_gotoxy@y^0,c
  2951  000D26  0C0B               	retlw	11
  2952  000D28                     __end_ofPL48:
  2953                           	callstack 0
  2954  000D28                     PL50:
  2955                           	callstack 25
  2956  000D28  0E0A               	movlw	10
  2957  000D2A  6E32               	movwf	___lbmod@divisor^0,c
  2958  000D2C  501D               	movf	_set_t_dq2_10^0,w,c
  2959  000D2E  0012               	return	
  2960  000D30                     __end_ofPL50:
  2961                           	callstack 0
  2962  000D30                     PL52:
  2963                           	callstack 25
  2964  000D30  0E0A               	movlw	10
  2965  000D32  6E32               	movwf	___lbmod@divisor^0,c
  2966  000D34  5020               	movf	_set_t_dq1_up^0,w,c
  2967  000D36  0012               	return	
  2968  000D38                     __end_ofPL52:
  2969                           	callstack 0
  2970  000D38                     PL54:
  2971                           	callstack 25
  2972  000D38  6E48               	movwf	_select^0,c
  2973  000D3A  0E01               	movlw	1
  2974  000D3C  6E21               	movwf	_sub_sel^0,c
  2975  000D3E  0C01               	retlw	1
  2976  000D40                     __end_ofPL54:
  2977                           	callstack 0
  2978  000D40                     PL56:
  2979                           	callstack 25
  2980  000D40  0E0A               	movlw	10
  2981  000D42  6E32               	movwf	___lbmod@divisor^0,c
  2982  000D44  501E               	movf	_set_t_dq2_100^0,w,c
  2983  000D46  0012               	return	
  2984  000D48                     __end_ofPL56:
  2985                           	callstack 0
  2986  000D48                     PL58:
  2987                           	callstack 27
  2988  000D48  6A2F               	clrf	(Delay_ms@delay+1)^0,c
  2989  000D4A  0E0A               	movlw	10
  2990  000D4C  6E2E               	movwf	Delay_ms@delay^0,c
  2991  000D4E  0C0A               	retlw	10
  2992  000D50                     __end_ofPL58:
  2993                           	callstack 0
  2994  000D50                     PL62:
  2995                           	callstack 25
  2996  000D50  0E0A               	movlw	10
  2997  000D52  6E32               	movwf	___lbmod@divisor^0,c
  2998  000D54  501F               	movf	_set_t_dq1_dwn^0,w,c
  2999  000D56  0012               	return	
  3000  000D58                     __end_ofPL62:
  3001                           	callstack 0
  3002                           
  3003 ;; *************** function _lcd_putc *****************
  3004 ;; Defined at:
  3005 ;;		line 90 in file "hd44780.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  c               1    wreg     unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  c               1    4[COMRAM] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1
  3019 ;;      Params:         0       0       0
  3020 ;;      Locals:         1       0       0
  3021 ;;      Temps:          0       0       0
  3022 ;;      Totals:         1       0       0
  3023 ;;Total ram usage:        1 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    3
  3026 ;; This function calls:
  3027 ;;		_lcdWrite
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text1
  3034  001588                     __ptext1:
  3035                           	callstack 0
  3036  001588                     _lcd_putc:
  3037                           	callstack 27
  3038                           
  3039                           ;incstack = 0
  3040                           ;lcd_putc@c stored from wreg
  3041  001588  6E32               	movwf	lcd_putc@c^0,c
  3042                           
  3043                           ;hd44780.c: 92: lcdWrite(c, DATA);
  3044  00158A  0E01               	movlw	1
  3045  00158C  6E30               	movwf	lcdWrite@type^0,c
  3046  00158E  5032               	movf	lcd_putc@c^0,w,c
  3047  001590  EF74  F00A         	goto	_lcdWrite
  3048  001594                     __end_of_lcd_putc:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _lcdPrint *****************
  3052 ;; Defined at:
  3053 ;;		line 96 in file "hd44780.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  t               2    7[COMRAM] PTR const unsigned char 
  3056 ;;		 -> STR_18(16), STR_17(15), STR_16(11), STR_15(13), 
  3057 ;;		 -> STR_14(11), STR_13(13), STR_12(15), STR_11(14), 
  3058 ;;		 -> STR_10(16), STR_9(16), STR_8(16), STR_7(7), 
  3059 ;;		 -> STR_6(8), STR_5(8), STR_4(13), STR_3(16), 
  3060 ;;		 -> STR_2(16), STR_1(16), 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1
  3072 ;;      Params:         2       0       0
  3073 ;;      Locals:         0       0       0
  3074 ;;      Temps:          4       0       0
  3075 ;;      Totals:         6       0       0
  3076 ;;Total ram usage:        6 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    4
  3079 ;; This function calls:
  3080 ;;		_lcdWrite
  3081 ;;		_lcd_gotoxy
  3082 ;; This function is called by:
  3083 ;;		_main
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text2
  3088  000F28                     __ptext2:
  3089                           	callstack 0
  3090  000F28                     _lcdPrint:
  3091                           	callstack 26
  3092                           
  3093                           ;hd44780.c: 97: while(*t != '\0'){
  3094                           
  3095                           ;incstack = 0
  3096  000F28  D046               	goto	l2503
  3097  000F2A                     l2483:
  3098                           
  3099                           ;hd44780.c: 100: lcdWrite(1, COMMAND);
  3100  000F2A  D84F               	call	PL60	;call to abstracted procedure
  3101  000F2C  EC74  F00A         	call	_lcdWrite
  3102                           
  3103                           ;hd44780.c: 101: _delay((unsigned long)((2)*(8000000/4000.0)));
  3104  000F30  0E06               	movlw	6
  3105  000F32  6E37               	movwf	??_lcdPrint^0,c
  3106  000F34  0E30               	movlw	48
  3107  000F36                     u2367:
  3108  000F36  2EE8               	decfsz	wreg,f,c
  3109  000F38  D7FE               	bra	u2367
  3110  000F3A  2E37               	decfsz	??_lcdPrint^0,f,c
  3111  000F3C  D7FC               	bra	u2367
  3112  000F3E  D000               	nop2	
  3113                           
  3114                           ;hd44780.c: 102: break;
  3115  000F40  D038               	goto	l2501
  3116  000F42                     l2487:
  3117                           
  3118                           ;hd44780.c: 105: lcd_gotoxy(1, 2);
  3119  000F42  EC65  F006         	call	PL22	;call to abstracted procedure
  3120  000F46  EC95  F00A         	call	_lcd_gotoxy
  3121                           
  3122                           ;hd44780.c: 106: break;
  3123  000F4A  D033               	goto	l2501
  3124  000F4C                     l2489:
  3125                           
  3126                           ;hd44780.c: 109: lcdWrite(0x10, COMMAND);
  3127  000F4C  0E00               	movlw	0
  3128  000F4E  6E30               	movwf	lcdWrite@type^0,c
  3129  000F50  0E10               	movlw	16
  3130  000F52  EC74  F00A         	call	_lcdWrite
  3131                           
  3132                           ;hd44780.c: 110: break;
  3133  000F56  D02D               	goto	l2501
  3134  000F58                     l2491:
  3135                           
  3136                           ;hd44780.c: 113: if (*t < 0xC0) {
  3137  000F58  C035  FFF6         	movff	lcdPrint@t,tblptrl
  3138  000F5C  C036  FFF7         	movff	lcdPrint@t+1,tblptrh
  3139  000F60                     	if	0	;tblptru may be non-zero
  3140  000F60                     	endif
  3141  000F60                     	if	0	;tblptru may be non-zero
  3142  000F60                     	endif
  3143  000F60  0EC0               	movlw	192
  3144  000F62  0008               	tblrd		*
  3145  000F64  60F5               	cpfslt	tablat,c
  3146  000F66  D006               	goto	l2495
  3147                           
  3148                           ;hd44780.c: 114: lcdWrite(*t, DATA);
  3149  000F68  0E01               	movlw	1
  3150  000F6A  6E30               	movwf	lcdWrite@type^0,c
  3151  000F6C  D827               	call	PL14	;call to abstracted procedure
  3152  000F6E  EC74  F00A         	call	_lcdWrite
  3153                           
  3154                           ;hd44780.c: 115: } else {
  3155  000F72  D01F               	goto	l2501
  3156  000F74                     l2495:
  3157                           
  3158                           ;hd44780.c: 116: lcdWrite(HD44780_CYR[(unsigned char) (*t) - 0xC0], DATA);
  3159  000F74  0E01               	movlw	1
  3160  000F76  6E30               	movwf	lcdWrite@type^0,c
  3161  000F78  0E40               	movlw	64
  3162  000F7A  6E37               	movwf	??_lcdPrint^0,c
  3163  000F7C  6838               	setf	(??_lcdPrint+1)^0,c
  3164  000F7E  D81E               	call	PL14	;call to abstracted procedure
  3165  000F80  6E39               	movwf	(??_lcdPrint+2)^0,c
  3166  000F82  6A3A               	clrf	(??_lcdPrint+3)^0,c
  3167  000F84  5037               	movf	??_lcdPrint^0,w,c
  3168  000F86  2639               	addwf	(??_lcdPrint+2)^0,f,c
  3169  000F88  5038               	movf	(??_lcdPrint+1)^0,w,c
  3170  000F8A  223A               	addwfc	(??_lcdPrint+3)^0,f,c
  3171  000F8C  0EB7               	movlw	low _HD44780_CYR
  3172  000F8E  2439               	addwf	(??_lcdPrint+2)^0,w,c
  3173  000F90  6EF6               	movwf	tblptrl,c
  3174  000F92  0E1E               	movlw	high _HD44780_CYR
  3175  000F94  203A               	addwfc	(??_lcdPrint+3)^0,w,c
  3176  000F96  6EF7               	movwf	tblptrh,c
  3177  000F98                     	if	0	;There are less than 3 active tblptr bytes
  3178  000F98                     	endif
  3179  000F98  0008               	tblrd		*
  3180  000F9A  50F5               	movf	tablat,w,c
  3181  000F9C  EC74  F00A         	call	_lcdWrite
  3182  000FA0  D008               	goto	l2501
  3183  000FA2                     l2499:
  3184  000FA2  D80C               	call	PL14	;call to abstracted procedure
  3185                           
  3186                           ; Switch size 1, requested type "space"
  3187                           ; Number of cases is 3, Range of values is 8 to 12
  3188                           ; switch strategies available:
  3189                           ; Name         Instructions Cycles
  3190                           ; simple_byte           10     6 (average)
  3191                           ;	Chosen strategy is simple_byte
  3192  000FA4  0A08               	xorlw	8	; case 8
  3193  000FA6  E0D2               	bz	l2489
  3194  000FA8  0A02               	xorlw	2	; case 10
  3195  000FAA  E0CB               	bz	l2487
  3196  000FAC  0A06               	xorlw	6	; case 12
  3197  000FAE  E0BD               	bz	l2483
  3198  000FB0  D7D3               	goto	l2491
  3199  000FB2                     l2501:
  3200                           
  3201                           ;hd44780.c: 121: *t++;
  3202  000FB2  4A35               	infsnz	lcdPrint@t^0,f,c
  3203  000FB4  2A36               	incf	(lcdPrint@t+1)^0,f,c
  3204  000FB6                     l2503:
  3205  000FB6  D802               	call	PL14	;call to abstracted procedure
  3206  000FB8  E1F4               	bnz	l2499
  3207  000FBA  0012               	return		;funcret
  3208  000FBC                     __end_of_lcdPrint:
  3209                           	callstack 0
  3210  000FBC                     PL14:
  3211                           	callstack 26
  3212  000FBC  C035  FFF6         	movff	lcdPrint@t,tblptrl
  3213  000FC0  C036  FFF7         	movff	lcdPrint@t+1,tblptrh
  3214  000FC4                     	if	0	;tblptru may be non-zero
  3215  000FC4                     	endif
  3216  000FC4                     	if	0	;tblptru may be non-zero
  3217  000FC4                     	endif
  3218  000FC4  0008               	tblrd		*
  3219  000FC6  50F5               	movf	tablat,w,c
  3220  000FC8  0012               	return	
  3221  000FCA                     __end_ofPL14:
  3222                           	callstack 0
  3223  000FCA                     PL60:
  3224                           	callstack 27
  3225  000FCA  0E00               	movlw	0
  3226  000FCC  6E30               	movwf	lcdWrite@type^0,c
  3227  000FCE  0C01               	retlw	1
  3228  000FD0                     __end_ofPL60:
  3229                           	callstack 0
  3230                           
  3231 ;; *************** function _lcd_gotoxy *****************
  3232 ;; Defined at:
  3233 ;;		line 76 in file "hd44780.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  x               1    wreg     unsigned char 
  3236 ;;  y               1    4[COMRAM] unsigned char 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  x               1    5[COMRAM] unsigned char 
  3239 ;;  address         1    6[COMRAM] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1
  3249 ;;      Params:         1       0       0
  3250 ;;      Locals:         2       0       0
  3251 ;;      Temps:          0       0       0
  3252 ;;      Totals:         3       0       0
  3253 ;;Total ram usage:        3 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    3
  3256 ;; This function calls:
  3257 ;;		_lcdWrite
  3258 ;; This function is called by:
  3259 ;;		_main
  3260 ;;		_lcdPrint
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text3
  3265  00152A                     __ptext3:
  3266                           	callstack 0
  3267  00152A                     _lcd_gotoxy:
  3268                           	callstack 27
  3269                           
  3270                           ;incstack = 0
  3271                           ;lcd_gotoxy@x stored from wreg
  3272  00152A  6E33               	movwf	lcd_gotoxy@x^0,c
  3273                           
  3274                           ;hd44780.c: 77: uint8_t address;;hd44780.c: 79: if (y != 1)
  3275  00152C  0432               	decf	lcd_gotoxy@y^0,w,c
  3276  00152E  E003               	bz	l390
  3277                           
  3278                           ;hd44780.c: 80: address = 0x40;
  3279  001530  0E40               	movlw	64
  3280  001532  6E34               	movwf	lcd_gotoxy@address^0,c
  3281  001534  D001               	goto	l2291
  3282  001536                     l390:
  3283                           
  3284                           ;hd44780.c: 81: else;hd44780.c: 82: address = 0;
  3285  001536  6A34               	clrf	lcd_gotoxy@address^0,c
  3286  001538                     l2291:
  3287                           
  3288                           ;hd44780.c: 84: address += x - 1;
  3289  001538  0433               	decf	lcd_gotoxy@x^0,w,c
  3290  00153A  2634               	addwf	lcd_gotoxy@address^0,f,c
  3291                           
  3292                           ;hd44780.c: 85: lcdWrite(0x80 | address, COMMAND);
  3293  00153C  6A30               	clrf	lcdWrite@type^0,c
  3294  00153E  5034               	movf	lcd_gotoxy@address^0,w,c
  3295  001540  0980               	iorlw	128
  3296  001542  EF74  F00A         	goto	_lcdWrite
  3297  001546                     __end_of_lcd_gotoxy:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _key_press *****************
  3301 ;; Defined at:
  3302 ;;		line 5 in file "key.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  key             1    0[COMRAM] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1
  3316 ;;      Params:         0       0       0
  3317 ;;      Locals:         1       0       0
  3318 ;;      Temps:          0       0       0
  3319 ;;      Totals:         1       0       0
  3320 ;;Total ram usage:        1 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    1
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text4
  3331  00121C                     __ptext4:
  3332                           	callstack 0
  3333  00121C                     _key_press:
  3334                           	callstack 29
  3335                           
  3336                           ;key.c: 7: static uint16_t count = 0;;key.c: 8: uint8_t key;;key.c: 9: if (((PORTB & (1 
      +                          << 1)) == 0) && ((PORTB & (1 << 2)) == 0))
  3337                           
  3338                           ;incstack = 0
  3339  00121C  A281               	btfss	129,1,c	;volatile
  3340  00121E  B481               	btfsc	129,2,c	;volatile
  3341  001220  D002               	goto	l483
  3342                           
  3343                           ;key.c: 10: key = 3;
  3344  001222  0E03               	movlw	3
  3345  001224  D007               	goto	L4
  3346  001226                     l483:
  3347                           
  3348                           ;key.c: 11: else if ((PORTB & (1 << 1)) == 0)
  3349  001226  B281               	btfsc	129,1,c	;volatile
  3350  001228  D002               	goto	l485
  3351                           
  3352                           ;key.c: 12: key = 1;
  3353  00122A  0E01               	movlw	1
  3354  00122C  D003               	goto	L4
  3355  00122E                     l485:
  3356                           
  3357                           ;key.c: 13: else if ((PORTB & (1 << 2)) == 0)
  3358  00122E  B481               	btfsc	129,2,c	;volatile
  3359  001230  D003               	goto	l487
  3360                           
  3361                           ;key.c: 14: key = 2;
  3362  001232  0E02               	movlw	2
  3363  001234                     L4:
  3364  001234  6E2E               	movwf	key_press@key^0,c
  3365  001236  D001               	goto	l1567
  3366  001238                     l487:
  3367                           
  3368                           ;key.c: 15: else;key.c: 16: key = 0;
  3369  001238  6A2E               	clrf	key_press@key^0,c
  3370  00123A                     l1567:
  3371                           
  3372                           ;key.c: 19: if (key) {
  3373  00123A  502E               	movf	key_press@key^0,w,c
  3374  00123C  E013               	bz	l489
  3375                           
  3376                           ;key.c: 20: if (count > 300) {
  3377  00123E  0E2D               	movlw	45
  3378  001240  5C15               	subwf	key_press@count^0,w,c
  3379  001242  0E01               	movlw	1
  3380  001244  5816               	subwfb	(key_press@count+1)^0,w,c
  3381  001246  E307               	bnc	l1579
  3382                           
  3383                           ;key.c: 21: count = 300 - 10;
  3384  001248  0E01               	movlw	1
  3385  00124A  6E16               	movwf	(key_press@count+1)^0,c
  3386  00124C  0E22               	movlw	34
  3387  00124E  6E15               	movwf	key_press@count^0,c
  3388  001250                     l1573:
  3389                           
  3390                           ;key.c: 22: key_pressed = key;
  3391  001250  C02E  F01B         	movff	key_press@key,_key_pressed	;volatile
  3392  001254  0012               	return	
  3393  001256                     l1579:
  3394  001256  4A15               	infsnz	key_press@count^0,f,c
  3395  001258  2A16               	incf	(key_press@count+1)^0,f,c
  3396                           
  3397                           ;key.c: 26: if (count == 15) {
  3398  00125A  0E0F               	movlw	15
  3399  00125C  1815               	xorwf	key_press@count^0,w,c
  3400  00125E  1016               	iorwf	(key_press@count+1)^0,w,c
  3401  001260  E0F7               	bz	l1573
  3402  001262  0012               	return	
  3403  001264                     l489:
  3404  001264  6A15               	clrf	key_press@count^0,c
  3405  001266  6A16               	clrf	(key_press@count+1)^0,c
  3406  001268  0012               	return		;funcret
  3407  00126A                     __end_of_key_press:
  3408                           	callstack 0
  3409                           
  3410 ;; *************** function _key_GetKey *****************
  3411 ;; Defined at:
  3412 ;;		line 48 in file "key.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  key             1    0[COMRAM] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      unsigned char 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1
  3426 ;;      Params:         0       0       0
  3427 ;;      Locals:         1       0       0
  3428 ;;      Temps:          0       0       0
  3429 ;;      Totals:         1       0       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    1
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text5
  3441  001594                     __ptext5:
  3442                           	callstack 0
  3443  001594                     _key_GetKey:
  3444                           	callstack 29
  3445                           
  3446                           ;key.c: 50: uint8_t key = key_pressed;
  3447                           
  3448                           ;incstack = 0
  3449  001594  C01B  F02E         	movff	_key_pressed,key_GetKey@key	;volatile
  3450                           
  3451                           ;key.c: 52: key_pressed = 0;
  3452  001598  6A1B               	clrf	_key_pressed^0,c	;volatile
  3453                           
  3454                           ;key.c: 53: return key;
  3455  00159A  502E               	movf	key_GetKey@key^0,w,c
  3456  00159C  0012               	return		;funcret
  3457  00159E                     __end_of_key_GetKey:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function _ds18b20_readrom *****************
  3461 ;; Defined at:
  3462 ;;		line 170 in file "ds18b20.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  num_dq          1    wreg     unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  num_dq          1   15[COMRAM] unsigned char 
  3467 ;;  temp_rom        8    7[COMRAM] unsigned char [8]
  3468 ;;  i               1   16[COMRAM] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      unsigned char 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1
  3478 ;;      Params:         0       0       0
  3479 ;;      Locals:        10       0       0
  3480 ;;      Temps:          0       0       0
  3481 ;;      Totals:        10       0       0
  3482 ;;Total ram usage:       10 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    3
  3485 ;; This function calls:
  3486 ;;		_Delay_ms
  3487 ;;		_ds18b20_crc8
  3488 ;;		_ow_reset
  3489 ;;		_read_byte
  3490 ;;		_write_byte
  3491 ;;		_write_eep
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text6
  3498  0011B6                     __ptext6:
  3499                           	callstack 0
  3500  0011B6                     _ds18b20_readrom:
  3501                           	callstack 27
  3502                           
  3503                           ;incstack = 0
  3504                           ;ds18b20_readrom@num_dq stored from wreg
  3505  0011B6  6E3D               	movwf	ds18b20_readrom@num_dq^0,c
  3506                           
  3507                           ;ds18b20.c: 171: uint8_t i;;ds18b20.c: 172: uint8_t temp_rom[8];;ds18b20.c: 174: if (!ow
      +                          _reset())
  3508  0011B8  EC25  F00A         	call	_ow_reset	;wreg free
  3509  0011BC  0900               	iorlw	0
  3510  0011BE  E10C               	bnz	u1590
  3511                           
  3512                           ;ds18b20.c: 175: {;ds18b20.c: 176: write_byte(0x33);
  3513  0011C0  0E33               	movlw	51
  3514  0011C2  ECD7  F009         	call	_write_byte
  3515                           
  3516                           ;ds18b20.c: 177: for (i = 0; i < 8; i++) {
  3517  0011C6  6A3E               	clrf	ds18b20_readrom@i^0,c
  3518  0011C8                     l2627:
  3519                           
  3520                           ;ds18b20.c: 178: temp_rom[i] = read_byte();
  3521  0011C8  D824               	call	PL36	;call to abstracted procedure
  3522  0011CA  ECBC  F009         	call	_read_byte	;wreg free
  3523  0011CE  6EDF               	movwf	indf2,c
  3524  0011D0  2A3E               	incf	ds18b20_readrom@i^0,f,c
  3525  0011D2  0E07               	movlw	7
  3526  0011D4  643E               	cpfsgt	ds18b20_readrom@i^0,c
  3527  0011D6  D7F8               	goto	l2627
  3528  0011D8                     u1590:
  3529                           
  3530                           ;ds18b20.c: 179: };ds18b20.c: 180: };ds18b20.c: 181: if (!(ds18b20_crc8(temp_rom, 8))) {
  3531  0011D8  0E35               	movlw	low ds18b20_readrom@temp_rom
  3532  0011DA  6E2E               	movwf	ds18b20_crc8@data_in^0,c
  3533  0011DC  0E08               	movlw	8
  3534  0011DE  6E2F               	movwf	ds18b20_crc8@num_bytes^0,c
  3535  0011E0  EC35  F009         	call	_ds18b20_crc8	;wreg free
  3536  0011E4  0900               	iorlw	0
  3537  0011E6  E114               	bnz	l2653
  3538                           
  3539                           ;ds18b20.c: 182: for (i = 0; i < 8; i++) {
  3540  0011E8  6A3E               	clrf	ds18b20_readrom@i^0,c
  3541  0011EA                     l2641:
  3542                           
  3543                           ;ds18b20.c: 183: write_eep(((num_dq - 1)*8) + i, temp_rom[i]);
  3544  0011EA  D813               	call	PL36	;call to abstracted procedure
  3545  0011EC  50DF               	movf	indf2,w,c
  3546  0011EE  6E2E               	movwf	write_eep@data^0,c
  3547  0011F0  503D               	movf	ds18b20_readrom@num_dq^0,w,c
  3548  0011F2  0D08               	mullw	8
  3549  0011F4  50F3               	movf	243,w,c
  3550  0011F6  243E               	addwf	ds18b20_readrom@i^0,w,c
  3551  0011F8  0FF8               	addlw	248
  3552  0011FA  EC50  F00A         	call	_write_eep
  3553  0011FE  2A3E               	incf	ds18b20_readrom@i^0,f,c
  3554  001200  0E07               	movlw	7
  3555  001202  643E               	cpfsgt	ds18b20_readrom@i^0,c
  3556  001204  D7F2               	goto	l2641
  3557                           
  3558                           ;ds18b20.c: 184: };ds18b20.c: 185: Delay_ms(10);
  3559  001206  ECA4  F006         	call	PL58	;call to abstracted procedure
  3560  00120A  EC62  F00A         	call	_Delay_ms	;wreg free
  3561                           
  3562                           ;ds18b20.c: 186: return 1;
  3563  00120E  0C01               	retlw	1
  3564  001210                     l2653:
  3565                           
  3566                           ;ds18b20.c: 187: };ds18b20.c: 188: return 0;
  3567  001210  0C00               	retlw	0	;funcret
  3568  001212                     __end_of_ds18b20_readrom:
  3569                           	callstack 0
  3570  001212                     PL36:
  3571                           	callstack 27
  3572  001212  503E               	movf	ds18b20_readrom@i^0,w,c
  3573  001214  0F35               	addlw	low ds18b20_readrom@temp_rom
  3574  001216  6ED9               	movwf	fsr2l,c
  3575  001218  6ADA               	clrf	fsr2h,c
  3576  00121A  0012               	return	
  3577  00121C                     __end_ofPL36:
  3578                           	callstack 0
  3579                           
  3580 ;; *************** function _write_eep *****************
  3581 ;; Defined at:
  3582 ;;		line 5 in file "eeprom.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  address         1    wreg     unsigned char 
  3585 ;;  data            1    0[COMRAM] unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  address         1    1[COMRAM] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMRAM   BANK0   BANK1
  3597 ;;      Params:         1       0       0
  3598 ;;      Locals:         1       0       0
  3599 ;;      Temps:          0       0       0
  3600 ;;      Totals:         2       0       0
  3601 ;;Total ram usage:        2 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:    1
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;;		_ds18b20_readrom
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text7
  3613  0014A0                     __ptext7:
  3614                           	callstack 0
  3615  0014A0                     _write_eep:
  3616                           	callstack 29
  3617                           
  3618                           ;incstack = 0
  3619                           ;write_eep@address stored from wreg
  3620  0014A0  6E2F               	movwf	write_eep@address^0,c
  3621  0014A2                     
  3622                           ;eeprom.c: 8: {}
  3623  0014A2  B2A6               	btfsc	166,1,c	;volsfr
  3624  0014A4  D7FE               	goto	l2301
  3625                           
  3626                           ;eeprom.c: 11: EEADR = address;
  3627  0014A6  C02F  FFA9         	movff	write_eep@address,4009	;volatile
  3628                           
  3629                           ;eeprom.c: 12: EEDATA = data;
  3630  0014AA  C02E  FFA8         	movff	write_eep@data,4008	;volatile
  3631                           
  3632                           ;eeprom.c: 13: EECON1bits.EEPGD = 0;
  3633  0014AE  9EA6               	bcf	166,7,c	;volsfr
  3634                           
  3635                           ;eeprom.c: 14: EECON1bits.CFGS = 0;
  3636  0014B0  9CA6               	bcf	166,6,c	;volsfr
  3637                           
  3638                           ;eeprom.c: 15: EECON1bits.WREN = 1;
  3639  0014B2  84A6               	bsf	166,2,c	;volsfr
  3640                           
  3641                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  3642  0014B4  9EF2               	bcf	242,7,c	;volatile
  3643                           
  3644                           ;eeprom.c: 18: EECON2 = 0x55;
  3645  0014B6  0E55               	movlw	85
  3646  0014B8  6EA7               	movwf	167,c	;volsfr
  3647                           
  3648                           ;eeprom.c: 19: EECON2 = 0xAA;
  3649  0014BA  0EAA               	movlw	170
  3650  0014BC  6EA7               	movwf	167,c	;volsfr
  3651                           
  3652                           ;eeprom.c: 20: EECON1bits.WR = 1;
  3653  0014BE  82A6               	bsf	166,1,c	;volsfr
  3654                           
  3655                           ;eeprom.c: 22: INTCONbits.GIE = 1;
  3656  0014C0  8EF2               	bsf	242,7,c	;volatile
  3657  0014C2  0CAA               	retlw	170	;funcret
  3658  0014C4                     __end_of_write_eep:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _Delay_ms *****************
  3662 ;; Defined at:
  3663 ;;		line 575 in file "main.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  delay           2    0[COMRAM] unsigned int 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  i               2    3[COMRAM] unsigned int 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1
  3677 ;;      Params:         2       0       0
  3678 ;;      Locals:         2       0       0
  3679 ;;      Temps:          1       0       0
  3680 ;;      Totals:         5       0       0
  3681 ;;Total ram usage:        5 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    1
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;;		_ds18b20_readrom
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text8
  3693  0014C4                     __ptext8:
  3694                           	callstack 0
  3695  0014C4                     _Delay_ms:
  3696                           	callstack 28
  3697                           
  3698                           ;main.c: 576: for (uint16_t i = 0; i <= delay; i++)
  3699                           
  3700                           ;incstack = 0
  3701  0014C4  6A31               	clrf	Delay_ms@i^0,c
  3702  0014C6  6A32               	clrf	(Delay_ms@i+1)^0,c
  3703  0014C8  D009               	goto	l255
  3704  0014CA                     l2297:
  3705                           
  3706                           ;main.c: 577: _delay((unsigned long)((1)*(8000000/4000.0)));
  3707  0014CA  0E03               	movlw	3
  3708  0014CC  6E30               	movwf	??_Delay_ms^0,c
  3709  0014CE  0E98               	movlw	152
  3710  0014D0                     u2377:
  3711  0014D0  2EE8               	decfsz	wreg,f,c
  3712  0014D2  D7FE               	bra	u2377
  3713  0014D4  2E30               	decfsz	??_Delay_ms^0,f,c
  3714  0014D6  D7FC               	bra	u2377
  3715  0014D8  4A31               	infsnz	Delay_ms@i^0,f,c
  3716  0014DA  2A32               	incf	(Delay_ms@i+1)^0,f,c
  3717  0014DC                     l255:
  3718  0014DC  5031               	movf	Delay_ms@i^0,w,c
  3719  0014DE  5C2E               	subwf	Delay_ms@delay^0,w,c
  3720  0014E0  5032               	movf	(Delay_ms@i+1)^0,w,c
  3721  0014E2  582F               	subwfb	(Delay_ms@delay+1)^0,w,c
  3722  0014E4  E2F2               	bc	l2297
  3723  0014E6  0012               	return		;funcret
  3724  0014E8                     __end_of_Delay_ms:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _ds18b20_readTemp *****************
  3728 ;; Defined at:
  3729 ;;		line 117 in file "ds18b20.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  time_flag       1    7[COMRAM] PTR unsigned char 
  3732 ;;		 -> time_flag(1), 
  3733 ;;  timer_val       1    8[COMRAM] PTR unsigned char 
  3734 ;;		 -> timer_val(1), 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  j               1   13[COMRAM] unsigned char 
  3737 ;;  temp            2   11[COMRAM] unsigned int 
  3738 ;;  i               1   14[COMRAM] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      unsigned char 
  3741 ;; Registers used:
  3742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1
  3748 ;;      Params:         2       0       0
  3749 ;;      Locals:         4       0       0
  3750 ;;      Temps:          2       0       0
  3751 ;;      Totals:         8       0       0
  3752 ;;Total ram usage:        8 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    3
  3755 ;; This function calls:
  3756 ;;		_ds18b20_crc8
  3757 ;;		_ow_reset
  3758 ;;		_read_byte
  3759 ;;		_write_byte
  3760 ;; This function is called by:
  3761 ;;		_main
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text9
  3766  000E50                     __ptext9:
  3767                           	callstack 0
  3768  000E50                     _ds18b20_readTemp:
  3769                           	callstack 27
  3770                           
  3771                           ;ds18b20.c: 120: uint8_t i;;ds18b20.c: 122: switch (*time_flag) {
  3772                           
  3773                           ;incstack = 0
  3774  000E50  D05B               	goto	l2583
  3775  000E52                     l2507:
  3776                           
  3777                           ;ds18b20.c: 124: if (!ow_reset())
  3778  000E52  EC25  F00A         	call	_ow_reset	;wreg free
  3779  000E56  0900               	iorlw	0
  3780  000E58  A4D8               	btfss	status,2,c
  3781  000E5A  0C00               	retlw	0
  3782                           
  3783                           ;ds18b20.c: 125: {;ds18b20.c: 126: write_byte(0xCC);
  3784  000E5C  0ECC               	movlw	204
  3785  000E5E  ECD7  F009         	call	_write_byte
  3786                           
  3787                           ;ds18b20.c: 127: write_byte(0x44);
  3788  000E62  0E44               	movlw	68
  3789  000E64  ECD7  F009         	call	_write_byte
  3790                           
  3791                           ;ds18b20.c: 128: *timer_val = 0;
  3792  000E68  5036               	movf	ds18b20_readTemp@timer_val^0,w,c
  3793  000E6A  6ED9               	movwf	fsr2l,c
  3794  000E6C  6ADA               	clrf	fsr2h,c
  3795  000E6E  6ADF               	clrf	indf2,c
  3796                           
  3797                           ;ds18b20.c: 129: *time_flag = 2;
  3798  000E70  5035               	movf	ds18b20_readTemp@time_flag^0,w,c
  3799  000E72  6ED9               	movwf	fsr2l,c
  3800  000E74  6ADA               	clrf	fsr2h,c
  3801  000E76  0E02               	movlw	2
  3802  000E78  6EDF               	movwf	indf2,c
  3803                           
  3804                           ;ds18b20.c: 130: T1CONbits.TMR1ON = 1;
  3805  000E7A  80CD               	bsf	205,0,c	;volatile
  3806                           
  3807                           ;ds18b20.c: 132: return 0;
  3808  000E7C  0C00               	retlw	0
  3809  000E7E                     l324:
  3810                           
  3811                           ;ds18b20.c: 136: for (uint8_t j = 0; j < 2; j++) {
  3812  000E7E  6A3B               	clrf	ds18b20_readTemp@j^0,c
  3813  000E80                     l2525:
  3814                           
  3815                           ;ds18b20.c: 137: ow_reset();
  3816  000E80  EC25  F00A         	call	_ow_reset	;wreg free
  3817                           
  3818                           ;ds18b20.c: 138: write_byte(0x55);
  3819  000E84  0E55               	movlw	85
  3820  000E86  ECD7  F009         	call	_write_byte
  3821                           
  3822                           ;ds18b20.c: 139: for (i = 0; i < 8; i++) {
  3823  000E8A  6A3C               	clrf	ds18b20_readTemp@i^0,c
  3824  000E8C                     l2535:
  3825                           
  3826                           ;ds18b20.c: 140: write_byte(rom_dq[j][i]);
  3827  000E8C  503B               	movf	ds18b20_readTemp@j^0,w,c
  3828  000E8E  0D08               	mullw	8
  3829  000E90  50F3               	movf	243,w,c
  3830  000E92  0F01               	addlw	low _rom_dq
  3831  000E94  243C               	addwf	ds18b20_readTemp@i^0,w,c
  3832  000E96  6ED9               	movwf	fsr2l,c
  3833  000E98  6ADA               	clrf	fsr2h,c
  3834  000E9A  50DF               	movf	indf2,w,c
  3835  000E9C  ECD7  F009         	call	_write_byte
  3836  000EA0  2A3C               	incf	ds18b20_readTemp@i^0,f,c
  3837  000EA2  0E07               	movlw	7
  3838  000EA4  643C               	cpfsgt	ds18b20_readTemp@i^0,c
  3839  000EA6  D7F2               	goto	l2535
  3840                           
  3841                           ;ds18b20.c: 141: };ds18b20.c: 142: write_byte(0xBE);
  3842  000EA8  0EBE               	movlw	190
  3843  000EAA  ECD7  F009         	call	_write_byte
  3844                           
  3845                           ;ds18b20.c: 143: for (i = 0; i < 9; i++)
  3846  000EAE  6A3C               	clrf	ds18b20_readTemp@i^0,c
  3847  000EB0                     l2549:
  3848                           
  3849                           ;ds18b20.c: 144: {;ds18b20.c: 145: scratch[i] = read_byte();
  3850  000EB0  503C               	movf	ds18b20_readTemp@i^0,w,c
  3851  000EB2  0F23               	addlw	low _scratch
  3852  000EB4  6ED9               	movwf	fsr2l,c
  3853  000EB6  6ADA               	clrf	fsr2h,c
  3854  000EB8  ECBC  F009         	call	_read_byte	;wreg free
  3855  000EBC  6EDF               	movwf	indf2,c
  3856  000EBE  2A3C               	incf	ds18b20_readTemp@i^0,f,c
  3857  000EC0  0E08               	movlw	8
  3858  000EC2  643C               	cpfsgt	ds18b20_readTemp@i^0,c
  3859  000EC4  D7F5               	goto	l2549
  3860                           
  3861                           ;ds18b20.c: 146: };ds18b20.c: 148: if (!(ds18b20_crc8(scratch, 9))) {
  3862  000EC6  0E23               	movlw	low _scratch
  3863  000EC8  6E2E               	movwf	ds18b20_crc8@data_in^0,c
  3864  000ECA  0E09               	movlw	9
  3865  000ECC  6E2F               	movwf	ds18b20_crc8@num_bytes^0,c
  3866  000ECE  EC35  F009         	call	_ds18b20_crc8	;wreg free
  3867  000ED2  0900               	iorlw	0
  3868  000ED4  E10C               	bnz	l2561
  3869                           
  3870                           ;ds18b20.c: 149: temp = (((uint16_t) scratch[1]) << 8) | ((uint16_t) scratch[0]);
  3871  000ED6  5024               	movf	(_scratch+1)^0,w,c
  3872  000ED8  6E37               	movwf	??_ds18b20_readTemp^0,c
  3873  000EDA  5023               	movf	_scratch^0,w,c
  3874  000EDC  6E39               	movwf	ds18b20_readTemp@temp^0,c
  3875  000EDE  C037  F03A         	movff	??_ds18b20_readTemp,ds18b20_readTemp@temp+1
  3876                           
  3877                           ;ds18b20.c: 150: temp_ready[j] = temp;
  3878  000EE2  D81B               	call	PL24	;call to abstracted procedure
  3879  000EE4  C039  FFDE         	movff	ds18b20_readTemp@temp,postinc2
  3880  000EE8  C03A  FFDD         	movff	ds18b20_readTemp@temp+1,postdec2
  3881                           
  3882                           ;ds18b20.c: 151: }else
  3883  000EEC  D004               	goto	l2563
  3884  000EEE                     l2561:
  3885                           
  3886                           ;ds18b20.c: 152: temp_ready[j] = 32767;
  3887  000EEE  D815               	call	PL24	;call to abstracted procedure
  3888  000EF0  68DE               	setf	postinc2,c
  3889  000EF2  0E7F               	movlw	127
  3890  000EF4  6EDD               	movwf	postdec2,c
  3891  000EF6                     l2563:
  3892  000EF6  2A3B               	incf	ds18b20_readTemp@j^0,f,c
  3893  000EF8  0E01               	movlw	1
  3894  000EFA  643B               	cpfsgt	ds18b20_readTemp@j^0,c
  3895  000EFC  D7C1               	goto	l2525
  3896                           
  3897                           ;ds18b20.c: 154: };ds18b20.c: 155: *time_flag = 0;
  3898  000EFE  5035               	movf	ds18b20_readTemp@time_flag^0,w,c
  3899  000F00  6ED9               	movwf	fsr2l,c
  3900  000F02  6ADA               	clrf	fsr2h,c
  3901  000F04  6ADF               	clrf	indf2,c
  3902                           
  3903                           ;ds18b20.c: 156: return 1;
  3904  000F06  0C01               	retlw	1
  3905  000F08                     l2583:
  3906  000F08  5035               	movf	ds18b20_readTemp@time_flag^0,w,c
  3907  000F0A  6ED9               	movwf	fsr2l,c
  3908  000F0C  6ADA               	clrf	fsr2h,c
  3909  000F0E  50DF               	movf	indf2,w,c
  3910                           
  3911                           ; Switch size 1, requested type "space"
  3912                           ; Number of cases is 3, Range of values is 0 to 2
  3913                           ; switch strategies available:
  3914                           ; Name         Instructions Cycles
  3915                           ; simple_byte           10     6 (average)
  3916                           ;	Chosen strategy is simple_byte
  3917  000F10  E0A0               	bz	l2507
  3918  000F12  0A01               	xorlw	1	; case 1
  3919  000F14  E0B4               	bz	l324
  3920  000F16  0A03               	xorlw	3	; case 2
  3921  000F18  0C00               	retlw	0
  3922  000F1A                     __end_of_ds18b20_readTemp:
  3923                           	callstack 0
  3924  000F1A                     PL24:
  3925                           	callstack 27
  3926  000F1A  503B               	movf	ds18b20_readTemp@j^0,w,c
  3927  000F1C  0D02               	mullw	2
  3928  000F1E  50F3               	movf	243,w,c
  3929  000F20  0F11               	addlw	low _temp_ready
  3930  000F22  6ED9               	movwf	fsr2l,c
  3931  000F24  6ADA               	clrf	fsr2h,c
  3932  000F26  0012               	return	
  3933  000F28                     __end_ofPL24:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function _read_byte *****************
  3937 ;; Defined at:
  3938 ;;		line 50 in file "onewire.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;		None
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  i               1    3[COMRAM] unsigned char 
  3943 ;;  val             1    2[COMRAM] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      unsigned char 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1
  3953 ;;      Params:         0       0       0
  3954 ;;      Locals:         2       0       0
  3955 ;;      Temps:          2       0       0
  3956 ;;      Totals:         4       0       0
  3957 ;;Total ram usage:        4 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    2
  3960 ;; This function calls:
  3961 ;;		_read_bit
  3962 ;; This function is called by:
  3963 ;;		_ds18b20_readTemp
  3964 ;;		_ds18b20_readrom
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text10
  3969  001378                     __ptext10:
  3970                           	callstack 0
  3971  001378                     _read_byte:
  3972                           	callstack 27
  3973                           
  3974                           ;onewire.c: 52: uint8_t i;;onewire.c: 53: uint8_t val = 0;
  3975                           
  3976                           ;incstack = 0
  3977  001378  6A30               	clrf	read_byte@val^0,c
  3978                           
  3979                           ;onewire.c: 55: for(i=0;i<8;i++)
  3980  00137A  6A31               	clrf	read_byte@i^0,c
  3981  00137C                     l1433:
  3982                           
  3983                           ;onewire.c: 56: {;onewire.c: 57: if(read_bit()) val |= (0x01 << i);
  3984  00137C  ECB0  F00A         	call	_read_bit	;wreg free
  3985  001380  0900               	iorlw	0
  3986  001382  E00C               	bz	l1437
  3987  001384  C031  F02E         	movff	read_byte@i,??_read_byte
  3988  001388  0E01               	movlw	1
  3989  00138A  6E2F               	movwf	(??_read_byte+1)^0,c
  3990  00138C  2A2E               	incf	??_read_byte^0,f,c
  3991  00138E  D002               	goto	u234
  3992  001390                     u235:
  3993  001390  90D8               	bcf	status,0,c
  3994  001392  362F               	rlcf	(??_read_byte+1)^0,f,c
  3995  001394                     u234:
  3996  001394  2E2E               	decfsz	??_read_byte^0,f,c
  3997  001396  D7FC               	goto	u235
  3998  001398  502F               	movf	(??_read_byte+1)^0,w,c
  3999  00139A  1230               	iorwf	read_byte@val^0,f,c
  4000  00139C                     l1437:
  4001                           
  4002                           ;onewire.c: 58: _delay((unsigned long)((120)*(8000000/4000000.0)));
  4003  00139C  0E50               	movlw	80
  4004  00139E                     u2387:
  4005  00139E  2EE8               	decfsz	wreg,f,c
  4006  0013A0  D7FE               	bra	u2387
  4007  0013A2  2A31               	incf	read_byte@i^0,f,c
  4008  0013A4  0E07               	movlw	7
  4009  0013A6  6431               	cpfsgt	read_byte@i^0,c
  4010  0013A8  D7E9               	goto	l1433
  4011                           
  4012                           ;onewire.c: 59: };onewire.c: 61: return val;
  4013  0013AA  5030               	movf	read_byte@val^0,w,c
  4014  0013AC  0012               	return		;funcret
  4015  0013AE                     __end_of_read_byte:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function _read_bit *****************
  4019 ;; Defined at:
  4020 ;;		line 22 in file "onewire.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      unsigned char 
  4027 ;; Registers used:
  4028 ;;		wreg
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1
  4034 ;;      Params:         0       0       0
  4035 ;;      Locals:         0       0       0
  4036 ;;      Temps:          0       0       0
  4037 ;;      Totals:         0       0       0
  4038 ;;Total ram usage:        0 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_read_byte
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text11
  4049  001560                     __ptext11:
  4050                           	callstack 0
  4051  001560                     _read_bit:
  4052                           	callstack 27
  4053                           
  4054                           ;onewire.c: 24: PORTAbits.RA6 = 0;
  4055                           
  4056                           ;incstack = 0
  4057  001560  9C80               	bcf	128,6,c	;volatile
  4058                           
  4059                           ;onewire.c: 25: TRISAbits.TRISA6 = 0;
  4060  001562  9C92               	bcf	146,6,c	;volatile
  4061                           
  4062                           ;onewire.c: 26: _delay((unsigned long)((1)*(8000000/4000000.0)));
  4063  001564  D000               	nop2		;2 cycle nop
  4064                           
  4065                           ;onewire.c: 27: PORTAbits.RA6 = 1;
  4066  001566  8C80               	bsf	128,6,c	;volatile
  4067                           
  4068                           ;onewire.c: 28: TRISAbits.TRISA6 = 1;
  4069  001568  8C92               	bsf	146,6,c	;volatile
  4070                           
  4071                           ;onewire.c: 29: _delay((unsigned long)((6)*(8000000/4000000.0)));
  4072  00156A  0E04               	movlw	4
  4073  00156C                     u2397:
  4074  00156C  2EE8               	decfsz	wreg,f,c
  4075  00156E  D7FE               	bra	u2397
  4076                           
  4077                           ;onewire.c: 30: return(PORTAbits.RA6);
  4078  001570  BC80               	btfsc	128,6,c	;volatile
  4079  001572  0C01               	retlw	1
  4080  001574  0C00               	retlw	0	;funcret
  4081  001576                     __end_of_read_bit:
  4082                           	callstack 0
  4083                           
  4084 ;; *************** function _ds18b20_crc8 *****************
  4085 ;; Defined at:
  4086 ;;		line 219 in file "ds18b20.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  data_in         1    0[COMRAM] PTR unsigned char 
  4089 ;;		 -> ds18b20_readrom@temp_rom(8), scratch(9), 
  4090 ;;  num_bytes       1    1[COMRAM] unsigned char 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  crc             1    6[COMRAM] unsigned char 
  4093 ;;  loop_count      1    5[COMRAM] unsigned char 
  4094 ;;  feedback_bit    1    4[COMRAM] unsigned char 
  4095 ;;  data            1    3[COMRAM] unsigned char 
  4096 ;;  bit_counter     1    2[COMRAM] unsigned char 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      unsigned char 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1
  4106 ;;      Params:         2       0       0
  4107 ;;      Locals:         5       0       0
  4108 ;;      Temps:          0       0       0
  4109 ;;      Totals:         7       0       0
  4110 ;;Total ram usage:        7 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    1
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_ds18b20_readTemp
  4117 ;;		_ds18b20_readrom
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text12
  4122  00126A                     __ptext12:
  4123                           	callstack 0
  4124  00126A                     _ds18b20_crc8:
  4125                           	callstack 28
  4126                           
  4127                           ;ds18b20.c: 220: uint8_t crc;;ds18b20.c: 221: uint8_t loop_count;;ds18b20.c: 222: uint8_
      +                          t bit_counter;;ds18b20.c: 223: uint8_t data;;ds18b20.c: 224: uint8_t feedback_bit;;ds18b
      +                          20.c: 226: crc = 0x00;
  4128                           
  4129                           ;incstack = 0
  4130  00126A  6A34               	clrf	ds18b20_crc8@crc^0,c
  4131                           
  4132                           ;ds18b20.c: 228: for (loop_count = 0; loop_count != num_bytes; loop_count++) {
  4133  00126C  6A33               	clrf	ds18b20_crc8@loop_count^0,c
  4134  00126E  D01D               	goto	l2415
  4135  001270                     l2395:
  4136                           
  4137                           ;ds18b20.c: 229: data = data_in[loop_count];
  4138  001270  502E               	movf	ds18b20_crc8@data_in^0,w,c
  4139  001272  2433               	addwf	ds18b20_crc8@loop_count^0,w,c
  4140  001274  6ED9               	movwf	fsr2l,c
  4141  001276  6ADA               	clrf	fsr2h,c
  4142  001278  50DF               	movf	indf2,w,c
  4143  00127A  6E31               	movwf	ds18b20_crc8@data^0,c
  4144                           
  4145                           ;ds18b20.c: 231: bit_counter = 8;
  4146  00127C  0E08               	movlw	8
  4147  00127E  6E30               	movwf	ds18b20_crc8@bit_counter^0,c
  4148  001280                     l2399:
  4149                           
  4150                           ;ds18b20.c: 233: feedback_bit = (crc ^ data) & 0x01;
  4151  001280  5034               	movf	ds18b20_crc8@crc^0,w,c
  4152  001282  1831               	xorwf	ds18b20_crc8@data^0,w,c
  4153  001284  0B01               	andlw	1
  4154  001286  6E32               	movwf	ds18b20_crc8@feedback_bit^0,c
  4155                           
  4156                           ;ds18b20.c: 235: if (feedback_bit == 0x01) {
  4157  001288  0432               	decf	ds18b20_crc8@feedback_bit^0,w,c
  4158  00128A  E102               	bnz	l353
  4159                           
  4160                           ;ds18b20.c: 236: crc = crc ^ 0x18;
  4161  00128C  0E18               	movlw	24
  4162  00128E  1A34               	xorwf	ds18b20_crc8@crc^0,f,c
  4163  001290                     l353:
  4164                           
  4165                           ;ds18b20.c: 237: };ds18b20.c: 238: crc = (crc >> 1) & 0x7F;
  4166  001290  90D8               	bcf	status,0,c
  4167  001292  3034               	rrcf	ds18b20_crc8@crc^0,w,c
  4168  001294  0B7F               	andlw	127
  4169  001296  6E34               	movwf	ds18b20_crc8@crc^0,c
  4170                           
  4171                           ;ds18b20.c: 239: if (feedback_bit == 0x01) {
  4172  001298  0432               	decf	ds18b20_crc8@feedback_bit^0,w,c
  4173  00129A  E101               	bnz	l2407
  4174                           
  4175                           ;ds18b20.c: 240: crc = crc | 0x80;
  4176  00129C  8E34               	bsf	ds18b20_crc8@crc^0,7,c
  4177  00129E                     l2407:
  4178                           
  4179                           ;ds18b20.c: 241: };ds18b20.c: 243: data = data >> 1;
  4180  00129E  90D8               	bcf	status,0,c
  4181  0012A0  3231               	rrcf	ds18b20_crc8@data^0,f,c
  4182                           
  4183                           ;ds18b20.c: 244: bit_counter--;
  4184  0012A2  0630               	decf	ds18b20_crc8@bit_counter^0,f,c
  4185                           
  4186                           ;ds18b20.c: 246: } while (bit_counter > 0);
  4187  0012A4  5030               	movf	ds18b20_crc8@bit_counter^0,w,c
  4188  0012A6  E1EC               	bnz	l2399
  4189  0012A8  2A33               	incf	ds18b20_crc8@loop_count^0,f,c
  4190  0012AA                     l2415:
  4191  0012AA  502F               	movf	ds18b20_crc8@num_bytes^0,w,c
  4192  0012AC  1833               	xorwf	ds18b20_crc8@loop_count^0,w,c
  4193  0012AE  E1E0               	bnz	l2395
  4194                           
  4195                           ;ds18b20.c: 247: };ds18b20.c: 249: return crc;
  4196  0012B0  5034               	movf	ds18b20_crc8@crc^0,w,c
  4197  0012B2  0012               	return		;funcret
  4198  0012B4                     __end_of_ds18b20_crc8:
  4199                           	callstack 0
  4200                           
  4201 ;; *************** function _ds18b20_get_temp *****************
  4202 ;; Defined at:
  4203 ;;		line 196 in file "ds18b20.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  num_dq          1    wreg     unsigned char 
  4206 ;;  minus           1    0[COMRAM] PTR unsigned char 
  4207 ;;		 -> minus_2(1), minus_1(1), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  num_dq          1    2[COMRAM] unsigned char 
  4210 ;;  temp            2    4[COMRAM] unsigned int 
  4211 ;;  tmp             1    3[COMRAM] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  2    0[COMRAM] unsigned int 
  4214 ;; Registers used:
  4215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1
  4221 ;;      Params:         2       0       0
  4222 ;;      Locals:         4       0       0
  4223 ;;      Temps:          0       0       0
  4224 ;;      Totals:         6       0       0
  4225 ;;Total ram usage:        6 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    1
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		_main
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text13
  4236  000FD0                     __ptext13:
  4237                           	callstack 0
  4238  000FD0                     _ds18b20_get_temp:
  4239                           	callstack 29
  4240                           
  4241                           ;incstack = 0
  4242                           ;ds18b20_get_temp@num_dq stored from wreg
  4243  000FD0  6E30               	movwf	ds18b20_get_temp@num_dq^0,c
  4244                           
  4245                           ;ds18b20.c: 197: uint16_t temp = temp_ready[num_dq-1];
  4246  000FD2  5030               	movf	ds18b20_get_temp@num_dq^0,w,c
  4247  000FD4  0D02               	mullw	2
  4248  000FD6  50F3               	movf	243,w,c
  4249  000FD8  0F0F               	addlw	low (_temp_ready+254)
  4250  000FDA  6ED9               	movwf	fsr2l,c
  4251  000FDC  6ADA               	clrf	fsr2h,c
  4252  000FDE  CFDE F032          	movff	postinc2,ds18b20_get_temp@temp
  4253  000FE2  CFDD F033          	movff	postdec2,ds18b20_get_temp@temp+1
  4254                           
  4255                           ;ds18b20.c: 198: uint8_t tmp;;ds18b20.c: 199: *minus = '+';
  4256  000FE6  502E               	movf	ds18b20_get_temp@minus^0,w,c
  4257  000FE8  6ED9               	movwf	fsr2l,c
  4258  000FEA  6ADA               	clrf	fsr2h,c
  4259  000FEC  0E2B               	movlw	43
  4260  000FEE  6EDF               	movwf	indf2,c
  4261                           
  4262                           ;ds18b20.c: 200: if(temp == 32767)
  4263  000FF0  2832               	incf	ds18b20_get_temp@temp^0,w,c
  4264  000FF2  E108               	bnz	l345
  4265  000FF4  0E7F               	movlw	127
  4266  000FF6  1833               	xorwf	(ds18b20_get_temp@temp+1)^0,w,c
  4267  000FF8  E105               	bnz	l345
  4268  000FFA                     u1560:
  4269                           
  4270                           ;ds18b20.c: 201: return temp;
  4271  000FFA  C032  F02E         	movff	ds18b20_get_temp@temp,?_ds18b20_get_temp
  4272  000FFE  C033  F02F         	movff	ds18b20_get_temp@temp+1,?_ds18b20_get_temp+1
  4273  001002  0012               	return	
  4274  001004                     l345:
  4275                           
  4276                           ;ds18b20.c: 202: if (temp & 0x8000) {
  4277  001004  AE33               	btfss	(ds18b20_get_temp@temp+1)^0,7,c
  4278  001006  D009               	goto	l2601
  4279                           
  4280                           ;ds18b20.c: 203: temp = -temp;
  4281  001008  6C32               	negf	ds18b20_get_temp@temp^0,c
  4282  00100A  1E33               	comf	(ds18b20_get_temp@temp+1)^0,f,c
  4283  00100C  B0D8               	btfsc	status,0,c
  4284  00100E  2A33               	incf	(ds18b20_get_temp@temp+1)^0,f,c
  4285                           
  4286                           ;ds18b20.c: 204: *minus = '-';
  4287  001010  502E               	movf	ds18b20_get_temp@minus^0,w,c
  4288  001012  6ED9               	movwf	fsr2l,c
  4289  001014  6ADA               	clrf	fsr2h,c
  4290  001016  0E2D               	movlw	45
  4291  001018  6EDF               	movwf	indf2,c
  4292  00101A                     l2601:
  4293                           
  4294                           ;ds18b20.c: 205: };ds18b20.c: 207: tmp = temp & 0x0f;
  4295  00101A  5032               	movf	ds18b20_get_temp@temp^0,w,c
  4296  00101C  0B0F               	andlw	15
  4297  00101E  6E31               	movwf	ds18b20_get_temp@tmp^0,c
  4298                           
  4299                           ;ds18b20.c: 208: tmp = fract[tmp];
  4300  001020  0EF7               	movlw	low _fract
  4301  001022  2431               	addwf	ds18b20_get_temp@tmp^0,w,c
  4302  001024  6EF6               	movwf	tblptrl,c
  4303  001026  6AF7               	clrf	tblptrh,c
  4304  001028  0E1E               	movlw	high _fract
  4305  00102A  22F7               	addwfc	tblptrh,f,c
  4306  00102C                     	if	0	;There are less than 3 active tblptr bytes
  4307  00102C                     	endif
  4308  00102C  0008               	tblrd		*
  4309  00102E  CFF5 F031          	movff	tablat,ds18b20_get_temp@tmp
  4310                           
  4311                           ;ds18b20.c: 209: temp = temp >> 4;
  4312  001032  3A32               	swapf	ds18b20_get_temp@temp^0,f,c
  4313  001034  3A33               	swapf	(ds18b20_get_temp@temp+1)^0,f,c
  4314  001036  0E0F               	movlw	15
  4315  001038  1632               	andwf	ds18b20_get_temp@temp^0,f,c
  4316  00103A  5033               	movf	(ds18b20_get_temp@temp+1)^0,w,c
  4317  00103C  0BF0               	andlw	240
  4318  00103E  1232               	iorwf	ds18b20_get_temp@temp^0,f,c
  4319  001040  0E0F               	movlw	15
  4320  001042  1633               	andwf	(ds18b20_get_temp@temp+1)^0,f,c
  4321                           
  4322                           ;ds18b20.c: 210: temp = (temp & 0x00ff) * 10;
  4323  001044  5032               	movf	ds18b20_get_temp@temp^0,w,c
  4324  001046  0D0A               	mullw	10
  4325  001048  CFF3 F032          	movff	prodl,ds18b20_get_temp@temp
  4326  00104C  CFF4 F033          	movff	prodh,ds18b20_get_temp@temp+1
  4327                           
  4328                           ;ds18b20.c: 211: temp = temp + tmp;
  4329  001050  5031               	movf	ds18b20_get_temp@tmp^0,w,c
  4330  001052  2632               	addwf	ds18b20_get_temp@temp^0,f,c
  4331  001054  0E00               	movlw	0
  4332  001056  2233               	addwfc	(ds18b20_get_temp@temp+1)^0,f,c
  4333  001058  D7D0               	goto	u1560
  4334  00105A                     __end_of_ds18b20_get_temp:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function ___lwmod *****************
  4338 ;; Defined at:
  4339 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  dividend        2    7[COMRAM] unsigned int 
  4342 ;;  divisor         2    9[COMRAM] unsigned int 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  counter         1   11[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2    7[COMRAM] unsigned int 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1
  4354 ;;      Params:         4       0       0
  4355 ;;      Locals:         1       0       0
  4356 ;;      Temps:          0       0       0
  4357 ;;      Totals:         5       0       0
  4358 ;;Total ram usage:        5 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    1
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text14
  4369  0012FE                     __ptext14:
  4370                           	callstack 0
  4371  0012FE                     ___lwmod:
  4372                           	callstack 29
  4373                           
  4374                           ;incstack = 0
  4375  0012FE  5037               	movf	___lwmod@divisor^0,w,c
  4376  001300  1038               	iorwf	(___lwmod@divisor+1)^0,w,c
  4377  001302  E017               	bz	l989
  4378  001304  0E01               	movlw	1
  4379  001306  6E39               	movwf	___lwmod@counter^0,c
  4380  001308  D004               	goto	l2729
  4381  00130A                     l2727:
  4382  00130A  90D8               	bcf	status,0,c
  4383  00130C  3637               	rlcf	___lwmod@divisor^0,f,c
  4384  00130E  3638               	rlcf	(___lwmod@divisor+1)^0,f,c
  4385  001310  2A39               	incf	___lwmod@counter^0,f,c
  4386  001312                     l2729:
  4387  001312  AE38               	btfss	(___lwmod@divisor+1)^0,7,c
  4388  001314  D7FA               	goto	l2727
  4389  001316                     u1700:
  4390  001316  5037               	movf	___lwmod@divisor^0,w,c
  4391  001318  5C35               	subwf	___lwmod@dividend^0,w,c
  4392  00131A  5038               	movf	(___lwmod@divisor+1)^0,w,c
  4393  00131C  5836               	subwfb	(___lwmod@dividend+1)^0,w,c
  4394  00131E  E304               	bnc	l2735
  4395  001320  5037               	movf	___lwmod@divisor^0,w,c
  4396  001322  5E35               	subwf	___lwmod@dividend^0,f,c
  4397  001324  5038               	movf	(___lwmod@divisor+1)^0,w,c
  4398  001326  5A36               	subwfb	(___lwmod@dividend+1)^0,f,c
  4399  001328                     l2735:
  4400  001328  90D8               	bcf	status,0,c
  4401  00132A  3238               	rrcf	(___lwmod@divisor+1)^0,f,c
  4402  00132C  3237               	rrcf	___lwmod@divisor^0,f,c
  4403  00132E  2E39               	decfsz	___lwmod@counter^0,f,c
  4404  001330  D7F2               	goto	u1700
  4405  001332                     l989:
  4406  001332  C035  F035         	movff	___lwmod@dividend,?___lwmod
  4407  001336  C036  F036         	movff	___lwmod@dividend+1,?___lwmod+1
  4408  00133A  0012               	return		;funcret
  4409  00133C                     __end_of___lwmod:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function ___lwdiv *****************
  4413 ;; Defined at:
  4414 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  dividend        2    0[COMRAM] unsigned int 
  4417 ;;  divisor         2    2[COMRAM] unsigned int 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  quotient        2    4[COMRAM] unsigned int 
  4420 ;;  counter         1    6[COMRAM] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  2    0[COMRAM] unsigned int 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1
  4430 ;;      Params:         4       0       0
  4431 ;;      Locals:         3       0       0
  4432 ;;      Temps:          0       0       0
  4433 ;;      Totals:         7       0       0
  4434 ;;Total ram usage:        7 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    1
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_main
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text15
  4445  0012B4                     __ptext15:
  4446                           	callstack 0
  4447  0012B4                     ___lwdiv:
  4448                           	callstack 29
  4449                           
  4450                           ;incstack = 0
  4451  0012B4  6A32               	clrf	___lwdiv@quotient^0,c
  4452  0012B6  6A33               	clrf	(___lwdiv@quotient+1)^0,c
  4453  0012B8  5030               	movf	___lwdiv@divisor^0,w,c
  4454  0012BA  1031               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4455  0012BC  E01B               	bz	l979
  4456  0012BE  0E01               	movlw	1
  4457  0012C0  6E34               	movwf	___lwdiv@counter^0,c
  4458  0012C2  D004               	goto	l2709
  4459  0012C4                     l2707:
  4460  0012C4  90D8               	bcf	status,0,c
  4461  0012C6  3630               	rlcf	___lwdiv@divisor^0,f,c
  4462  0012C8  3631               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4463  0012CA  2A34               	incf	___lwdiv@counter^0,f,c
  4464  0012CC                     l2709:
  4465  0012CC  AE31               	btfss	(___lwdiv@divisor+1)^0,7,c
  4466  0012CE  D7FA               	goto	l2707
  4467  0012D0                     u1670:
  4468  0012D0  90D8               	bcf	status,0,c
  4469  0012D2  3632               	rlcf	___lwdiv@quotient^0,f,c
  4470  0012D4  3633               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4471  0012D6  5030               	movf	___lwdiv@divisor^0,w,c
  4472  0012D8  5C2E               	subwf	___lwdiv@dividend^0,w,c
  4473  0012DA  5031               	movf	(___lwdiv@divisor+1)^0,w,c
  4474  0012DC  582F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4475  0012DE  E305               	bnc	l2719
  4476  0012E0  5030               	movf	___lwdiv@divisor^0,w,c
  4477  0012E2  5E2E               	subwf	___lwdiv@dividend^0,f,c
  4478  0012E4  5031               	movf	(___lwdiv@divisor+1)^0,w,c
  4479  0012E6  5A2F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4480  0012E8  8032               	bsf	___lwdiv@quotient^0,0,c
  4481  0012EA                     l2719:
  4482  0012EA  90D8               	bcf	status,0,c
  4483  0012EC  3231               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4484  0012EE  3230               	rrcf	___lwdiv@divisor^0,f,c
  4485  0012F0  2E34               	decfsz	___lwdiv@counter^0,f,c
  4486  0012F2  D7EE               	goto	u1670
  4487  0012F4                     l979:
  4488  0012F4  C032  F02E         	movff	___lwdiv@quotient,?___lwdiv
  4489  0012F8  C033  F02F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4490  0012FC  0012               	return		;funcret
  4491  0012FE                     __end_of___lwdiv:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function ___lbmod *****************
  4495 ;; Defined at:
  4496 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lbmod.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  dividend        1    wreg     unsigned char 
  4499 ;;  divisor         1    4[COMRAM] unsigned char 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  dividend        1    5[COMRAM] unsigned char 
  4502 ;;  rem             1    7[COMRAM] unsigned char 
  4503 ;;  counter         1    6[COMRAM] unsigned char 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      unsigned char 
  4506 ;; Registers used:
  4507 ;;		wreg, status,2, status,0
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1
  4513 ;;      Params:         1       0       0
  4514 ;;      Locals:         3       0       0
  4515 ;;      Temps:          0       0       0
  4516 ;;      Totals:         4       0       0
  4517 ;;Total ram usage:        4 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:    1
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_main
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text16
  4528  00147A                     __ptext16:
  4529                           	callstack 0
  4530  00147A                     ___lbmod:
  4531                           	callstack 29
  4532                           
  4533                           ;incstack = 0
  4534                           ;___lbmod@dividend stored from wreg
  4535  00147A  6E33               	movwf	___lbmod@dividend^0,c
  4536  00147C  0E08               	movlw	8
  4537  00147E  6E34               	movwf	___lbmod@counter^0,c
  4538  001480  6A35               	clrf	___lbmod@rem^0,c
  4539  001482                     l2687:
  4540  001482  90D8               	bcf	status,0,c
  4541  001484  3433               	rlcf	___lbmod@dividend^0,w,c
  4542  001486  3435               	rlcf	___lbmod@rem^0,w,c
  4543  001488  6E35               	movwf	___lbmod@rem^0,c
  4544  00148A  90D8               	bcf	status,0,c
  4545  00148C  3633               	rlcf	___lbmod@dividend^0,f,c
  4546  00148E  5032               	movf	___lbmod@divisor^0,w,c
  4547  001490  5C35               	subwf	___lbmod@rem^0,w,c
  4548  001492  E302               	bnc	l2695
  4549  001494  5032               	movf	___lbmod@divisor^0,w,c
  4550  001496  5E35               	subwf	___lbmod@rem^0,f,c
  4551  001498                     l2695:
  4552  001498  2E34               	decfsz	___lbmod@counter^0,f,c
  4553  00149A  D7F3               	goto	l2687
  4554  00149C  5035               	movf	___lbmod@rem^0,w,c
  4555  00149E  0012               	return		;funcret
  4556  0014A0                     __end_of___lbmod:
  4557                           	callstack 0
  4558                           
  4559 ;; *************** function ___lbdiv *****************
  4560 ;; Defined at:
  4561 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lbdiv.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  dividend        1    wreg     unsigned char 
  4564 ;;  divisor         1    0[COMRAM] unsigned char 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  dividend        1    1[COMRAM] unsigned char 
  4567 ;;  quotient        1    3[COMRAM] unsigned char 
  4568 ;;  counter         1    2[COMRAM] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      unsigned char 
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1
  4578 ;;      Params:         1       0       0
  4579 ;;      Locals:         3       0       0
  4580 ;;      Temps:          0       0       0
  4581 ;;      Totals:         4       0       0
  4582 ;;Total ram usage:        4 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text17
  4593  0013E4                     __ptext17:
  4594                           	callstack 0
  4595  0013E4                     ___lbdiv:
  4596                           	callstack 29
  4597                           
  4598                           ;incstack = 0
  4599                           ;___lbdiv@dividend stored from wreg
  4600  0013E4  6E2F               	movwf	___lbdiv@dividend^0,c
  4601  0013E6  6A31               	clrf	___lbdiv@quotient^0,c
  4602  0013E8  502E               	movf	___lbdiv@divisor^0,w,c
  4603  0013EA  E014               	bz	l2679
  4604  0013EC  0E01               	movlw	1
  4605  0013EE  6E30               	movwf	___lbdiv@counter^0,c
  4606  0013F0  D003               	goto	l2667
  4607  0013F2                     l2663:
  4608  0013F2  90D8               	bcf	status,0,c
  4609  0013F4  362E               	rlcf	___lbdiv@divisor^0,f,c
  4610  0013F6  2A30               	incf	___lbdiv@counter^0,f,c
  4611  0013F8                     l2667:
  4612  0013F8  AE2E               	btfss	___lbdiv@divisor^0,7,c
  4613  0013FA  D7FB               	goto	l2663
  4614  0013FC                     u1630:
  4615  0013FC  90D8               	bcf	status,0,c
  4616  0013FE  3631               	rlcf	___lbdiv@quotient^0,f,c
  4617  001400  502E               	movf	___lbdiv@divisor^0,w,c
  4618  001402  5C2F               	subwf	___lbdiv@dividend^0,w,c
  4619  001404  E303               	bnc	l2675
  4620  001406  502E               	movf	___lbdiv@divisor^0,w,c
  4621  001408  5E2F               	subwf	___lbdiv@dividend^0,f,c
  4622  00140A  8031               	bsf	___lbdiv@quotient^0,0,c
  4623  00140C                     l2675:
  4624  00140C  90D8               	bcf	status,0,c
  4625  00140E  322E               	rrcf	___lbdiv@divisor^0,f,c
  4626  001410  2E30               	decfsz	___lbdiv@counter^0,f,c
  4627  001412  D7F4               	goto	u1630
  4628  001414                     l2679:
  4629  001414  5031               	movf	___lbdiv@quotient^0,w,c
  4630  001416  0012               	return		;funcret
  4631  001418                     __end_of___lbdiv:
  4632                           	callstack 0
  4633                           
  4634 ;; *************** function _Main_init *****************
  4635 ;; Defined at:
  4636 ;;		line 525 in file "main.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1
  4650 ;;      Params:         0       0       0
  4651 ;;      Locals:         0       0       0
  4652 ;;      Temps:          0       0       0
  4653 ;;      Totals:         0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    5
  4657 ;; This function calls:
  4658 ;;		_cgrom_char
  4659 ;;		_initLCD
  4660 ;;		_init_ds18b20
  4661 ;; This function is called by:
  4662 ;;		_main
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text18
  4667  001148                     __ptext18:
  4668                           	callstack 0
  4669  001148                     _Main_init:
  4670                           	callstack 25
  4671                           
  4672                           ;main.c: 528: PORTA = 0;
  4673                           
  4674                           ;incstack = 0
  4675  001148  6A80               	clrf	128,c	;volatile
  4676                           
  4677                           ;main.c: 529: LATA = 0;
  4678  00114A  6A89               	clrf	137,c	;volatile
  4679                           
  4680                           ;main.c: 530: TRISA = 0;
  4681  00114C  6A92               	clrf	146,c	;volatile
  4682                           
  4683                           ;main.c: 531: PORTB = 0;
  4684  00114E  6A81               	clrf	129,c	;volatile
  4685                           
  4686                           ;main.c: 532: LATB = 0;
  4687  001150  6A8A               	clrf	138,c	;volatile
  4688                           
  4689                           ;main.c: 533: TRISB = 0b00000110;
  4690  001152  0E06               	movlw	6
  4691  001154  6E93               	movwf	147,c	;volatile
  4692                           
  4693                           ;main.c: 534: PORTC = 0;
  4694  001156  6A82               	clrf	130,c	;volatile
  4695                           
  4696                           ;main.c: 535: LATC = 0;
  4697  001158  6A8B               	clrf	139,c	;volatile
  4698                           
  4699                           ;main.c: 536: TRISC = 0;
  4700  00115A  6A94               	clrf	148,c	;volatile
  4701                           
  4702                           ;main.c: 537: OSCCONbits.SCS0 = 0;
  4703  00115C  90D3               	bcf	211,0,c	;volatile
  4704                           
  4705                           ;main.c: 538: OSCCONbits.SCS1 = 1;
  4706  00115E  82D3               	bsf	211,1,c	;volatile
  4707                           
  4708                           ;main.c: 539: OSCCONbits.IRCF = 0b111;
  4709  001160  0E70               	movlw	112
  4710  001162  12D3               	iorwf	211,f,c	;volatile
  4711                           
  4712                           ;main.c: 540: ADCON1bits.PCFG = 0b1111;
  4713  001164  0E0F               	movlw	15
  4714  001166  12C1               	iorwf	193,f,c	;volatile
  4715                           
  4716                           ;main.c: 542: PORTAbits.RA6 = 1;
  4717  001168  8C80               	bsf	128,6,c	;volatile
  4718                           
  4719                           ;main.c: 544: init_ds18b20();
  4720  00116A  EC6A  F008         	call	_init_ds18b20	;wreg free
  4721                           
  4722                           ;main.c: 546: T1CON = 0b10000000;
  4723  00116E  0E80               	movlw	128
  4724  001170  6ECD               	movwf	205,c	;volatile
  4725                           
  4726                           ;main.c: 548: TMR1H = ((unsigned char)(((15536)>>8)&0xFF));
  4727  001172  0E3C               	movlw	60
  4728  001174  6ECF               	movwf	207,c	;volatile
  4729                           
  4730                           ;main.c: 549: TMR1L = ((unsigned char)((15536)&0xFF));
  4731  001176  0EB0               	movlw	176
  4732  001178  6ECE               	movwf	206,c	;volatile
  4733                           
  4734                           ;main.c: 551: T0CONbits.T0PS = 0b000;
  4735  00117A  0EF8               	movlw	-8
  4736  00117C  16D5               	andwf	213,f,c	;volatile
  4737                           
  4738                           ;main.c: 552: T0CONbits.PSA = 1;
  4739  00117E  86D5               	bsf	213,3,c	;volatile
  4740                           
  4741                           ;main.c: 553: T0CONbits.T08BIT = 0;
  4742  001180  9CD5               	bcf	213,6,c	;volatile
  4743                           
  4744                           ;main.c: 554: T0CONbits.T0CS = 0;
  4745  001182  9AD5               	bcf	213,5,c	;volatile
  4746                           
  4747                           ;main.c: 555: T0CONbits.TMR0ON = 1;
  4748  001184  8ED5               	bsf	213,7,c	;volatile
  4749                           
  4750                           ;main.c: 556: TMR0H = ((unsigned char)(((45536)>>8)&0xFF));
  4751  001186  0EB1               	movlw	177
  4752  001188  6ED7               	movwf	215,c	;volatile
  4753                           
  4754                           ;main.c: 557: TMR0L = ((unsigned char)((45536)&0xFF));
  4755  00118A  0EE0               	movlw	224
  4756  00118C  6ED6               	movwf	214,c	;volatile
  4757                           
  4758                           ;main.c: 558: INTCONbits.T0IE = 1;
  4759  00118E  8AF2               	bsf	242,5,c	;volatile
  4760                           
  4761                           ;main.c: 559: INTCON2bits.RBPU = 0;
  4762  001190  9EF1               	bcf	241,7,c	;volatile
  4763                           
  4764                           ;main.c: 563: PIE1bits.TMR1IE = 1;
  4765  001192  809D               	bsf	157,0,c	;volatile
  4766                           
  4767                           ;main.c: 564: INTCONbits.PEIE = 1;
  4768  001194  8CF2               	bsf	242,6,c	;volatile
  4769                           
  4770                           ;main.c: 565: INTCONbits.GIE = 1;
  4771  001196  8EF2               	bsf	242,7,c	;volatile
  4772                           
  4773                           ;main.c: 566: initLCD();
  4774  001198  ECAC  F006         	call	_initLCD	;wreg free
  4775                           
  4776                           ;main.c: 567: cgrom_char(symbol_4, 1);
  4777  00119C  0E07               	movlw	low _symbol_4
  4778  00119E  6E32               	movwf	cgrom_char@symbol^0,c
  4779  0011A0  0E1F               	movlw	high _symbol_4
  4780  0011A2  6E33               	movwf	(cgrom_char@symbol+1)^0,c
  4781  0011A4  0E01               	movlw	1
  4782  0011A6  6E34               	movwf	cgrom_char@address^0,c
  4783  0011A8  EC0C  F00A         	call	_cgrom_char	;wreg free
  4784                           
  4785                           ;main.c: 568: LATCbits.LATC4 = 0;
  4786  0011AC  988B               	bcf	139,4,c	;volatile
  4787                           
  4788                           ;main.c: 569: snd_k = 0;
  4789  0011AE  984B               	bcf	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  4790                           
  4791                           ;main.c: 570: snd_b = 0;
  4792  0011B0  964B               	bcf	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  4793                           
  4794                           ;main.c: 571: snd_all = 0;
  4795  0011B2  944B               	bcf	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  4796  0011B4  0012               	return		;funcret
  4797  0011B6                     __end_of_Main_init:
  4798                           	callstack 0
  4799                           
  4800 ;; *************** function _init_ds18b20 *****************
  4801 ;; Defined at:
  4802 ;;		line 18 in file "ds18b20.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;		None
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  i               1    9[COMRAM] unsigned char 
  4807 ;;  q               1    8[COMRAM] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1
  4817 ;;      Params:         0       0       0
  4818 ;;      Locals:         2       0       0
  4819 ;;      Temps:          2       0       0
  4820 ;;      Totals:         4       0       0
  4821 ;;Total ram usage:        4 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    3
  4824 ;; This function calls:
  4825 ;;		_ow_reset
  4826 ;;		_read_eep
  4827 ;;		_write_byte
  4828 ;; This function is called by:
  4829 ;;		_Main_init
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text19
  4834  0010D4                     __ptext19:
  4835                           	callstack 0
  4836  0010D4                     _init_ds18b20:
  4837                           	callstack 26
  4838                           
  4839                           ;ds18b20.c: 20: if (!ow_reset())
  4840                           
  4841                           ;incstack = 0
  4842  0010D4  EC25  F00A         	call	_ow_reset	;wreg free
  4843  0010D8  0900               	iorlw	0
  4844  0010DA  E10F               	bnz	l2327
  4845                           
  4846                           ;ds18b20.c: 21: {;ds18b20.c: 23: write_byte(0xCC);
  4847  0010DC  0ECC               	movlw	204
  4848  0010DE  ECD7  F009         	call	_write_byte
  4849                           
  4850                           ;ds18b20.c: 24: write_byte(0x4E);
  4851  0010E2  0E4E               	movlw	78
  4852  0010E4  ECD7  F009         	call	_write_byte
  4853                           
  4854                           ;ds18b20.c: 25: write_byte(0x00);
  4855  0010E8  0E00               	movlw	0
  4856  0010EA  ECD7  F009         	call	_write_byte
  4857                           
  4858                           ;ds18b20.c: 26: write_byte(0x00);
  4859  0010EE  0E00               	movlw	0
  4860  0010F0  ECD7  F009         	call	_write_byte
  4861                           
  4862                           ;ds18b20.c: 27: write_byte(0x7F);
  4863  0010F4  0E7F               	movlw	127
  4864  0010F6  ECD7  F009         	call	_write_byte
  4865  0010FA                     l2327:
  4866                           
  4867                           ;ds18b20.c: 28: };ds18b20.c: 30: for (uint8_t q = 0; q < 2; q++) {
  4868  0010FA  6A36               	clrf	init_ds18b20@q^0,c
  4869  0010FC                     l312:
  4870                           
  4871                           ;ds18b20.c: 31: for (uint8_t i = 0; i < 8; i++) {
  4872  0010FC  6A37               	clrf	init_ds18b20@i^0,c
  4873  0010FE                     l2337:
  4874                           
  4875                           ;ds18b20.c: 32: rom_dq[q][i] = read_eep((q*8) + i);
  4876  0010FE  5036               	movf	init_ds18b20@q^0,w,c
  4877  001100  0D08               	mullw	8
  4878  001102  50F3               	movf	243,w,c
  4879  001104  0F01               	addlw	low _rom_dq
  4880  001106  2437               	addwf	init_ds18b20@i^0,w,c
  4881  001108  6ED9               	movwf	fsr2l,c
  4882  00110A  6ADA               	clrf	fsr2h,c
  4883  00110C  5036               	movf	init_ds18b20@q^0,w,c
  4884  00110E  6E34               	movwf	??_init_ds18b20^0,c
  4885  001110  6A35               	clrf	(??_init_ds18b20+1)^0,c
  4886  001112  90D8               	bcf	status,0,c
  4887  001114  3634               	rlcf	??_init_ds18b20^0,f,c
  4888  001116  3635               	rlcf	(??_init_ds18b20+1)^0,f,c
  4889  001118  90D8               	bcf	status,0,c
  4890  00111A  3634               	rlcf	??_init_ds18b20^0,f,c
  4891  00111C  3635               	rlcf	(??_init_ds18b20+1)^0,f,c
  4892  00111E  90D8               	bcf	status,0,c
  4893  001120  3634               	rlcf	??_init_ds18b20^0,f,c
  4894  001122  3635               	rlcf	(??_init_ds18b20+1)^0,f,c
  4895  001124  5037               	movf	init_ds18b20@i^0,w,c
  4896  001126  2434               	addwf	??_init_ds18b20^0,w,c
  4897  001128  6E2E               	movwf	read_eep@address^0,c
  4898  00112A  0E00               	movlw	0
  4899  00112C  2035               	addwfc	(??_init_ds18b20+1)^0,w,c
  4900  00112E  6E2F               	movwf	(read_eep@address+1)^0,c
  4901  001130  ECBB  F00A         	call	_read_eep	;wreg free
  4902  001134  6EDF               	movwf	indf2,c
  4903  001136  2A37               	incf	init_ds18b20@i^0,f,c
  4904  001138  0E07               	movlw	7
  4905  00113A  6437               	cpfsgt	init_ds18b20@i^0,c
  4906  00113C  D7E0               	goto	l2337
  4907  00113E  2A36               	incf	init_ds18b20@q^0,f,c
  4908  001140  0E01               	movlw	1
  4909  001142  6436               	cpfsgt	init_ds18b20@q^0,c
  4910  001144  D7DB               	goto	l312
  4911  001146  0C01               	retlw	1
  4912  001148                     __end_of_init_ds18b20:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _write_byte *****************
  4916 ;; Defined at:
  4917 ;;		line 66 in file "onewire.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  val             1    wreg     unsigned char 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  val             1    3[COMRAM] unsigned char 
  4922 ;;  i               1    5[COMRAM] unsigned char 
  4923 ;;  temp            1    4[COMRAM] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1
  4933 ;;      Params:         0       0       0
  4934 ;;      Locals:         3       0       0
  4935 ;;      Temps:          2       0       0
  4936 ;;      Totals:         5       0       0
  4937 ;;Total ram usage:        5 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    2
  4940 ;; This function calls:
  4941 ;;		_write_bit
  4942 ;; This function is called by:
  4943 ;;		_init_ds18b20
  4944 ;;		_ds18b20_readTemp
  4945 ;;		_ds18b20_readrom
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text20
  4950  0013AE                     __ptext20:
  4951                           	callstack 0
  4952  0013AE                     _write_byte:
  4953                           	callstack 27
  4954                           
  4955                           ;incstack = 0
  4956                           ;write_byte@val stored from wreg
  4957  0013AE  6E31               	movwf	write_byte@val^0,c
  4958                           
  4959                           ;onewire.c: 68: uint8_t i;;onewire.c: 69: uint8_t temp;;onewire.c: 71: for (i=0;i<8;i++)
  4960  0013B0  6A33               	clrf	write_byte@i^0,c
  4961  0013B2                     l1305:
  4962                           
  4963                           ;onewire.c: 72: {;onewire.c: 73: temp = val >> i;
  4964  0013B2  C033  F02F         	movff	write_byte@i,??_write_byte
  4965  0013B6  C031  F030         	movff	write_byte@val,??_write_byte+1
  4966  0013BA  2A2F               	incf	??_write_byte^0,f,c
  4967  0013BC  D002               	goto	u124
  4968  0013BE                     u125:
  4969  0013BE  90D8               	bcf	status,0,c
  4970  0013C0  3230               	rrcf	(??_write_byte+1)^0,f,c
  4971  0013C2                     u124:
  4972  0013C2  2E2F               	decfsz	??_write_byte^0,f,c
  4973  0013C4  D7FC               	goto	u125
  4974  0013C6  5030               	movf	(??_write_byte+1)^0,w,c
  4975  0013C8  6E32               	movwf	write_byte@temp^0,c
  4976                           
  4977                           ;onewire.c: 74: temp &= 0x01;
  4978  0013CA  0E01               	movlw	1
  4979  0013CC  1632               	andwf	write_byte@temp^0,f,c
  4980                           
  4981                           ;onewire.c: 75: write_bit(temp);
  4982  0013CE  5032               	movf	write_byte@temp^0,w,c
  4983  0013D0  EC86  F00A         	call	_write_bit
  4984  0013D4  2A33               	incf	write_byte@i^0,f,c
  4985  0013D6  0E07               	movlw	7
  4986  0013D8  6433               	cpfsgt	write_byte@i^0,c
  4987  0013DA  D7EB               	goto	l1305
  4988                           
  4989                           ;onewire.c: 76: };onewire.c: 78: _delay((unsigned long)((105)*(8000000/4000000.0)));
  4990  0013DC  0E46               	movlw	70
  4991  0013DE                     u2407:
  4992  0013DE  2EE8               	decfsz	wreg,f,c
  4993  0013E0  D7FE               	bra	u2407
  4994  0013E2  0012               	return		;funcret
  4995  0013E4                     __end_of_write_byte:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function _write_bit *****************
  4999 ;; Defined at:
  5000 ;;		line 34 in file "onewire.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  bitval          1    wreg     unsigned char 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  bitval          1    0[COMRAM] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      void 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0, cstack
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1
  5014 ;;      Params:         0       0       0
  5015 ;;      Locals:         1       0       0
  5016 ;;      Temps:          0       0       0
  5017 ;;      Totals:         1       0       0
  5018 ;;Total ram usage:        1 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; Hardware stack levels required when called:    1
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_write_byte
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text21
  5029  00150C                     __ptext21:
  5030                           	callstack 0
  5031  00150C                     _write_bit:
  5032                           	callstack 27
  5033                           
  5034                           ;incstack = 0
  5035                           ;write_bit@bitval stored from wreg
  5036  00150C  6E2E               	movwf	write_bit@bitval^0,c
  5037                           
  5038                           ;onewire.c: 36: PORTAbits.RA6 = 0;
  5039  00150E  9C80               	bcf	128,6,c	;volatile
  5040                           
  5041                           ;onewire.c: 37: TRISAbits.TRISA6 = 0;
  5042  001510  9C92               	bcf	146,6,c	;volatile
  5043                           
  5044                           ;onewire.c: 38: if(bitval == 1) {
  5045  001512  042E               	decf	write_bit@bitval^0,w,c
  5046  001514  E104               	bnz	l1271
  5047                           
  5048                           ;onewire.c: 39: _delay((unsigned long)((2)*(8000000/4000000.0)));
  5049  001516  D000               	nop2		;2 cycle nop
  5050  001518  D000               	nop2		;2 cycle nop
  5051                           
  5052                           ;onewire.c: 40: PORTAbits.RA6 = 1;
  5053  00151A  8C80               	bsf	128,6,c	;volatile
  5054                           
  5055                           ;onewire.c: 41: TRISAbits.TRISA6 = 1;
  5056  00151C  8C92               	bsf	146,6,c	;volatile
  5057  00151E                     l1271:
  5058                           
  5059                           ;onewire.c: 42: };onewire.c: 43: _delay((unsigned long)((105)*(8000000/4000000.0)));
  5060  00151E  0E46               	movlw	70
  5061  001520                     u2417:
  5062  001520  2EE8               	decfsz	wreg,f,c
  5063  001522  D7FE               	bra	u2417
  5064                           
  5065                           ;onewire.c: 44: PORTAbits.RA6 = 1;
  5066  001524  8C80               	bsf	128,6,c	;volatile
  5067                           
  5068                           ;onewire.c: 45: TRISAbits.TRISA6 = 1;
  5069  001526  8C92               	bsf	146,6,c	;volatile
  5070  001528  0012               	return		;funcret
  5071  00152A                     __end_of_write_bit:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function _read_eep *****************
  5075 ;; Defined at:
  5076 ;;		line 25 in file "eeprom.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  address         2    0[COMRAM] unsigned short 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      unsigned char 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1
  5090 ;;      Params:         2       0       0
  5091 ;;      Locals:         0       0       0
  5092 ;;      Temps:          0       0       0
  5093 ;;      Totals:         2       0       0
  5094 ;;Total ram usage:        2 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    1
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_main
  5101 ;;		_init_ds18b20
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text22
  5106  001576                     __ptext22:
  5107                           	callstack 0
  5108  001576                     _read_eep:
  5109                           	callstack 29
  5110                           
  5111                           ;eeprom.c: 28: {}
  5112                           
  5113                           ;incstack = 0
  5114  001576  B2A6               	btfsc	166,1,c	;volsfr
  5115  001578  D7FE               	goto	_read_eep
  5116                           
  5117                           ;eeprom.c: 30: EEADR = address;
  5118  00157A  C02E  FFA9         	movff	read_eep@address,4009	;volatile
  5119                           
  5120                           ;eeprom.c: 31: EECON1bits.EEPGD = 0;
  5121  00157E  9EA6               	bcf	166,7,c	;volsfr
  5122                           
  5123                           ;eeprom.c: 32: EECON1bits.CFGS = 0;
  5124  001580  9CA6               	bcf	166,6,c	;volsfr
  5125                           
  5126                           ;eeprom.c: 33: EECON1bits.RD = 1;
  5127  001582  80A6               	bsf	166,0,c	;volsfr
  5128                           
  5129                           ;eeprom.c: 34: return( EEDATA );
  5130  001584  50A8               	movf	168,w,c	;volatile
  5131  001586  0012               	return		;funcret
  5132  001588                     __end_of_read_eep:
  5133                           	callstack 0
  5134                           
  5135 ;; *************** function _ow_reset *****************
  5136 ;; Defined at:
  5137 ;;		line 5 in file "onewire.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  presence        1    0[COMRAM] unsigned char 
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      unsigned char 
  5144 ;; Registers used:
  5145 ;;		wreg, status,2
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMRAM   BANK0   BANK1
  5151 ;;      Params:         0       0       0
  5152 ;;      Locals:         1       0       0
  5153 ;;      Temps:          0       0       0
  5154 ;;      Totals:         1       0       0
  5155 ;;Total ram usage:        1 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    1
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_init_ds18b20
  5162 ;;		_ds18b20_readTemp
  5163 ;;		_ds18b20_readrom
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text23
  5168  00144A                     __ptext23:
  5169                           	callstack 0
  5170  00144A                     _ow_reset:
  5171                           	callstack 28
  5172                           
  5173                           ;onewire.c: 7: uint8_t presence;;onewire.c: 8: PORTAbits.RA6 = 0;
  5174                           
  5175                           ;incstack = 0
  5176  00144A  9C80               	bcf	128,6,c	;volatile
  5177                           
  5178                           ;onewire.c: 9: TRISAbits.TRISA6 = 0;
  5179  00144C  9C92               	bcf	146,6,c	;volatile
  5180                           
  5181                           ;onewire.c: 10: _delay((unsigned long)((500)*(8000000/4000000.0)));
  5182  00144E  0EC8               	movlw	200
  5183  001450                     u2427:
  5184  001450  D000               	nop2	
  5185  001452  2EE8               	decfsz	wreg,f,c
  5186  001454  D7FD               	bra	u2427
  5187                           
  5188                           ;onewire.c: 11: PORTAbits.RA6 = 1;
  5189  001456  8C80               	bsf	128,6,c	;volatile
  5190                           
  5191                           ;onewire.c: 12: TRISAbits.TRISA6 = 1;
  5192  001458  8C92               	bsf	146,6,c	;volatile
  5193                           
  5194                           ;onewire.c: 13: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5195  00145A  0E42               	movlw	66
  5196  00145C                     u2437:
  5197  00145C  2EE8               	decfsz	wreg,f,c
  5198  00145E  D7FE               	bra	u2437
  5199  001460  D000               	nop2	
  5200                           
  5201                           ;onewire.c: 14: presence = PORTAbits.RA6;
  5202  001462  0E00               	movlw	0
  5203  001464  BC80               	btfsc	128,6,c	;volatile
  5204  001466  0E01               	movlw	1
  5205  001468  6E2E               	movwf	ow_reset@presence^0,c
  5206                           
  5207                           ;onewire.c: 15: _delay((unsigned long)((424)*(8000000/4000000.0)));
  5208  00146A  0EA9               	movlw	169
  5209  00146C                     u2447:
  5210  00146C  D000               	nop2	
  5211  00146E  2EE8               	decfsz	wreg,f,c
  5212  001470  D7FD               	bra	u2447
  5213  001472  D000               	nop2	
  5214  001474  F000               	nop	
  5215                           
  5216                           ;onewire.c: 16: return(presence);
  5217  001476  502E               	movf	ow_reset@presence^0,w,c
  5218  001478  0012               	return		;funcret
  5219  00147A                     __end_of_ow_reset:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function _initLCD *****************
  5223 ;; Defined at:
  5224 ;;		line 10 in file "hd44780.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;		None
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      void 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0, cstack
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1
  5238 ;;      Params:         0       0       0
  5239 ;;      Locals:         0       0       0
  5240 ;;      Temps:          1       0       0
  5241 ;;      Totals:         1       0       0
  5242 ;;Total ram usage:        1 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    4
  5245 ;; This function calls:
  5246 ;;		_clearLCD
  5247 ;;		_lcdNibble
  5248 ;;		_lcdWrite
  5249 ;; This function is called by:
  5250 ;;		_Main_init
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text24
  5255  000D58                     __ptext24:
  5256                           	callstack 0
  5257  000D58                     _initLCD:
  5258                           	callstack 25
  5259                           
  5260                           ;hd44780.c: 11: PORTAbits.RA2 = 0;
  5261                           
  5262                           ;incstack = 0
  5263  000D58  9480               	bcf	128,2,c	;volatile
  5264                           
  5265                           ;hd44780.c: 12: PORTAbits.RA1 = 0;
  5266  000D5A  9280               	bcf	128,1,c	;volatile
  5267                           
  5268                           ;hd44780.c: 14: _delay((unsigned long)((10)*(8000000/4000.0)));
  5269  000D5C  0E1A               	movlw	26
  5270  000D5E  6E33               	movwf	??_initLCD^0,c
  5271  000D60  0EF8               	movlw	248
  5272  000D62                     u2457:
  5273  000D62  2EE8               	decfsz	wreg,f,c
  5274  000D64  D7FE               	bra	u2457
  5275  000D66  2E33               	decfsz	??_initLCD^0,f,c
  5276  000D68  D7FC               	bra	u2457
  5277  000D6A  D000               	nop2	
  5278                           
  5279                           ;hd44780.c: 15: _delay((unsigned long)((10)*(8000000/4000.0)));
  5280  000D6C  0E1A               	movlw	26
  5281  000D6E  6E33               	movwf	??_initLCD^0,c
  5282  000D70  0EF8               	movlw	248
  5283  000D72                     u2467:
  5284  000D72  2EE8               	decfsz	wreg,f,c
  5285  000D74  D7FE               	bra	u2467
  5286  000D76  2E33               	decfsz	??_initLCD^0,f,c
  5287  000D78  D7FC               	bra	u2467
  5288  000D7A  D000               	nop2	
  5289                           
  5290                           ;hd44780.c: 16: _delay((unsigned long)((10)*(8000000/4000.0)));
  5291  000D7C  0E1A               	movlw	26
  5292  000D7E  6E33               	movwf	??_initLCD^0,c
  5293  000D80  0EF8               	movlw	248
  5294  000D82                     u2477:
  5295  000D82  2EE8               	decfsz	wreg,f,c
  5296  000D84  D7FE               	bra	u2477
  5297  000D86  2E33               	decfsz	??_initLCD^0,f,c
  5298  000D88  D7FC               	bra	u2477
  5299  000D8A  D000               	nop2	
  5300                           
  5301                           ;hd44780.c: 17: _delay((unsigned long)((10)*(8000000/4000.0)));
  5302  000D8C  0E1A               	movlw	26
  5303  000D8E  6E33               	movwf	??_initLCD^0,c
  5304  000D90  0EF8               	movlw	248
  5305  000D92                     u2487:
  5306  000D92  2EE8               	decfsz	wreg,f,c
  5307  000D94  D7FE               	bra	u2487
  5308  000D96  2E33               	decfsz	??_initLCD^0,f,c
  5309  000D98  D7FC               	bra	u2487
  5310  000D9A  D000               	nop2	
  5311                           
  5312                           ;hd44780.c: 21: lcdNibble(0b0011);
  5313  000D9C  0E03               	movlw	3
  5314  000D9E  EC2D  F008         	call	_lcdNibble
  5315                           
  5316                           ;hd44780.c: 22: _delay((unsigned long)((5)*(8000000/4000.0)));
  5317  000DA2  0E0D               	movlw	13
  5318  000DA4  6E33               	movwf	??_initLCD^0,c
  5319  000DA6  0EFC               	movlw	252
  5320  000DA8                     u2497:
  5321  000DA8  2EE8               	decfsz	wreg,f,c
  5322  000DAA  D7FE               	bra	u2497
  5323  000DAC  2E33               	decfsz	??_initLCD^0,f,c
  5324  000DAE  D7FC               	bra	u2497
  5325                           
  5326                           ;hd44780.c: 23: lcdNibble(0b0011);
  5327  000DB0  0E03               	movlw	3
  5328  000DB2  EC2D  F008         	call	_lcdNibble
  5329                           
  5330                           ;hd44780.c: 24: _delay((unsigned long)((5)*(8000000/4000.0)));
  5331  000DB6  0E0D               	movlw	13
  5332  000DB8  6E33               	movwf	??_initLCD^0,c
  5333  000DBA  0EFC               	movlw	252
  5334  000DBC                     u2507:
  5335  000DBC  2EE8               	decfsz	wreg,f,c
  5336  000DBE  D7FE               	bra	u2507
  5337  000DC0  2E33               	decfsz	??_initLCD^0,f,c
  5338  000DC2  D7FC               	bra	u2507
  5339                           
  5340                           ;hd44780.c: 25: lcdNibble(0b0011);
  5341  000DC4  0E03               	movlw	3
  5342  000DC6  EC2D  F008         	call	_lcdNibble
  5343                           
  5344                           ;hd44780.c: 26: _delay((unsigned long)((5)*(8000000/4000.0)));
  5345  000DCA  0E0D               	movlw	13
  5346  000DCC  6E33               	movwf	??_initLCD^0,c
  5347  000DCE  0EFC               	movlw	252
  5348  000DD0                     u2517:
  5349  000DD0  2EE8               	decfsz	wreg,f,c
  5350  000DD2  D7FE               	bra	u2517
  5351  000DD4  2E33               	decfsz	??_initLCD^0,f,c
  5352  000DD6  D7FC               	bra	u2517
  5353                           
  5354                           ;hd44780.c: 27: lcdNibble(0b0010);
  5355  000DD8  0E02               	movlw	2
  5356  000DDA  EC2D  F008         	call	_lcdNibble
  5357                           
  5358                           ;hd44780.c: 28: _delay((unsigned long)((5)*(8000000/4000.0)));
  5359  000DDE  0E0D               	movlw	13
  5360  000DE0  6E33               	movwf	??_initLCD^0,c
  5361  000DE2  0EFC               	movlw	252
  5362  000DE4                     u2527:
  5363  000DE4  2EE8               	decfsz	wreg,f,c
  5364  000DE6  D7FE               	bra	u2527
  5365  000DE8  2E33               	decfsz	??_initLCD^0,f,c
  5366  000DEA  D7FC               	bra	u2527
  5367                           
  5368                           ;hd44780.c: 31: lcdWrite(((0b0010 << 4) | (1 << 3)), COMMAND);
  5369  000DEC  0E00               	movlw	0
  5370  000DEE  6E30               	movwf	lcdWrite@type^0,c
  5371  000DF0  0E28               	movlw	40
  5372  000DF2  EC74  F00A         	call	_lcdWrite
  5373                           
  5374                           ;hd44780.c: 32: _delay((unsigned long)((5)*(8000000/4000.0)));
  5375  000DF6  0E0D               	movlw	13
  5376  000DF8  6E33               	movwf	??_initLCD^0,c
  5377  000DFA  0EFC               	movlw	252
  5378  000DFC                     u2537:
  5379  000DFC  2EE8               	decfsz	wreg,f,c
  5380  000DFE  D7FE               	bra	u2537
  5381  000E00  2E33               	decfsz	??_initLCD^0,f,c
  5382  000E02  D7FC               	bra	u2537
  5383                           
  5384                           ;hd44780.c: 33: lcdWrite(((0b1100) | (0 << 1) | (0 << 0)), COMMAND);
  5385  000E04  0E00               	movlw	0
  5386  000E06  6E30               	movwf	lcdWrite@type^0,c
  5387  000E08  0E0C               	movlw	12
  5388  000E0A  EC74  F00A         	call	_lcdWrite
  5389                           
  5390                           ;hd44780.c: 34: _delay((unsigned long)((8)*(8000000/4000.0)));
  5391  000E0E  0E15               	movlw	21
  5392  000E10  6E33               	movwf	??_initLCD^0,c
  5393  000E12  0EC6               	movlw	198
  5394  000E14                     u2547:
  5395  000E14  2EE8               	decfsz	wreg,f,c
  5396  000E16  D7FE               	bra	u2547
  5397  000E18  2E33               	decfsz	??_initLCD^0,f,c
  5398  000E1A  D7FC               	bra	u2547
  5399  000E1C  D000               	nop2	
  5400                           
  5401                           ;hd44780.c: 35: clearLCD();
  5402  000E1E  ECA3  F00A         	call	_clearLCD	;wreg free
  5403                           
  5404                           ;hd44780.c: 36: _delay((unsigned long)((5)*(8000000/4000.0)));
  5405  000E22  0E0D               	movlw	13
  5406  000E24  6E33               	movwf	??_initLCD^0,c
  5407  000E26  0EFC               	movlw	252
  5408  000E28                     u2557:
  5409  000E28  2EE8               	decfsz	wreg,f,c
  5410  000E2A  D7FE               	bra	u2557
  5411  000E2C  2E33               	decfsz	??_initLCD^0,f,c
  5412  000E2E  D7FC               	bra	u2557
  5413                           
  5414                           ;hd44780.c: 37: lcdWrite(0x06, COMMAND);
  5415  000E30  0E00               	movlw	0
  5416  000E32  6E30               	movwf	lcdWrite@type^0,c
  5417  000E34  0E06               	movlw	6
  5418  000E36  EC74  F00A         	call	_lcdWrite
  5419                           
  5420                           ;hd44780.c: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
  5421  000E3A  0E0D               	movlw	13
  5422  000E3C  6E33               	movwf	??_initLCD^0,c
  5423  000E3E  0EFC               	movlw	252
  5424  000E40                     u2567:
  5425  000E40  2EE8               	decfsz	wreg,f,c
  5426  000E42  D7FE               	bra	u2567
  5427  000E44  2E33               	decfsz	??_initLCD^0,f,c
  5428  000E46  D7FC               	bra	u2567
  5429                           
  5430                           ;hd44780.c: 39: clearLCD();
  5431  000E48  ECA3  F00A         	call	_clearLCD	;wreg free
  5432                           
  5433                           ;hd44780.c: 41: PORTAbits.RA2 = 1;
  5434  000E4C  8480               	bsf	128,2,c	;volatile
  5435  000E4E  0012               	return		;funcret
  5436  000E50                     __end_of_initLCD:
  5437                           	callstack 0
  5438                           
  5439 ;; *************** function _clearLCD *****************
  5440 ;; Defined at:
  5441 ;;		line 45 in file "hd44780.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;		None
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      void 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0, cstack
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1
  5455 ;;      Params:         0       0       0
  5456 ;;      Locals:         0       0       0
  5457 ;;      Temps:          1       0       0
  5458 ;;      Totals:         1       0       0
  5459 ;;Total ram usage:        1 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    3
  5462 ;; This function calls:
  5463 ;;		_lcdWrite
  5464 ;; This function is called by:
  5465 ;;		_main
  5466 ;;		_initLCD
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text25
  5471  001546                     __ptext25:
  5472                           	callstack 0
  5473  001546                     _clearLCD:
  5474                           	callstack 0
  5475                           
  5476                           ;hd44780.c: 46: lcdWrite(0x01, COMMAND);
  5477                           
  5478                           ;incstack = 0
  5479  001546  ECE5  F007         	call	PL60	;call to abstracted procedure
  5480  00154A  EC74  F00A         	call	_lcdWrite
  5481                           
  5482                           ;hd44780.c: 47: _delay((unsigned long)((2)*(8000000/4000.0)));
  5483  00154E  0E06               	movlw	6
  5484  001550  6E32               	movwf	??_clearLCD^0,c
  5485  001552  0E30               	movlw	48
  5486  001554                     u2577:
  5487  001554  2EE8               	decfsz	wreg,f,c
  5488  001556  D7FE               	bra	u2577
  5489  001558  2E32               	decfsz	??_clearLCD^0,f,c
  5490  00155A  D7FC               	bra	u2577
  5491  00155C  D000               	nop2	
  5492  00155E  0012               	return		;funcret
  5493  001560                     __end_of_clearLCD:
  5494                           	callstack 0
  5495                           
  5496 ;; *************** function _cgrom_char *****************
  5497 ;; Defined at:
  5498 ;;		line 127 in file "hd44780.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  symbol          2    4[COMRAM] PTR unsigned char 
  5501 ;;		 -> symbol_4(8), 
  5502 ;;  address         1    6[COMRAM] unsigned char 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  i               1    7[COMRAM] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1
  5514 ;;      Params:         3       0       0
  5515 ;;      Locals:         1       0       0
  5516 ;;      Temps:          0       0       0
  5517 ;;      Totals:         4       0       0
  5518 ;;Total ram usage:        4 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    3
  5521 ;; This function calls:
  5522 ;;		_lcdWrite
  5523 ;; This function is called by:
  5524 ;;		_Main_init
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text26
  5529  001418                     __ptext26:
  5530                           	callstack 0
  5531  001418                     _cgrom_char:
  5532                           	callstack 26
  5533                           
  5534                           ;hd44780.c: 128: uint8_t i;;hd44780.c: 129: lcdWrite(0x40 | (address * 8), COMMAND);
  5535                           
  5536                           ;incstack = 0
  5537  001418  6A30               	clrf	lcdWrite@type^0,c
  5538  00141A  5034               	movf	cgrom_char@address^0,w,c
  5539  00141C  0D08               	mullw	8
  5540  00141E  50F3               	movf	243,w,c
  5541  001420  0940               	iorlw	64
  5542  001422  EC74  F00A         	call	_lcdWrite
  5543                           
  5544                           ;hd44780.c: 130: for (i = 0; i < 8; i++)
  5545  001426  6A35               	clrf	cgrom_char@i^0,c
  5546  001428                     l2385:
  5547                           
  5548                           ;hd44780.c: 131: lcdWrite(*symbol++, DATA);
  5549  001428  0E01               	movlw	1
  5550  00142A  6E30               	movwf	lcdWrite@type^0,c
  5551  00142C  C032  FFF6         	movff	cgrom_char@symbol,tblptrl
  5552  001430  C033  FFF7         	movff	cgrom_char@symbol+1,tblptrh
  5553  001434                     	if	0	;tblptru may be non-zero
  5554  001434                     	endif
  5555  001434                     	if	0	;tblptru may be non-zero
  5556  001434                     	endif
  5557  001434  0008               	tblrd		*
  5558  001436  50F5               	movf	tablat,w,c
  5559  001438  EC74  F00A         	call	_lcdWrite
  5560  00143C  4A32               	infsnz	cgrom_char@symbol^0,f,c
  5561  00143E  2A33               	incf	(cgrom_char@symbol+1)^0,f,c
  5562  001440  2A35               	incf	cgrom_char@i^0,f,c
  5563  001442  0E07               	movlw	7
  5564  001444  6435               	cpfsgt	cgrom_char@i^0,c
  5565  001446  D7F0               	goto	l2385
  5566  001448  0C07               	retlw	7
  5567  00144A                     __end_of_cgrom_char:
  5568                           	callstack 0
  5569                           
  5570 ;; *************** function _lcdWrite *****************
  5571 ;; Defined at:
  5572 ;;		line 50 in file "hd44780.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  byte            1    wreg     unsigned char 
  5575 ;;  type            1    2[COMRAM] enum E2011
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  byte            1    3[COMRAM] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      void 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1
  5587 ;;      Params:         1       0       0
  5588 ;;      Locals:         1       0       0
  5589 ;;      Temps:          0       0       0
  5590 ;;      Totals:         2       0       0
  5591 ;;Total ram usage:        2 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    2
  5594 ;; This function calls:
  5595 ;;		_lcdNibble
  5596 ;; This function is called by:
  5597 ;;		_initLCD
  5598 ;;		_clearLCD
  5599 ;;		_lcd_gotoxy
  5600 ;;		_lcd_putc
  5601 ;;		_lcdPrint
  5602 ;;		_cgrom_char
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text27
  5607  0014E8                     __ptext27:
  5608                           	callstack 0
  5609  0014E8                     _lcdWrite:
  5610                           	callstack 27
  5611                           
  5612                           ;incstack = 0
  5613                           ;lcdWrite@byte stored from wreg
  5614  0014E8  6E31               	movwf	lcdWrite@byte^0,c
  5615                           
  5616                           ;hd44780.c: 51: if (type == COMMAND)
  5617  0014EA  5030               	movf	lcdWrite@type^0,w,c
  5618  0014EC  E102               	bnz	l382
  5619                           
  5620                           ;hd44780.c: 52: PORTAbits.RA2 = 0;
  5621  0014EE  9480               	bcf	128,2,c	;volatile
  5622  0014F0  D001               	goto	l2271
  5623  0014F2                     l382:
  5624                           
  5625                           ;hd44780.c: 53: else;hd44780.c: 54: PORTAbits.RA2 = 1;
  5626  0014F2  8480               	bsf	128,2,c	;volatile
  5627  0014F4                     l2271:
  5628                           
  5629                           ;hd44780.c: 56: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5630  0014F4  0E42               	movlw	66
  5631  0014F6                     u2587:
  5632  0014F6  2EE8               	decfsz	wreg,f,c
  5633  0014F8  D7FE               	bra	u2587
  5634  0014FA  D000               	nop2	
  5635                           
  5636                           ;hd44780.c: 58: lcdNibble(byte >> 4);
  5637  0014FC  3831               	swapf	lcdWrite@byte^0,w,c
  5638  0014FE  0B0F               	andlw	15
  5639  001500  EC2D  F008         	call	_lcdNibble
  5640                           
  5641                           ;hd44780.c: 59: lcdNibble(byte & 0x0F);
  5642  001504  5031               	movf	lcdWrite@byte^0,w,c
  5643  001506  0B0F               	andlw	15
  5644  001508  EF2D  F008         	goto	_lcdNibble
  5645  00150C                     __end_of_lcdWrite:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function _lcdNibble *****************
  5649 ;; Defined at:
  5650 ;;		line 63 in file "hd44780.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  nibble          1    wreg     unsigned char 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  nibble          1    1[COMRAM] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1
  5664 ;;      Params:         0       0       0
  5665 ;;      Locals:         1       0       0
  5666 ;;      Temps:          1       0       0
  5667 ;;      Totals:         2       0       0
  5668 ;;Total ram usage:        2 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:    1
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_initLCD
  5675 ;;		_lcdWrite
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text28
  5680  00105A                     __ptext28:
  5681                           	callstack 0
  5682  00105A                     _lcdNibble:
  5683                           	callstack 27
  5684                           
  5685                           ;incstack = 0
  5686                           ;lcdNibble@nibble stored from wreg
  5687  00105A  6E2F               	movwf	lcdNibble@nibble^0,c
  5688                           
  5689                           ;hd44780.c: 64: PORTCbits.RC0 = (nibble & 0x01) ? 1 : 0;
  5690  00105C  A02F               	btfss	lcdNibble@nibble^0,0,c
  5691  00105E  D003               	goto	u10
  5692  001060  6A2E               	clrf	??_lcdNibble^0,c
  5693  001062  2A2E               	incf	??_lcdNibble^0,f,c
  5694  001064  D001               	goto	u28
  5695  001066                     u10:
  5696  001066  6A2E               	clrf	??_lcdNibble^0,c
  5697  001068                     u28:
  5698  001068  5082               	movf	130,w,c	;volatile
  5699  00106A  182E               	xorwf	??_lcdNibble^0,w,c
  5700  00106C  0BFE               	andlw	-2
  5701  00106E  182E               	xorwf	??_lcdNibble^0,w,c
  5702  001070  6E82               	movwf	130,c	;volatile
  5703                           
  5704                           ;hd44780.c: 65: PORTCbits.RC1 = (nibble & 0x02) ? 1 : 0;
  5705  001072  A22F               	btfss	lcdNibble@nibble^0,1,c
  5706  001074  D003               	goto	u30
  5707  001076  6A2E               	clrf	??_lcdNibble^0,c
  5708  001078  2A2E               	incf	??_lcdNibble^0,f,c
  5709  00107A  D001               	goto	u48
  5710  00107C                     u30:
  5711  00107C  6A2E               	clrf	??_lcdNibble^0,c
  5712  00107E                     u48:
  5713  00107E  462E               	rlncf	??_lcdNibble^0,f,c
  5714  001080  5082               	movf	130,w,c	;volatile
  5715  001082  182E               	xorwf	??_lcdNibble^0,w,c
  5716  001084  0BFD               	andlw	-3
  5717  001086  182E               	xorwf	??_lcdNibble^0,w,c
  5718  001088  6E82               	movwf	130,c	;volatile
  5719                           
  5720                           ;hd44780.c: 66: PORTCbits.RC2 = (nibble & 0x04) ? 1 : 0;
  5721  00108A  A42F               	btfss	lcdNibble@nibble^0,2,c
  5722  00108C  D003               	goto	u50
  5723  00108E  6A2E               	clrf	??_lcdNibble^0,c
  5724  001090  2A2E               	incf	??_lcdNibble^0,f,c
  5725  001092  D001               	goto	u68
  5726  001094                     u50:
  5727  001094  6A2E               	clrf	??_lcdNibble^0,c
  5728  001096                     u68:
  5729  001096  D819               	call	PL32	;call to abstracted procedure
  5730  001098  0BFB               	andlw	-5
  5731  00109A  182E               	xorwf	??_lcdNibble^0,w,c
  5732  00109C  6E82               	movwf	130,c	;volatile
  5733                           
  5734                           ;hd44780.c: 67: PORTCbits.RC3 = (nibble & 0x08) ? 1 : 0;
  5735  00109E  A62F               	btfss	lcdNibble@nibble^0,3,c
  5736  0010A0  D003               	goto	u70
  5737  0010A2  6A2E               	clrf	??_lcdNibble^0,c
  5738  0010A4  2A2E               	incf	??_lcdNibble^0,f,c
  5739  0010A6  D001               	goto	u88
  5740  0010A8                     u70:
  5741  0010A8  6A2E               	clrf	??_lcdNibble^0,c
  5742  0010AA                     u88:
  5743  0010AA  462E               	rlncf	??_lcdNibble^0,f,c
  5744  0010AC  D80E               	call	PL32	;call to abstracted procedure
  5745  0010AE  0BF7               	andlw	-9
  5746  0010B0  182E               	xorwf	??_lcdNibble^0,w,c
  5747  0010B2  6E82               	movwf	130,c	;volatile
  5748                           
  5749                           ;hd44780.c: 70: PORTAbits.RA1 = 1;
  5750  0010B4  8280               	bsf	128,1,c	;volatile
  5751                           
  5752                           ;hd44780.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5753  0010B6  0E42               	movlw	66
  5754  0010B8                     u2597:
  5755  0010B8  2EE8               	decfsz	wreg,f,c
  5756  0010BA  D7FE               	bra	u2597
  5757  0010BC  D000               	nop2	
  5758                           
  5759                           ;hd44780.c: 72: PORTAbits.RA1 = 0;
  5760  0010BE  9280               	bcf	128,1,c	;volatile
  5761                           
  5762                           ;hd44780.c: 73: _delay((unsigned long)((100)*(8000000/4000000.0)));
  5763  0010C0  0E42               	movlw	66
  5764  0010C2                     u2607:
  5765  0010C2  2EE8               	decfsz	wreg,f,c
  5766  0010C4  D7FE               	bra	u2607
  5767  0010C6  D000               	nop2	
  5768  0010C8  0012               	return		;funcret
  5769  0010CA                     __end_of_lcdNibble:
  5770                           	callstack 0
  5771  0010CA                     PL32:
  5772                           	callstack 27
  5773  0010CA  462E               	rlncf	??_lcdNibble^0,f,c
  5774  0010CC  462E               	rlncf	??_lcdNibble^0,f,c
  5775  0010CE  5082               	movf	130,w,c	;volatile
  5776  0010D0  182E               	xorwf	??_lcdNibble^0,w,c
  5777  0010D2  0012               	return	
  5778  0010D4                     __end_ofPL32:
  5779                           	callstack 0
  5780                           
  5781 ;; *************** function _myInt *****************
  5782 ;; Defined at:
  5783 ;;		line 579 in file "main.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1
  5797 ;;      Params:         0       0       0
  5798 ;;      Locals:         0       0       0
  5799 ;;      Temps:          0       0       0
  5800 ;;      Totals:         0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		Interrupt level 2
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	intcode
  5811  000008                     __pintcode:
  5812                           	callstack 0
  5813  000008                     _myInt:
  5814                           	callstack 25
  5815                           
  5816                           ;incstack = 0
  5817  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5818                           
  5819                           ;main.c: 580: static uint8_t snd_delay;;main.c: 581: if (PIR1bits.TMR1IF == 1) {
  5820  00000A  A09E               	btfss	158,0,c	;volatile
  5821  00000C  D00D               	goto	i2l2229
  5822                           
  5823                           ;main.c: 582: PIR1bits.TMR1IF = 0;
  5824  00000E  909E               	bcf	158,0,c	;volatile
  5825                           
  5826                           ;main.c: 583: TMR1H = ((unsigned char)(((15536)>>8)&0xFF));
  5827  000010  0E3C               	movlw	60
  5828  000012  6ECF               	movwf	207,c	;volatile
  5829                           
  5830                           ;main.c: 584: TMR1L = ((unsigned char)((15536)&0xFF));
  5831  000014  0EB0               	movlw	176
  5832  000016  6ECE               	movwf	206,c	;volatile
  5833                           
  5834                           ;main.c: 585: if (++timer_val >= 30)
  5835  000018  2A2D               	incf	_timer_val^0,f,c
  5836  00001A  0E1D               	movlw	29
  5837  00001C  642D               	cpfsgt	_timer_val^0,c
  5838  00001E  D004               	goto	i2l2229
  5839                           
  5840                           ;main.c: 586: {;main.c: 587: timer_val = 0;
  5841  000020  6A2D               	clrf	_timer_val^0,c
  5842                           
  5843                           ;main.c: 588: time_flag = 1;
  5844  000022  0E01               	movlw	1
  5845  000024  6E2C               	movwf	_time_flag^0,c
  5846                           
  5847                           ;main.c: 589: T1CONbits.TMR1ON = 0;
  5848  000026  90CD               	bcf	205,0,c	;volatile
  5849  000028                     i2l2229:
  5850                           
  5851                           ;main.c: 591: };main.c: 592: };main.c: 593: if (INTCONbits.T0IF == 1) {
  5852  000028  A4F2               	btfss	242,2,c	;volatile
  5853  00002A  D02F               	goto	i2l281
  5854                           
  5855                           ;main.c: 594: INTCONbits.T0IF = 0;
  5856  00002C  94F2               	bcf	242,2,c	;volatile
  5857                           
  5858                           ;main.c: 595: TMR0H = ((unsigned char)(((45536)>>8)&0xFF));
  5859  00002E  0EB1               	movlw	177
  5860  000030  6ED7               	movwf	215,c	;volatile
  5861                           
  5862                           ;main.c: 596: TMR0L = ((unsigned char)((45536)&0xFF));
  5863  000032  0EE0               	movlw	224
  5864  000034  6ED6               	movwf	214,c	;volatile
  5865                           
  5866                           ;main.c: 597: read_key = 1;
  5867  000036  8E4B               	bsf	(_read_key/(0+8))^0,_read_key& (0+7),c
  5868                           
  5869                           ;main.c: 598: if (en_sound) {
  5870  000038  AC4B               	btfss	(_en_sound/(0+8))^0,_en_sound& (0+7),c
  5871  00003A  D026               	goto	i2l268
  5872                           
  5873                           ;main.c: 599: snd_delay++;
  5874  00003C  2A1C               	incf	myInt@snd_delay^0,f,c
  5875                           
  5876                           ;main.c: 600: if (snd_k) {
  5877  00003E  A84B               	btfss	(_snd_k/(0+8))^0,_snd_k& (0+7),c
  5878  000040  D00A               	goto	i2l269
  5879                           
  5880                           ;main.c: 601: if (snd_delay <= 8) {
  5881  000042  0E09               	movlw	9
  5882  000044  601C               	cpfslt	myInt@snd_delay^0,c
  5883  000046  D002               	goto	i2l270
  5884                           
  5885                           ;main.c: 602: LATCbits.LATC4 = 1;
  5886  000048  888B               	bsf	139,4,c	;volatile
  5887                           
  5888                           ;main.c: 603: } else
  5889  00004A  D001               	goto	i2l2247
  5890  00004C                     i2l270:
  5891                           
  5892                           ;main.c: 604: LATCbits.LATC4 = 0;
  5893  00004C  988B               	bcf	139,4,c	;volatile
  5894  00004E                     i2l2247:
  5895                           
  5896                           ;main.c: 605: if (snd_delay > 90)
  5897  00004E  0E5A               	movlw	90
  5898  000050  641C               	cpfsgt	myInt@snd_delay^0,c
  5899  000052  D001               	goto	i2l269
  5900                           
  5901                           ;main.c: 606: snd_delay = 0;
  5902  000054  6A1C               	clrf	myInt@snd_delay^0,c
  5903  000056                     i2l269:
  5904                           
  5905                           ;main.c: 607: };main.c: 608: if (snd_b) {
  5906  000056  A64B               	btfss	(_snd_b/(0+8))^0,_snd_b& (0+7),c
  5907  000058  D00A               	goto	i2l273
  5908                           
  5909                           ;main.c: 609: if (snd_delay <= 15) {
  5910  00005A  0E10               	movlw	16
  5911  00005C  601C               	cpfslt	myInt@snd_delay^0,c
  5912  00005E  D002               	goto	i2l274
  5913                           
  5914                           ;main.c: 610: LATCbits.LATC4 = 1;
  5915  000060  888B               	bsf	139,4,c	;volatile
  5916                           
  5917                           ;main.c: 611: } else
  5918  000062  D001               	goto	i2l2255
  5919  000064                     i2l274:
  5920                           
  5921                           ;main.c: 612: LATCbits.LATC4 = 0;
  5922  000064  988B               	bcf	139,4,c	;volatile
  5923  000066                     i2l2255:
  5924                           
  5925                           ;main.c: 613: if (snd_delay > 50)
  5926  000066  0E32               	movlw	50
  5927  000068  641C               	cpfsgt	myInt@snd_delay^0,c
  5928  00006A  D001               	goto	i2l273
  5929                           
  5930                           ;main.c: 614: snd_delay = 0;
  5931  00006C  6A1C               	clrf	myInt@snd_delay^0,c
  5932  00006E                     i2l273:
  5933                           
  5934                           ;main.c: 615: };main.c: 616: if (snd_all) {
  5935  00006E  A44B               	btfss	(_snd_all/(0+8))^0,_snd_all& (0+7),c
  5936  000070  D00C               	goto	i2l281
  5937                           
  5938                           ;main.c: 617: if (snd_delay <= 10) {
  5939  000072  0E0B               	movlw	11
  5940  000074  601C               	cpfslt	myInt@snd_delay^0,c
  5941  000076  D002               	goto	i2l278
  5942                           
  5943                           ;main.c: 618: LATCbits.LATC4 = 1;
  5944  000078  888B               	bsf	139,4,c	;volatile
  5945                           
  5946                           ;main.c: 619: } else
  5947  00007A  D001               	goto	i2l2263
  5948  00007C                     i2l278:
  5949                           
  5950                           ;main.c: 620: LATCbits.LATC4 = 0;
  5951  00007C  988B               	bcf	139,4,c	;volatile
  5952  00007E                     i2l2263:
  5953                           
  5954                           ;main.c: 621: if (snd_delay > 25)
  5955  00007E  0E19               	movlw	25
  5956  000080  641C               	cpfsgt	myInt@snd_delay^0,c
  5957  000082  D003               	goto	i2l281
  5958                           
  5959                           ;main.c: 622: snd_delay = 0;
  5960  000084  6A1C               	clrf	myInt@snd_delay^0,c
  5961  000086  D001               	goto	i2l281
  5962  000088                     i2l268:
  5963                           
  5964                           ;main.c: 625: LATCbits.LATC4 = 0;
  5965  000088  988B               	bcf	139,4,c	;volatile
  5966  00008A                     i2l281:
  5967  00008A  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5968  00008C  0011               	retfie		f
  5969  00008E                     __end_of_myInt:
  5970                           	callstack 0
  5971                           
  5972                           	psect	rparam
  5973  0000                     
  5974                           	psect	temp
  5975  00004C                     btemp:
  5976                           	callstack 0
  5977  00004C                     	ds	1
  5978  0000                     int$flags	set	btemp
  5979  0000                     wtemp8	set	btemp+1
  5980  0000                     ttemp5	set	btemp+1
  5981  0000                     ttemp6	set	btemp+4
  5982  0000                     ttemp7	set	btemp+8
  5983                           
  5984                           	psect	idloc
  5985                           
  5986                           ;Config register IDLOC0 @ 0x200000
  5987                           ;	unspecified, using default values
  5988  200000                     	org	2097152
  5989  200000  FF                 	db	255
  5990                           
  5991                           ;Config register IDLOC1 @ 0x200001
  5992                           ;	unspecified, using default values
  5993  200001                     	org	2097153
  5994  200001  FF                 	db	255
  5995                           
  5996                           ;Config register IDLOC2 @ 0x200002
  5997                           ;	unspecified, using default values
  5998  200002                     	org	2097154
  5999  200002  FF                 	db	255
  6000                           
  6001                           ;Config register IDLOC3 @ 0x200003
  6002                           ;	unspecified, using default values
  6003  200003                     	org	2097155
  6004  200003  FF                 	db	255
  6005                           
  6006                           ;Config register IDLOC4 @ 0x200004
  6007                           ;	unspecified, using default values
  6008  200004                     	org	2097156
  6009  200004  FF                 	db	255
  6010                           
  6011                           ;Config register IDLOC5 @ 0x200005
  6012                           ;	unspecified, using default values
  6013  200005                     	org	2097157
  6014  200005  FF                 	db	255
  6015                           
  6016                           ;Config register IDLOC6 @ 0x200006
  6017                           ;	unspecified, using default values
  6018  200006                     	org	2097158
  6019  200006  FF                 	db	255
  6020                           
  6021                           ;Config register IDLOC7 @ 0x200007
  6022                           ;	unspecified, using default values
  6023  200007                     	org	2097159
  6024  200007  FF                 	db	255
  6025                           
  6026                           	psect	config
  6027                           
  6028                           ; Padding undefined space
  6029  300000                     	org	3145728
  6030  300000  FF                 	db	255
  6031                           
  6032                           ;Config register CONFIG1H @ 0x300001
  6033                           ;	Oscillator Selection bits
  6034                           ;	OSC = INTIO2, Internal RC oscillator, port function on RA6 and port function on RA7
  6035                           ;	Fail-Safe Clock Monitor Enable bit
  6036                           ;	FSCM = OFF, Fail-Safe Clock Monitor disabled
  6037                           ;	Internal/External Switchover bit
  6038                           ;	IESO = OFF, Internal/External Switchover mode disabled
  6039  300001                     	org	3145729
  6040  300001  08                 	db	8
  6041                           
  6042                           ;Config register CONFIG2L @ 0x300002
  6043                           ;	Power-up Timer enable bit
  6044                           ;	PWRT = ON, PWRT enabled
  6045                           ;	Brown-out Reset enable bit
  6046                           ;	BOR = ON, Brown-out Reset enabled
  6047                           ;	Brown-out Reset Voltage bits
  6048                           ;	BORV = 27, VBOR set to 2.7V
  6049  300002                     	org	3145730
  6050  300002  0A                 	db	10
  6051                           
  6052                           ;Config register CONFIG2H @ 0x300003
  6053                           ;	Watchdog Timer Enable bit
  6054                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6055                           ;	Watchdog Timer Postscale Select bits
  6056                           ;	WDTPS = 32768, 1:32768
  6057  300003                     	org	3145731
  6058  300003  1E                 	db	30
  6059                           
  6060                           ; Padding undefined space
  6061  300004                     	org	3145732
  6062  300004  FF                 	db	255
  6063                           
  6064                           ;Config register CONFIG3H @ 0x300005
  6065                           ;	CCP2 MUX bit
  6066                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  6067                           ;	PORTB A/D Enable bit
  6068                           ;	PBAD = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  6069                           ;	MCLR Pin Enable bit
  6070                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6071  300005                     	org	3145733
  6072  300005  81                 	db	129
  6073                           
  6074                           ;Config register CONFIG4L @ 0x300006
  6075                           ;	Stack Full/Underflow Reset Enable bit
  6076                           ;	STVR = ON, Stack full/underflow will cause Reset
  6077                           ;	Single-Supply ICSP Enable bit
  6078                           ;	LVP = OFF, Single-Supply ICSP disabled
  6079                           ;	Background Debugger Enable bit
  6080                           ;	DEBUG = 0x1, unprogrammed default
  6081  300006                     	org	3145734
  6082  300006  81                 	db	129
  6083                           
  6084                           ; Padding undefined space
  6085  300007                     	org	3145735
  6086  300007  FF                 	db	255
  6087                           
  6088                           ;Config register CONFIG5L @ 0x300008
  6089                           ;	Code Protection bit
  6090                           ;	CP0 = OFF, Block 0 (000200-0007FFh) not code-protected
  6091                           ;	Code Protection bit
  6092                           ;	CP1 = OFF, Block 1 (000800-000FFFh) not code-protected
  6093                           ;	Code Protection bit
  6094                           ;	CP2 = OFF, Block 2 (001000-0017FFh) not code-protected
  6095                           ;	Code Protection bit
  6096                           ;	CP3 = OFF, Block 3 (001800-001FFFh) not code-protected
  6097  300008                     	org	3145736
  6098  300008  0F                 	db	15
  6099                           
  6100                           ;Config register CONFIG5H @ 0x300009
  6101                           ;	Boot Block Code Protection bit
  6102                           ;	CPB = OFF, Boot block (000000-0001FFh) is not code-protected
  6103                           ;	Data EEPROM Code Protection bit
  6104                           ;	CPD = OFF, Data EEPROM is not code-protected
  6105  300009                     	org	3145737
  6106  300009  C0                 	db	192
  6107                           
  6108                           ;Config register CONFIG6L @ 0x30000A
  6109                           ;	Write Protection bit
  6110                           ;	WRT0 = OFF, Block 0 (000200-0007FFh) not write-protected
  6111                           ;	Write Protection bit
  6112                           ;	WRT1 = OFF, Block 1 (000800-000FFFh) not write-protected
  6113                           ;	Write Protection bit
  6114                           ;	WRT2 = OFF, Block 2 (001000-0017FFh) not write-protected
  6115                           ;	Write Protection bit
  6116                           ;	WRT3 = OFF, Block 3 (001800-001FFFh) not write-protected
  6117  30000A                     	org	3145738
  6118  30000A  0F                 	db	15
  6119                           
  6120                           ;Config register CONFIG6H @ 0x30000B
  6121                           ;	Configuration Register Write Protection bit
  6122                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  6123                           ;	Boot Block Write Protection bit
  6124                           ;	WRTB = OFF, Boot block (000000-0001FFh) is not write-protected
  6125                           ;	Data EEPROM Write Protection bit
  6126                           ;	WRTD = OFF, Data EEPROM is not write-protected
  6127  30000B                     	org	3145739
  6128  30000B  E0                 	db	224
  6129                           
  6130                           ;Config register CONFIG7L @ 0x30000C
  6131                           ;	Table Read Protection bit
  6132                           ;	EBTR0 = OFF, Block 0 (000200-0007FFh) not protected from table reads executed in other
      +                           blocks
  6133                           ;	Table Read Protection bit
  6134                           ;	EBTR1 = OFF, Block 1 (000800-000FFFh) not protected from table reads executed in other
      +                           blocks
  6135                           ;	Table Read Protection bit
  6136                           ;	EBTR2 = OFF, Block 2 (001000-0017FFh) not protected from table reads executed in other
      +                           blocks
  6137                           ;	Table Read Protection bit
  6138                           ;	EBTR3 = OFF, Block 3 (001800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6139  30000C                     	org	3145740
  6140  30000C  0F                 	db	15
  6141                           
  6142                           ;Config register CONFIG7H @ 0x30000D
  6143                           ;	Boot Block Table Read Protection bit
  6144                           ;	EBTRB = OFF, Boot block (000000-0001FFh) is not protected from table reads executed in
      +                           other blocks
  6145  30000D                     	org	3145741
  6146  30000D  40                 	db	64
  6147                           tosu	equ	0xFFF
  6148                           tosh	equ	0xFFE
  6149                           tosl	equ	0xFFD
  6150                           stkptr	equ	0xFFC
  6151                           pclatu	equ	0xFFB
  6152                           pclath	equ	0xFFA
  6153                           pcl	equ	0xFF9
  6154                           tblptru	equ	0xFF8
  6155                           tblptrh	equ	0xFF7
  6156                           tblptrl	equ	0xFF6
  6157                           tablat	equ	0xFF5
  6158                           prodh	equ	0xFF4
  6159                           prodl	equ	0xFF3
  6160                           indf0	equ	0xFEF
  6161                           postinc0	equ	0xFEE
  6162                           postdec0	equ	0xFED
  6163                           preinc0	equ	0xFEC
  6164                           plusw0	equ	0xFEB
  6165                           fsr0h	equ	0xFEA
  6166                           fsr0l	equ	0xFE9
  6167                           wreg	equ	0xFE8
  6168                           indf1	equ	0xFE7
  6169                           postinc1	equ	0xFE6
  6170                           postdec1	equ	0xFE5
  6171                           preinc1	equ	0xFE4
  6172                           plusw1	equ	0xFE3
  6173                           fsr1h	equ	0xFE2
  6174                           fsr1l	equ	0xFE1
  6175                           bsr	equ	0xFE0
  6176                           indf2	equ	0xFDF
  6177                           postinc2	equ	0xFDE
  6178                           postdec2	equ	0xFDD
  6179                           preinc2	equ	0xFDC
  6180                           plusw2	equ	0xFDB
  6181                           fsr2h	equ	0xFDA
  6182                           fsr2l	equ	0xFD9
  6183                           status	equ	0xFD8

Data Sizes:
    Strings     240
    Constant    88
    Data        9
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20      75
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    cgrom_char@symbol	PTR unsigned char  size(2) Largest target is 8
		 -> symbol_4(CODE[8]), 

    lcdPrint@t	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_18(CODE[16]), STR_17(CODE[15]), STR_16(CODE[11]), STR_15(CODE[13]), 
		 -> STR_14(CODE[11]), STR_13(CODE[13]), STR_12(CODE[15]), STR_11(CODE[14]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[16]), STR_7(CODE[7]), 
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[13]), STR_3(CODE[16]), 
		 -> STR_2(CODE[16]), STR_1(CODE[16]), 

    ds18b20_crc8@data_in	PTR unsigned char  size(1) Largest target is 9
		 -> ds18b20_readrom@temp_rom(COMRAM[8]), scratch(COMRAM[9]), 

    ds18b20_get_temp@minus	PTR unsigned char  size(1) Largest target is 1
		 -> minus_2(COMRAM[1]), minus_1(COMRAM[1]), 

    ds18b20_readTemp@time_flag	PTR unsigned char  size(1) Largest target is 1
		 -> time_flag(COMRAM[1]), 

    ds18b20_readTemp@timer_val	PTR unsigned char  size(1) Largest target is 1
		 -> timer_val(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_ds18b20_readrom
    _lcd_putc->_lcdWrite
    _lcdPrint->_lcd_gotoxy
    _lcd_gotoxy->_lcdWrite
    _ds18b20_readrom->_ds18b20_crc8
    _ds18b20_readTemp->_ds18b20_crc8
    ___lwmod->___lwdiv
    ___lbmod->___lbdiv
    _Main_init->_init_ds18b20
    _init_ds18b20->_write_byte
    _write_byte->_write_bit
    _initLCD->_clearLCD
    _clearLCD->_lcdWrite
    _cgrom_char->_lcdWrite
    _lcdWrite->_lcdNibble

Critical Paths under _myInt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInt in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   32630
                                             17 COMRAM     3     3      0
                           _Delay_ms
                          _Main_init
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                           _clearLCD
                   _ds18b20_get_temp
                   _ds18b20_readTemp
                    _ds18b20_readrom
                         _key_GetKey
                          _key_press
                           _lcdPrint
                         _lcd_gotoxy
                           _lcd_putc
                           _read_eep
                          _write_eep
 ---------------------------------------------------------------------------------
 (1) _lcd_putc                                             1     1      0    1060
                                              4 COMRAM     1     1      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             6     4      2    5752
                                              7 COMRAM     6     4      2
                           _lcdWrite
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           3     2      1    3235
                                              4 COMRAM     3     2      1
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _key_press                                            1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _key_GetKey                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ds18b20_readrom                                     10    10      0    1898
                                              7 COMRAM    10    10      0
                           _Delay_ms
                       _ds18b20_crc8
                           _ow_reset
                          _read_byte
                         _write_byte
                          _write_eep
 ---------------------------------------------------------------------------------
 (1) _write_eep                                            2     1      1     576
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ds18b20_readTemp                                     8     6      2    1234
                                              7 COMRAM     8     6      2
                       _ds18b20_crc8
                           _ow_reset
                          _read_byte
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            4     4      0      60
                                              0 COMRAM     4     4      0
                           _read_bit
 ---------------------------------------------------------------------------------
 (3) _read_bit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_crc8                                         7     5      2     557
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _ds18b20_get_temp                                     6     4      2     423
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    5783
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4    4266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              4     3      1    1375
                                              4 COMRAM     4     3      1
                            ___lbdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     770
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Main_init                                            0     0      0    4256
                         _cgrom_char
                            _initLCD
                       _init_ds18b20
 ---------------------------------------------------------------------------------
 (2) _init_ds18b20                                         4     4      0     839
                                              6 COMRAM     4     4      0
                           _ow_reset
                           _read_eep
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0      90
                                              1 COMRAM     5     5      0
                          _write_bit
 ---------------------------------------------------------------------------------
 (3) _write_bit                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_eep                                             2     0      2     554
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ow_reset                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0    2136
                                              5 COMRAM     1     1      0
                           _clearLCD
                          _lcdNibble
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _clearLCD                                             1     1      0    1038
                                              4 COMRAM     1     1      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (2) _cgrom_char                                           4     1      3    1281
                                              4 COMRAM     4     1      3
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (2) _lcdWrite                                             2     1      1    1038
                                              2 COMRAM     2     1      1
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myInt                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _Main_init
     _cgrom_char
       _lcdWrite
         _lcdNibble
     _initLCD
       _clearLCD
         _lcdWrite
           _lcdNibble
       _lcdNibble
       _lcdWrite
         _lcdNibble
     _init_ds18b20
       _ow_reset
       _read_eep
       _write_byte
         _write_bit
   ___lbdiv
   ___lbmod
     ___lbdiv (ARG)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _clearLCD
     _lcdWrite
       _lcdNibble
   _ds18b20_get_temp
   _ds18b20_readTemp
     _ds18b20_crc8
     _ow_reset
     _read_byte
       _read_bit
     _write_byte
       _write_bit
   _ds18b20_readrom
     _Delay_ms
     _ds18b20_crc8
     _ow_reset
     _read_byte
       _read_bit
     _write_byte
       _write_bit
     _write_eep
   _key_GetKey
   _key_press
   _lcdPrint
     _lcdWrite
       _lcdNibble
     _lcd_gotoxy
       _lcdWrite
         _lcdNibble
   _lcd_gotoxy
     _lcdWrite
       _lcdNibble
   _lcd_putc
     _lcdWrite
       _lcdNibble
   _read_eep
   _write_eep

 _myInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     14      4B       1       59.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B       7        0.0%
DATA                 0      0      4B       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Dec 11 14:35:10 2020

           myInt@snd_delay 001C                         PL2 0C6A                         PL4 0C7A  
                       PL6 0C82                         PL8 0C8E                         u10 1066  
                       u30 107C                         u50 1094                         u28 1068  
                       u70 10A8                         u48 107E                         u68 1096  
                       u88 10AA               lcdWrite@byte 0031                        PL10 0C9A  
                      PL20 0CC4                        PL12 0CA6                        PL30 0CE8  
                      PL22 0CCA                        PL14 0FBC                        PL40 0D04  
                      PL32 10CA                        PL24 0F1A                        PL16 0CB0  
                      PL50 0D28                        PL42 0D0E                        PL34 0CF2  
                      PL26 0CD0                        PL18 0CBA                        PL60 0FCA  
                      PL52 0D30                        PL44 0D16                        PL36 1212  
                      PL28 0CDC                        PL62 0D50                        PL54 0D38  
                      PL46 0D1C                        PL38 0CFC                        PL56 0D40  
                      PL48 0D22                        PL58 0D48               lcdWrite@type 0030  
                      l312 10FC                        l160 0366                        l161 075A  
                      l324 0E7E                        l180 07D6                        l182 07E4  
                      l174 07AA                        l255 14DC                        l184 07F2  
                      l168 05D4                        l345 1004                        l353 1290  
                      l193 0852                        l178 07C4                        l179 07C6  
                      l382 14F2                        l390 1536                        l483 1226  
                      l485 122E                        l487 1238                        l489 1264  
                      l979 12F4                        l989 1332                        u124 13C2  
                      u125 13BE                        u234 1394                        u235 1390  
                      wreg 000FE8            lcdNibble@nibble 002F              write_eep@data 002E  
              lcd_gotoxy@x 0033                lcd_gotoxy@y 0032                       l1305 13B2  
                     l2301 14A2                       l3101 0BDC                       l1271 151E  
                     l1433 137C                       l3009 0A0A                       l3123 0C28  
                     l3035 0A76                       l3027 0A56                       l3019 0A46  
                     l1437 139C                       l2501 0FB2                       l3109 0BEC  
                     l3053 0AC2                       l3045 0AB2                       l2271 14F4  
                     l2327 10FA                       l2407 129E                       l2415 12AA  
                     l2503 0FB6                       l3063 0AE8                       l3127 0C38  
                     l2337 10FE                       l2601 101A                       l3065 0AF6  
                     l2507 0E52                       l2291 1538                       l3091 0B7E  
                     l3083 0B5E                       l3075 0B4E                       l2525 0E80  
                     l1573 1250                       l2535 0E8C                       l1567 123A  
                     l2385 1428                       l2561 0EEE                       l2297 14CA  
                     l2641 11EA                       l2801 02BA                       l2707 12C4  
                     l2395 1270                       l2563 0EF6                       l2627 11C8  
                     l1579 1256                       l2491 0F58                       l2483 0F2A  
                     l2803 033C                       l2709 12CC                       l2549 0EB0  
                     l2653 1210                       l2901 0870                       l2821 05AA  
                     l2805 0436                       l2663 13F2                       l2719 12EA  
                     l2735 1328                       l2727 130A                       l2399 1280  
                     l2583 0F08                       l2495 0F74                       l2487 0F42  
                     l2903 0878                       l2831 0676                       l2729 1312  
                     l2489 0F4C                       l2905 0880                       l2817 04DA  
                     l2675 140C                       l2667 13F8                       l2499 0FA2  
                     l2931 08D6                       l2923 08B2                       l2915 08A2  
                     l2851 07AC                       l2835 06F2                       l2819 053A  
                     l2933 08DA                       l2781 0162                       l2679 1414  
                     l2695 1498                       l2687 1482                       l2871 080C  
                     l2839 074C                       l2783 016C                       l2775 0158  
                     l2767 0100                       l2953 091C                       l2865 07F6  
                     l2947 0908                       l2787 01A4                       l2893 084A  
                     l2885 083A                       l2959 0944                       l2799 024E  
                     l2993 09B6                       l2977 0976                       l2969 0966  
                     STR_1 1F2F                       STR_2 1F3F                       STR_3 1F4F  
                     STR_4 1FC5                       STR_5 1FF0                       STR_6 1FE8  
                     STR_7 1FF8                       STR_8 1F6F                       STR_9 1F5F  
         ow_reset@presence 002E            _ds18b20_readrom 11B6                       u2050 0916  
                     _LATA 000F89                       _LATB 000F8A                       _LATC 000F8B  
                     u2080 092E                       u2065 0918                       u1700 1316  
                     u1630 13FC                       u2407 13DE                       u1560 0FFA  
                     u2417 1520                       u2098 0930                       u2507 0DBC  
                     u2427 1450                       u2517 0DD0                       u2437 145C  
                     u1670 12D0                       u1590 11D8                       u1750 01C4  
                     u2607 10C2                       u2527 0DE4                       u2447 146C  
                     u2367 0F36                       u2537 0DFC                       u2457 0D62  
                     u2377 14D0                       u1850 079C                       u2547 0E14  
                     u2467 0D72                       u2387 139E                       u1860 07A6  
                     u1780 0456                       u2557 0E28                       u2477 0D82  
                     u2397 156C                       u2567 0E40                       u2487 0D92  
                     u1880 07C0                       u2577 1554                       u2497 0DA8  
                     u2587 14F6                       u2597 10B8                       _main 0092  
                     fsr2h 000FDA                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 004C              write_byte@val 0031  
                     prodh 000FF4                       prodl 000FF3                       start 008E  
             ___param_bank 000000           _ds18b20_get_temp 0FD0           _ds18b20_readTemp 0E50  
                    ?_main 002E            __end_of___lbdiv 1418                      _EEADR 000FA9  
                    STR_10 1F0F                      STR_11 1F9D                      STR_12 1F8E  
                    STR_13 1FB8                      STR_14 1FD2                      STR_15 1FAB  
                    STR_16 1FDD                      STR_17 1F7F                      STR_18 1F1F  
          __end_of___lbmod 14A0                      _T1CON 000FCD            __end_of___lwdiv 12FE  
          __end_of___lwmod 133C                      i2l270 004C                      i2l281 008A  
                    i2l273 006E                      i2l274 0064                      i2l268 0088  
                    i2l269 0056                      i2l278 007C                      _TMR0H 000FD7  
                    _TMR1H 000FCF                      _TMR0L 000FD6                      _TMR1L 000FCE  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
          __end_of_initLCD 0E50                      _fract 1EF7                      _myInt 0008  
                    _snd_b 025B                      _snd_k 025C             write_byte@temp 0032  
           __pbitbssCOMRAM 0258                      tablat 000FF5                      ttemp5 004D  
                    ttemp6 0050                      ttemp7 0054                      status 000FD8  
                    wtemp8 004D            ___lbdiv@divisor 002E            ___lbdiv@counter 0030  
         __end_of_Delay_ms 14E8            write_bit@bitval 002E            __initialization 133C  
          ds18b20_crc8@crc 0034               __end_of_main 0C6A        ds18b20_crc8@data_in 002E  
                   ??_main 003F              __activetblptr 000002              ?_init_ds18b20 002E  
  __end_of_ds18b20_readrom 1212                     ?_myInt 002E                     _EEDATA 000FA8  
                   _EECON2 000FA7         __size_of_Main_init 006E                     i2l2229 0028  
                   i2l2263 007E                     i2l2255 0066                     i2l2247 004E  
         __end_of_clearLCD 1560           __end_of_lcdPrint 0FBC           __end_of_lcdWrite 150C  
         __end_of_lcd_putc 1594                  ??___lbdiv 002F                  ??___lbmod 0033  
                ??___lwdiv 0032                  ??___lwmod 0039                     _dq_num 0046  
            Delay_ms@delay 002E           __end_of_read_eep 1588           __end_of_read_bit 1576  
                   clear_0 1364                     _select 0048                     _rom_dq 0001  
           ??_init_ds18b20 0034                  ??_initLCD 0033               __pdataCOMRAM 0042  
             __mediumconst 1EB6           __end_of_ow_reset 147A                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8           ___lbdiv@dividend 002F  
         __end_of_symbol_4 1F0F            ___lbmod@divisor 0032                 __accesstop 0080  
  __end_of__initialization 136A            ___lbmod@counter 0034              ___rparam_used 000001  
         write_eep@address 002F           ds18b20_crc8@data 0031             __pcstackCOMRAM 002E  
            __end_of_fract 1F07              __end_of_myInt 008E          __end_of_Main_init 11B6  
   ds18b20_crc8@loop_count 0033                 __end_ofPL2 0C7A                 __end_ofPL4 0C82  
               __end_ofPL6 0C8E                 __end_ofPL8 0C9A           ___lbdiv@quotient 0031  
            ?_ds18b20_crc8 002E         __size_of_lcdNibble 0070       ds18b20_readTemp@temp 0039  
         ?_ds18b20_readrom 002E                  ?_Delay_ms 002E          lcd_gotoxy@address 0034  
                  ??_myInt 002E   __end_of_ds18b20_get_temp 105A   __end_of_ds18b20_readTemp 0F1A  
       __size_of_key_press 004E         __size_of_read_byte 0036    ds18b20_crc8@bit_counter 0030  
         ds18b20_readrom@i 003E        __end_of_HD44780_CYR 1EF7             ??_ds18b20_crc8 0030  
               _cgrom_char 1418                  ?_clearLCD 002E                 ??_Delay_ms 0030  
               _lcd_gotoxy 152A                  ?_lcdPrint 0035                  ?_lcdWrite 0030  
                ?_lcd_putc 002E                  ?_read_bit 002E                  ?_read_eep 002E  
               _key_GetKey 1594       __end_of_init_ds18b20 1148          __end_of_lcdNibble 10CA  
       __size_of_write_bit 001E         __size_of_write_eep 0024                    __Hparam 0000  
                  __Lparam 0000                  ?_ow_reset 002E                    ___lbdiv 13E4  
                  ___lbmod 147A                    ___lwdiv 12B4                    ___lwmod 12FE  
                  __pcinit 133C    ds18b20_readrom@temp_rom 0035                    __ramtop 0200  
                  __ptext0 0092                    __ptext1 1588                    __ptext2 0F28  
                  __ptext3 152A                    __ptext4 121C                    __ptext5 1594  
                  __ptext6 11B6                    __ptext7 14A0                    __ptext8 14C4  
                  __ptext9 0E50                  _T0CONbits 000FD5                    _initLCD 0D58  
                _T1CONbits 000FCD          __end_of_key_press 126A          __end_of_read_byte 13AE  
               ??_clearLCD 0032                    _minus_1 004A                    _minus_2 0049  
                  _scratch 0023                    _snd_b_b 0258                    _snd_all 025A  
                  _snd_k_b 0259                    _sub_sel 0021                 ??_lcdPrint 0037  
               ??_lcdWrite 0031                 ??_lcd_putc 0032       end_of_initialization 136A  
                Delay_ms@i 0031               key_press@key 002E              __Lmediumconst 1EB6  
               ??_read_eep 0030                 ??_read_bit 002E                _HD44780_CYR 1EB7  
               ??_ow_reset 002E                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE                 _temp_ready 0011  
             read_byte@val 0030        ds18b20_get_temp@tmp 0031                ?_cgrom_char 0032  
                _PORTAbits 000F80                  _PORTCbits 000F82              key_GetKey@key 002E  
        __end_of_write_bit 152A          __end_of_write_eep 14C4           ___lbmod@dividend 0033  
                _TRISAbits 000F92                ?_lcd_gotoxy 0032                ___lbmod@rem 0035  
     __end_of_ds18b20_crc8 12B4                ?_key_GetKey 002E              __pidataCOMRAM 159E  
               _write_byte 13AE                  _Main_init 1148                __end_ofPL10 0CA6  
              __end_ofPL20 0CCA                __end_ofPL12 0CB0                __end_ofPL30 0CF2  
              __end_ofPL22 0CD0                __end_ofPL14 0FCA                __end_ofPL40 0D0E  
              __end_ofPL32 10D4                __end_ofPL24 0F28                __end_ofPL16 0CBA  
              __end_ofPL50 0D30                __end_ofPL42 0D16                __end_ofPL34 0CFC  
              __end_ofPL26 0CDC                __end_ofPL18 0CC4                __end_ofPL60 0FD0  
              __end_ofPL52 0D38                __end_ofPL44 0D1C                __end_ofPL36 121C  
              __end_ofPL28 0CE8                __end_ofPL62 0D58                __end_ofPL54 0D40  
              __end_ofPL46 0D22                __end_ofPL38 0D04                __end_ofPL56 0D48  
              __end_ofPL48 0D28                __end_ofPL58 0D50        start_initialization 133C  
        __size_of_Delay_ms 0024      __size_of_init_ds18b20 0074          ?_ds18b20_get_temp 002E  
       ??_ds18b20_get_temp 0030        __size_of_cgrom_char 0032          ?_ds18b20_readTemp 0035  
       ??_ds18b20_readTemp 0037   ds18b20_crc8@feedback_bit 0032        __size_of_lcd_gotoxy 001C  
          read_eep@address 002E                 read_byte@i 0031                 ?_Main_init 002E  
      __size_of_key_GetKey 000A               _init_ds18b20 10D4                __pbssCOMRAM 0001  
        __size_of_clearLCD 001A          __size_of_lcdPrint 0094          __size_of_lcdWrite 0024  
 __size_of_ds18b20_readrom 005C          __size_of_lcd_putc 000C      ds18b20_crc8@num_bytes 002F  
        ds18b20_readTemp@i 003C          ds18b20_readTemp@j 003B          __size_of_read_eep 0012  
        __size_of_read_bit 0016           ___lwdiv@dividend 002E                  __pintcode 0008  
            __pmediumconst 1EB6                  _lcdNibble 105A                   ?___lbdiv 002E  
                 ?___lbmod 0032                   ?___lwdiv 002E                   ?___lwmod 0035  
        __size_of_ow_reset 0030                ?_write_byte 002E                   ?_initLCD 002E  
    __size_of_ds18b20_crc8 004A           ___lwdiv@quotient 0032                  _key_press 121C  
           __size_of_myInt 0086                  _read_byte 1378                   _LATCbits 000F8B  
                _temp1_fix 0017                   _PIE1bits 000F9D              _set_t_dq2_100 001E  
                 _PIR1bits 000F9E                  _set_t_dq2 0019              _set_t_dq1_dwn 001F  
               ?_lcdNibble 002E                  _time_flag 002C                  _timer_val 002D  
                lcdPrint@t 0035               ??_cgrom_char 0035                 _ADCON1bits 000FC1  
             _ds18b20_crc8 126A                ??_Main_init 0038                  _sound_yes 025D  
                lcd_putc@c 0032                write_byte@i 0033                   _Delay_ms 14C4  
             ??_lcd_gotoxy 0033                 ?_key_press 002E                  _write_bit 150C  
                _write_eep 14A0                _INTCON2bits 000FF1                 ?_read_byte 002E  
                copy_data0 1350              init_ds18b20@i 0037              init_ds18b20@q 0036  
      __size_of_write_byte 0036               ??_key_GetKey 002E                 _EECON1bits 000FA6  
       __end_of_cgrom_char 144A                   __Hrparam 0000                   __Lrparam 0000  
        ??_ds18b20_readrom 0035         __end_of_lcd_gotoxy 1546             key_press@count 0015  
         __size_of___lbdiv 0034           __size_of___lbmod 0026           __size_of___lwdiv 004A  
         __size_of___lwmod 003E              _temperature_1 0044              _temperature_2 0042  
         __size_of_initLCD 00F8                   _clearLCD 1546                _key_pressed 001B  
       __end_of_key_GetKey 159E            ___lwdiv@divisor 0030            ___lwdiv@counter 0034  
                 __ptext10 1378                   __ptext11 1560                   __ptext20 13AE  
                 __ptext12 126A                   __ptext21 150C                   __ptext13 0FD0  
                 __ptext22 1576                   __ptext14 12FE                   __ptext23 144A  
                 __ptext15 12B4                   __ptext24 0D58                   __ptext16 147A  
                 __ptext25 1546                   __ptext17 13E4                   __ptext26 1418  
                 __ptext18 1148                   __ptext27 14E8                   __ptext19 10D4  
                 __ptext28 105A                   _lcdPrint 0F28                   _lcdWrite 14E8  
               ?_write_bit 002E                 ?_write_eep 002E                   _en_sound 025E  
                 _lcd_putc 1588     ds18b20_get_temp@num_dq 0030              __size_of_main 0BD8  
                 _read_bit 1560                   _read_eep 1576      ds18b20_readrom@num_dq 003D  
                 _read_key 025F          cgrom_char@address 0034               _set_t_dq2_10 001D  
             _set_t_dq1_up 0020                ??_lcdNibble 002E                   _ow_reset 144A  
                 int$flags 004C                   _sub_main 0047  __size_of_ds18b20_get_temp 008A  
                 _symbol_4 1F07  __size_of_ds18b20_readTemp 00CA                 _INTCONbits 000FF2  
              ??_key_press 002E                ??_read_byte 002E                   intlevel2 0000  
         ___lwmod@dividend 0035      ds18b20_get_temp@minus 002E                 _OSCCONbits 000FD3  
ds18b20_readTemp@time_flag 0035  ds18b20_readTemp@timer_val 0036           cgrom_char@symbol 0032  
             ??_write_byte 002F            ___lwmod@divisor 0037       ds18b20_get_temp@temp 0032  
          ___lwmod@counter 0039                cgrom_char@i 0035                ??_write_eep 002F  
              ??_write_bit 002E                _pressed_key 0022         __end_of_write_byte 13E4  
