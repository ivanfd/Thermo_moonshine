

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Nov 30 16:49:46 2020

Microchip MPLAB XC8 C Compiler v2.31 (Pro license) build 20201012212115 Og9s 
     1                           	processor	18F2320
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43                           	psect	pa_nodes0,global,class=CODE,delta=1
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F2320 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  000C36                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _dq_num
    85  000C36  01                 	db	1
    86                           
    87                           ;initializer for _select
    88  000C37  01                 	db	1
    89                           
    90                           	psect	smallconst
    91  000200                     __psmallconst:
    92                           	callstack 0
    93  000200  00                 	db	0
    94  000201                     _fract:
    95                           	callstack 0
    96  000201  00                 	db	0
    97  000202  01                 	db	1
    98  000203  01                 	db	1
    99  000204  02                 	db	2
   100  000205  02                 	db	2
   101  000206  03                 	db	3
   102  000207  04                 	db	4
   103  000208  04                 	db	4
   104  000209  05                 	db	5
   105  00020A  06                 	db	6
   106  00020B  06                 	db	6
   107  00020C  07                 	db	7
   108  00020D  07                 	db	7
   109  00020E  08                 	db	8
   110  00020F  09                 	db	9
   111  000210  09                 	db	9
   112  000211                     __end_of_fract:
   113                           	callstack 0
   114  0000                     _EECON2	set	4007
   115  0000                     _EEDATA	set	4008
   116  0000                     _EEADR	set	4009
   117  0000                     _EECON1bits	set	4006
   118  0000                     _TRISAbits	set	3986
   119  0000                     _PORTCbits	set	3970
   120  0000                     _T1CONbits	set	4045
   121  0000                     _PIR1bits	set	3998
   122  0000                     _PIE1bits	set	3997
   123  0000                     _INTCON2bits	set	4081
   124  0000                     _INTCONbits	set	4082
   125  0000                     _TMR0L	set	4054
   126  0000                     _TMR0H	set	4055
   127  0000                     _T0CONbits	set	4053
   128  0000                     _TMR1L	set	4046
   129  0000                     _TMR1H	set	4047
   130  0000                     _T1CON	set	4045
   131  0000                     _PORTAbits	set	3968
   132  0000                     _ADCON1bits	set	4033
   133  0000                     _OSCCONbits	set	4051
   134  0000                     _TRISC	set	3988
   135  0000                     _LATC	set	3979
   136  0000                     _PORTC	set	3970
   137  0000                     _TRISB	set	3987
   138  0000                     _LATB	set	3978
   139  0000                     _TRISA	set	3986
   140  0000                     _LATA	set	3977
   141  0000                     _PORTA	set	3968
   142  0000                     _PORTB	set	3969
   143  000211                     STR_1:
   144  000211  2D                 	db	45
   145  000212  2D                 	db	45
   146  000213  2D                 	db	45
   147  000214  54                 	db	84	;'T'
   148  000215  45                 	db	69	;'E'
   149  000216  4D                 	db	77	;'M'
   150  000217  50                 	db	80	;'P'
   151  000218  20                 	db	32
   152  000219  53                 	db	83	;'S'
   153  00021A  45                 	db	69	;'E'
   154  00021B  4E                 	db	78	;'N'
   155  00021C  53                 	db	83	;'S'
   156  00021D  2D                 	db	45
   157  00021E  2D                 	db	45
   158  00021F  2D                 	db	45
   159  000220  2D                 	db	45
   160  000221  00                 	db	0
   161  000222                     STR_3:
   162  000222  20                 	db	32
   163  000223  20                 	db	32
   164  000224  20                 	db	32
   165  000225  44                 	db	68	;'D'
   166  000226  51                 	db	81	;'Q'
   167  000227  20                 	db	32
   168  000228  31                 	db	49	;'1'
   169  000229  20                 	db	32
   170  00022A  6F                 	db	111	;'o'
   171  00022B  72                 	db	114	;'r'
   172  00022C  20                 	db	32
   173  00022D  32                 	db	50	;'2'
   174  00022E  3F                 	db	63	;'?'
   175  00022F  20                 	db	32
   176  000230  20                 	db	32
   177  000231  00                 	db	0
   178  000232                     STR_2:
   179  000232  28                 	db	40
   180  000233  63                 	db	99	;'c'
   181  000234  29                 	db	41
   182  000235  49                 	db	73	;'I'
   183  000236  76                 	db	118	;'v'
   184  000237  61                 	db	97	;'a'
   185  000238  6E                 	db	110	;'n'
   186  000239  5F                 	db	95	;'_'
   187  00023A  66                 	db	102	;'f'
   188  00023B  64                 	db	100	;'d'
   189  00023C  20                 	db	32
   190  00023D  76                 	db	118	;'v'
   191  00023E  31                 	db	49	;'1'
   192  00023F  2E                 	db	46
   193  000240  30                 	db	48	;'0'
   194  000241  00                 	db	0
   195  000242  00                 	db	0	; dummy byte at the end
   196  0000                     
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200  000AE0                     __pcinit:
   201                           	callstack 0
   202  000AE0                     start_initialization:
   203                           	callstack 0
   204  000AE0                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to COMRAM (2 bytes)
   208                           ; load TBLPTR registers with __pidataCOMRAM
   209  000AE0  0E36               	movlw	low __pidataCOMRAM
   210  000AE2  6EF6               	movwf	tblptrl,c
   211  000AE4  0E0C               	movlw	high __pidataCOMRAM
   212  000AE6  6EF7               	movwf	tblptrh,c
   213  000AE8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   214  000AEA  6EF8               	movwf	tblptru,c
   215  000AEC  0009               	tblrd		*+	;fetch initializer
   216  000AEE  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   217  000AF2  0009               	tblrd		*+	;fetch initializer
   218  000AF4  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
   219                           
   220                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   221  000AF8  6A4C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   222                           
   223                           ; Clear objects allocated to COMRAM (56 bytes)
   224  000AFA  EE00  F001         	lfsr	0,__pbssCOMRAM
   225  000AFE  0E38               	movlw	56
   226  000B00                     clear_0:
   227  000B00  6AEE               	clrf	postinc0,c
   228  000B02  06E8               	decf	wreg,f,c
   229  000B04  E1FD               	bnz	clear_0
   230  000B06                     end_of_initialization:
   231                           	callstack 0
   232  000B06                     __end_of__initialization:
   233                           	callstack 0
   234  000B06  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   235  000B08  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   236  000B0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   237  000B0C  6EF8               	movwf	tblptru,c
   238  000B0E  0100               	movlb	0
   239  000B10  EF22  F001         	goto	_main	;jump to C main() function
   240                           
   241                           	psect	bitbssCOMRAM
   242  000260                     __pbitbssCOMRAM:
   243                           	callstack 0
   244  000260                     _read_key:
   245                           	callstack 0
   246  000260                     	ds	1
   247                           
   248                           	psect	bssCOMRAM
   249  000001                     __pbssCOMRAM:
   250                           	callstack 0
   251  000001                     _rom_dq:
   252                           	callstack 0
   253  000001                     	ds	16
   254  000011                     _scratch:
   255                           	callstack 0
   256  000011                     	ds	9
   257  00001A                     _temp_ready:
   258                           	callstack 0
   259  00001A                     	ds	4
   260  00001E                     _temperature_2:
   261                           	callstack 0
   262  00001E                     	ds	2
   263  000020                     _temperature_1:
   264                           	callstack 0
   265  000020                     	ds	2
   266  000022                     key_press@count:
   267                           	callstack 0
   268  000022                     	ds	1
   269  000023                     _key_pressed:
   270                           	callstack 0
   271  000023                     	ds	1
   272  000024                     _pressed_key:
   273                           	callstack 0
   274  000024                     	ds	1
   275  000025                     _TxtBuf:
   276                           	callstack 0
   277  000025                     	ds	16
   278  000035                     _minus_2:
   279                           	callstack 0
   280  000035                     	ds	1
   281  000036                     _minus_1:
   282                           	callstack 0
   283  000036                     	ds	1
   284  000037                     _time_flag:
   285                           	callstack 0
   286  000037                     	ds	1
   287  000038                     _timer_val:
   288                           	callstack 0
   289  000038                     	ds	1
   290                           
   291                           	psect	dataCOMRAM
   292  00004A                     __pdataCOMRAM:
   293                           	callstack 0
   294  00004A                     _dq_num:
   295                           	callstack 0
   296  00004A                     	ds	1
   297  00004B                     _select:
   298                           	callstack 0
   299  00004B                     	ds	1
   300                           
   301                           	psect	cstackCOMRAM
   302  000039                     __pcstackCOMRAM:
   303                           	callstack 0
   304  000039                     ??_read_byte:
   305  000039                     ??_lcdNibble:
   306  000039                     ?_ds18b20_get_temp:
   307                           	callstack 0
   308  000039                     ?___lwdiv:
   309                           	callstack 0
   310  000039                     ds18b20_get_temp@minus:
   311                           	callstack 0
   312  000039                     ds18b20_crc8@data_in:
   313                           	callstack 0
   314  000039                     ow_reset@presence:
   315                           	callstack 0
   316  000039                     write_bit@bitval:
   317                           	callstack 0
   318  000039                     write_eep@data:
   319                           	callstack 0
   320  000039                     key_press@key:
   321                           	callstack 0
   322  000039                     key_GetKey@key:
   323                           	callstack 0
   324  000039                     Delay_ms@delay:
   325                           	callstack 0
   326  000039                     read_eep@address:
   327                           	callstack 0
   328  000039                     ___lwdiv@dividend:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x0
   332  000039                     	ds	1
   333  00003A                     ??_write_byte:
   334  00003A                     ds18b20_crc8@num_bytes:
   335                           	callstack 0
   336  00003A                     lcdNibble@nibble:
   337                           	callstack 0
   338  00003A                     write_eep@address:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x1
   342  00003A                     	ds	1
   343  00003B                     ??_Delay_ms:
   344  00003B                     ??_ds18b20_get_temp:
   345  00003B                     ds18b20_crc8@bit_counter:
   346                           	callstack 0
   347  00003B                     lcdWrite@type:
   348                           	callstack 0
   349  00003B                     read_byte@val:
   350                           	callstack 0
   351  00003B                     ___lwdiv@divisor:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x2
   355  00003B                     	ds	1
   356  00003C                     ds18b20_get_temp@num_dq:
   357                           	callstack 0
   358  00003C                     ds18b20_crc8@data:
   359                           	callstack 0
   360  00003C                     lcdWrite@byte:
   361                           	callstack 0
   362  00003C                     read_byte@i:
   363                           	callstack 0
   364  00003C                     write_byte@val:
   365                           	callstack 0
   366  00003C                     Delay_ms@i:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x3
   370  00003C                     	ds	1
   371  00003D                     ??_clearLCD:
   372  00003D                     ds18b20_get_temp@tmp:
   373                           	callstack 0
   374  00003D                     ds18b20_crc8@feedback_bit:
   375                           	callstack 0
   376  00003D                     lcd_gotoxy@y:
   377                           	callstack 0
   378  00003D                     write_byte@temp:
   379                           	callstack 0
   380  00003D                     ___lwdiv@quotient:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x4
   384  00003D                     	ds	1
   385  00003E                     ??_initLCD:
   386  00003E                     ds18b20_crc8@loop_count:
   387                           	callstack 0
   388  00003E                     lcd_gotoxy@x:
   389                           	callstack 0
   390  00003E                     write_byte@i:
   391                           	callstack 0
   392  00003E                     ds18b20_get_temp@temp:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x5
   396  00003E                     	ds	1
   397  00003F                     ??_init_ds18b20:
   398  00003F                     ds18b20_readTemp@time_flag:
   399                           	callstack 0
   400  00003F                     ds18b20_crc8@crc:
   401                           	callstack 0
   402  00003F                     lcd_gotoxy@address:
   403                           	callstack 0
   404  00003F                     ___lwdiv@counter:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x6
   408  00003F                     	ds	1
   409  000040                     ?___lwmod:
   410                           	callstack 0
   411  000040                     ds18b20_readTemp@timer_val:
   412                           	callstack 0
   413  000040                     lcdPrint@t:
   414                           	callstack 0
   415  000040                     ___lwmod@dividend:
   416                           	callstack 0
   417  000040                     ds18b20_readrom@temp_rom:
   418                           	callstack 0
   419                           
   420                           ; 8 bytes @ 0x7
   421  000040                     	ds	1
   422  000041                     ??_ds18b20_readTemp:
   423  000041                     init_ds18b20@q:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x8
   427  000041                     	ds	1
   428  000042                     ??_lcdPrint:
   429  000042                     init_ds18b20@i:
   430                           	callstack 0
   431  000042                     ___lwmod@divisor:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x9
   435  000042                     	ds	1
   436  000043                     ds18b20_readTemp@temp:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0xA
   440  000043                     	ds	1
   441  000044                     ___lwmod@counter:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0xB
   445  000044                     	ds	1
   446  000045                     ds18b20_readTemp@j:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0xC
   450  000045                     	ds	1
   451  000046                     ds18b20_readTemp@i:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0xD
   455  000046                     	ds	2
   456  000048                     ds18b20_readrom@num_dq:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0xF
   460  000048                     	ds	1
   461  000049                     ds18b20_readrom@i:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x10
   465  000049                     	ds	1
   466  00004A                     
   467                           ; 1 bytes @ 0x11
   468 ;;
   469 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   470 ;;
   471 ;; *************** function _main *****************
   472 ;; Defined at:
   473 ;;		line 22 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1
   487 ;;      Params:         0       0       0
   488 ;;      Locals:         0       0       0
   489 ;;      Temps:          0       0       0
   490 ;;      Totals:         0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels required when called:    5
   493 ;; This function calls:
   494 ;;		_Delay_ms
   495 ;;		_Main_init
   496 ;;		___lwdiv
   497 ;;		___lwmod
   498 ;;		_clearLCD
   499 ;;		_ds18b20_get_temp
   500 ;;		_ds18b20_readTemp
   501 ;;		_ds18b20_readrom
   502 ;;		_initLCD
   503 ;;		_key_GetKey
   504 ;;		_key_press
   505 ;;		_lcdPrint
   506 ;;		_lcd_gotoxy
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text0
   513  000244                     __ptext0:
   514                           	callstack 0
   515  000244                     _main:
   516                           	callstack 26
   517                           
   518                           ;main.c: 23: Main_init();
   519                           
   520                           ;incstack = 0
   521  000244  EC88  F004         	call	_Main_init	;wreg free
   522                           
   523                           ;main.c: 24: initLCD();
   524  000248  EC75  F002         	call	_initLCD	;wreg free
   525                           
   526                           ;main.c: 25: lcd_gotoxy(1, 1);
   527  00024C  0E01               	movlw	1
   528  00024E  6E3D               	movwf	lcd_gotoxy@y^0,c
   529  000250  ECE7  F005         	call	_lcd_gotoxy
   530                           
   531                           ;main.c: 26: lcdPrint("---TEMP SENS----");
   532  000254  0E11               	movlw	low STR_1
   533  000256  D920               	call	PL16	;call to abstracted procedure
   534  000258  EC50  F003         	call	_lcdPrint	;wreg free
   535                           
   536                           ;main.c: 27: lcd_gotoxy(1, 2);
   537  00025C  D92A               	call	PL20	;call to abstracted procedure
   538  00025E  ECE7  F005         	call	_lcd_gotoxy
   539                           
   540                           ;main.c: 28: lcdPrint("(c)Ivan_fd v1.0");
   541  000262  0E32               	movlw	low STR_2
   542  000264  D919               	call	PL16	;call to abstracted procedure
   543  000266  EC50  F003         	call	_lcdPrint	;wreg free
   544                           
   545                           ;main.c: 29: Delay_ms(2000);
   546  00026A  D93A               	call	PL30	;call to abstracted procedure
   547  00026C  ECC6  F005         	call	_Delay_ms	;wreg free
   548                           
   549                           ;main.c: 30: clearLCD();
   550  000270  ECF5  F005         	call	_clearLCD	;wreg free
   551                           
   552                           ;main.c: 31: if ((PORTB & (1 << 1)) == 0) {
   553  000274  B281               	btfsc	129,1,c	;volatile
   554  000276  D00F               	goto	l2231
   555                           
   556                           ;main.c: 32: clearLCD();
   557  000278  ECF5  F005         	call	_clearLCD	;wreg free
   558                           
   559                           ;main.c: 33: select = 2;
   560  00027C  0E02               	movlw	2
   561  00027E  6E4B               	movwf	_select^0,c
   562                           
   563                           ;main.c: 34: lcd_gotoxy(1, 1);
   564  000280  0E01               	movlw	1
   565  000282  6E3D               	movwf	lcd_gotoxy@y^0,c
   566  000284  ECE7  F005         	call	_lcd_gotoxy
   567                           
   568                           ;main.c: 35: lcdPrint("   DQ 1 or 2?  ");
   569  000288  0E22               	movlw	low STR_3
   570  00028A  D906               	call	PL16	;call to abstracted procedure
   571  00028C  EC50  F003         	call	_lcdPrint	;wreg free
   572                           
   573                           ;main.c: 36: Delay_ms(2000);
   574  000290  D927               	call	PL30	;call to abstracted procedure
   575  000292  ECC6  F005         	call	_Delay_ms	;wreg free
   576  000296                     l2231:
   577                           
   578                           ;main.c: 42: if (read_key) {
   579  000296  A04C               	btfss	(_read_key/(0+8))^0,_read_key& (0+7),c
   580  000298  D003               	goto	l2237
   581                           
   582                           ;main.c: 43: key_press();
   583  00029A  ECFB  F004         	call	_key_press	;wreg free
   584                           
   585                           ;main.c: 44: read_key = 0;
   586  00029E  904C               	bcf	(_read_key/(0+8))^0,_read_key& (0+7),c
   587  0002A0                     l2237:
   588                           
   589                           ;main.c: 45: };main.c: 46: pressed_key = key_GetKey();
   590  0002A0  EC16  F006         	call	_key_GetKey	;wreg free
   591  0002A4  6E24               	movwf	_pressed_key^0,c
   592                           
   593                           ;main.c: 48: switch (select) {
   594  0002A6  D0BE               	goto	l2431
   595  0002A8                     l2239:
   596                           
   597                           ;main.c: 50: if (ds18b20_readTemp(&time_flag, &timer_val)) {
   598  0002A8  0E37               	movlw	low _time_flag
   599  0002AA  6E3F               	movwf	ds18b20_readTemp@time_flag^0,c
   600  0002AC  0E38               	movlw	low _timer_val
   601  0002AE  6E40               	movwf	ds18b20_readTemp@timer_val^0,c
   602  0002B0  ECF1  F002         	call	_ds18b20_readTemp	;wreg free
   603  0002B4  0900               	iorlw	0
   604  0002B6  E012               	bz	l2243
   605                           
   606                           ;main.c: 51: temperature_1 = ds18b20_get_temp(1, &minus_1);
   607  0002B8  0E36               	movlw	low _minus_1
   608  0002BA  6E39               	movwf	ds18b20_get_temp@minus^0,c
   609  0002BC  0E01               	movlw	1
   610  0002BE  EC9E  F003         	call	_ds18b20_get_temp
   611  0002C2  C039  F020         	movff	?_ds18b20_get_temp,_temperature_1
   612  0002C6  C03A  F021         	movff	?_ds18b20_get_temp+1,_temperature_1+1
   613                           
   614                           ;main.c: 52: temperature_2 = ds18b20_get_temp(2, &minus_2);
   615  0002CA  0E35               	movlw	low _minus_2
   616  0002CC  6E39               	movwf	ds18b20_get_temp@minus^0,c
   617  0002CE  0E02               	movlw	2
   618  0002D0  EC9E  F003         	call	_ds18b20_get_temp
   619  0002D4  C039  F01E         	movff	?_ds18b20_get_temp,_temperature_2
   620  0002D8  C03A  F01F         	movff	?_ds18b20_get_temp+1,_temperature_2+1
   621  0002DC                     l2243:
   622                           
   623                           ;main.c: 53: };main.c: 54: lcd_gotoxy(1, 1);
   624  0002DC  0E01               	movlw	1
   625  0002DE  6E3D               	movwf	lcd_gotoxy@y^0,c
   626  0002E0  ECE7  F005         	call	_lcd_gotoxy
   627                           
   628                           ;main.c: 56: TxtBuf[0] = 'T';
   629                           
   630                           ;main.c: 57: TxtBuf[1] = 'e';
   631                           
   632                           ;main.c: 58: TxtBuf[2] = 'm';
   633                           
   634                           ;main.c: 59: TxtBuf[3] = 'p';
   635  0002E4  D8CA               	call	PL10	;call to abstracted procedure
   636                           
   637                           ;main.c: 60: TxtBuf[4] = '1';
   638  0002E6  0E31               	movlw	49
   639  0002E8  6E29               	movwf	(_TxtBuf+4)^0,c
   640                           
   641                           ;main.c: 61: TxtBuf[5] = ':';
   642  0002EA  0E3A               	movlw	58
   643  0002EC  6E2A               	movwf	(_TxtBuf+5)^0,c
   644                           
   645                           ;main.c: 62: TxtBuf[6] = minus_1;
   646  0002EE  C036  F02B         	movff	_minus_1,_TxtBuf+6
   647                           
   648                           ;main.c: 63: TxtBuf[7] = ((temperature_1 / 100) % 10) + 48;
   649  0002F2  6A3C               	clrf	(___lwdiv@divisor+1)^0,c
   650  0002F4  0E64               	movlw	100
   651  0002F6  6E3B               	movwf	___lwdiv@divisor^0,c
   652  0002F8  D8EE               	call	PL28	;call to abstracted procedure
   653  0002FA  ECD6  F004         	call	___lwdiv	;wreg free
   654  0002FE  D8A6               	call	PL4	;call to abstracted procedure
   655  000300  EC1B  F005         	call	___lwmod	;wreg free
   656                           
   657                           ;main.c: 64: TxtBuf[8] = ((temperature_1 / 10) % 10) + 48;
   658  000304  D8CF               	call	PL18	;call to abstracted procedure
   659  000306  D8E7               	call	PL28	;call to abstracted procedure
   660  000308  ECD6  F004         	call	___lwdiv	;wreg free
   661  00030C  D89F               	call	PL4	;call to abstracted procedure
   662  00030E  EC1B  F005         	call	___lwmod	;wreg free
   663                           
   664                           ;main.c: 65: TxtBuf[9] = '.';
   665  000312  D8D6               	call	PL24	;call to abstracted procedure
   666                           
   667                           ;main.c: 66: TxtBuf[10] = ((temperature_1 % 10) + 48);
   668  000314  C020  F040         	movff	_temperature_1,___lwmod@dividend
   669  000318  C021  F041         	movff	_temperature_1+1,___lwmod@dividend+1
   670  00031C  D8CD               	call	PL22	;call to abstracted procedure
   671  00031E  EC1B  F005         	call	___lwmod	;wreg free
   672                           
   673                           ;main.c: 67: TxtBuf[11] = 0xEF;
   674                           
   675                           ;main.c: 68: TxtBuf[12] = 'C';
   676                           
   677                           ;main.c: 69: TxtBuf[13] = ' ';
   678                           
   679                           ;main.c: 70: TxtBuf[14] = ' ';
   680                           
   681                           ;main.c: 71: TxtBuf[15] = 0;
   682                           
   683                           ;main.c: 72: lcdPrint(TxtBuf);
   684  000322  D89C               	call	PL6	;call to abstracted procedure
   685  000324  EC50  F003         	call	_lcdPrint	;wreg free
   686                           
   687                           ;main.c: 74: lcd_gotoxy(1, 2);
   688  000328  D8C4               	call	PL20	;call to abstracted procedure
   689  00032A  ECE7  F005         	call	_lcd_gotoxy
   690                           
   691                           ;main.c: 76: TxtBuf[0] = 'T';
   692                           
   693                           ;main.c: 77: TxtBuf[1] = 'e';
   694                           
   695                           ;main.c: 78: TxtBuf[2] = 'm';
   696                           
   697                           ;main.c: 79: TxtBuf[3] = 'p';
   698  00032E  D8A5               	call	PL10	;call to abstracted procedure
   699                           
   700                           ;main.c: 80: TxtBuf[4] = '2';
   701  000330  0E32               	movlw	50
   702  000332  6E29               	movwf	(_TxtBuf+4)^0,c
   703                           
   704                           ;main.c: 81: TxtBuf[5] = ':';
   705  000334  0E3A               	movlw	58
   706  000336  6E2A               	movwf	(_TxtBuf+5)^0,c
   707                           
   708                           ;main.c: 82: TxtBuf[6] = minus_2;
   709  000338  C035  F02B         	movff	_minus_2,_TxtBuf+6
   710                           
   711                           ;main.c: 83: TxtBuf[7] = ((temperature_2 / 100) % 10) + 48;
   712  00033C  6A3C               	clrf	(___lwdiv@divisor+1)^0,c
   713  00033E  0E64               	movlw	100
   714  000340  6E3B               	movwf	___lwdiv@divisor^0,c
   715  000342  D8C4               	call	PL26	;call to abstracted procedure
   716  000344  ECD6  F004         	call	___lwdiv	;wreg free
   717  000348  D881               	call	PL4	;call to abstracted procedure
   718  00034A  EC1B  F005         	call	___lwmod	;wreg free
   719                           
   720                           ;main.c: 84: TxtBuf[8] = ((temperature_2 / 10) % 10) + 48;
   721  00034E  D8AA               	call	PL18	;call to abstracted procedure
   722  000350  D8BD               	call	PL26	;call to abstracted procedure
   723  000352  ECD6  F004         	call	___lwdiv	;wreg free
   724  000356  D87A               	call	PL4	;call to abstracted procedure
   725  000358  EC1B  F005         	call	___lwmod	;wreg free
   726                           
   727                           ;main.c: 85: TxtBuf[9] = '.';
   728  00035C  D8B1               	call	PL24	;call to abstracted procedure
   729                           
   730                           ;main.c: 86: TxtBuf[10] = ((temperature_2 % 10) + 48);
   731  00035E  C01E  F040         	movff	_temperature_2,___lwmod@dividend
   732  000362  C01F  F041         	movff	_temperature_2+1,___lwmod@dividend+1
   733  000366  D8A8               	call	PL22	;call to abstracted procedure
   734  000368  EC1B  F005         	call	___lwmod	;wreg free
   735                           
   736                           ;main.c: 87: TxtBuf[11] = 0xEF;
   737                           
   738                           ;main.c: 88: TxtBuf[12] = 'C';
   739                           
   740                           ;main.c: 89: TxtBuf[13] = ' ';
   741                           
   742                           ;main.c: 90: TxtBuf[14] = ' ';
   743                           
   744                           ;main.c: 91: TxtBuf[15] = 0;
   745                           
   746                           ;main.c: 92: lcdPrint(TxtBuf);
   747  00036C  D877               	call	PL6	;call to abstracted procedure
   748  00036E  EC50  F003         	call	_lcdPrint	;wreg free
   749                           
   750                           ;main.c: 94: if (pressed_key == 1) {
   751  000372  0424               	decf	_pressed_key^0,w,c
   752  000374  E10A               	bnz	l2339
   753                           
   754                           ;main.c: 95: lcd_gotoxy(1, 2);
   755  000376  D89D               	call	PL20	;call to abstracted procedure
   756  000378  ECE7  F005         	call	_lcd_gotoxy
   757                           
   758                           ;main.c: 97: TxtBuf[0] = 'P';
   759                           
   760                           ;main.c: 98: TxtBuf[1] = 'r';
   761                           
   762                           ;main.c: 99: TxtBuf[2] = 'e';
   763                           
   764                           ;main.c: 100: TxtBuf[3] = 's';
   765                           
   766                           ;main.c: 101: TxtBuf[4] = 's';
   767                           
   768                           ;main.c: 102: TxtBuf[5] = ':';
   769  00037C  D85B               	call	PL2	;call to abstracted procedure
   770                           
   771                           ;main.c: 103: TxtBuf[6] = 'O';
   772  00037E  0E4F               	movlw	79
   773  000380  6E2B               	movwf	(_TxtBuf+6)^0,c
   774                           
   775                           ;main.c: 104: TxtBuf[7] = 'K';
   776  000382  0E4B               	movlw	75
   777                           
   778                           ;main.c: 105: TxtBuf[8] = 0;
   779                           
   780                           ;main.c: 106: lcdPrint(TxtBuf);
   781  000384  D883               	call	PL14	;call to abstracted procedure
   782  000386  EC50  F003         	call	_lcdPrint	;wreg free
   783  00038A                     l2339:
   784                           
   785                           ;main.c: 107: };main.c: 108: if (pressed_key == 2) {
   786  00038A  0E02               	movlw	2
   787  00038C  1824               	xorwf	_pressed_key^0,w,c
   788  00038E  E10A               	bnz	l2363
   789                           
   790                           ;main.c: 109: lcd_gotoxy(1, 2);
   791  000390  D890               	call	PL20	;call to abstracted procedure
   792  000392  ECE7  F005         	call	_lcd_gotoxy
   793                           
   794                           ;main.c: 111: TxtBuf[0] = 'P';
   795                           
   796                           ;main.c: 112: TxtBuf[1] = 'r';
   797                           
   798                           ;main.c: 113: TxtBuf[2] = 'e';
   799                           
   800                           ;main.c: 114: TxtBuf[3] = 's';
   801                           
   802                           ;main.c: 115: TxtBuf[4] = 's';
   803                           
   804                           ;main.c: 116: TxtBuf[5] = ':';
   805  000396  D84E               	call	PL2	;call to abstracted procedure
   806                           
   807                           ;main.c: 117: TxtBuf[6] = 'U';
   808  000398  0E55               	movlw	85
   809  00039A  6E2B               	movwf	(_TxtBuf+6)^0,c
   810                           
   811                           ;main.c: 118: TxtBuf[7] = 'P';
   812  00039C  0E50               	movlw	80
   813                           
   814                           ;main.c: 119: TxtBuf[8] = 0;
   815                           
   816                           ;main.c: 120: lcdPrint(TxtBuf);
   817  00039E  D876               	call	PL14	;call to abstracted procedure
   818  0003A0  EC50  F003         	call	_lcdPrint	;wreg free
   819  0003A4                     l2363:
   820                           
   821                           ;main.c: 121: };main.c: 122: if (pressed_key == 3) {
   822  0003A4  0E03               	movlw	3
   823  0003A6  1824               	xorwf	_pressed_key^0,w,c
   824  0003A8  E001 D775          	bnz	l2231
   825                           
   826                           ;main.c: 123: lcd_gotoxy(1, 2);
   827  0003AC  D882               	call	PL20	;call to abstracted procedure
   828  0003AE  ECE7  F005         	call	_lcd_gotoxy
   829                           
   830                           ;main.c: 125: TxtBuf[0] = 'P';
   831                           
   832                           ;main.c: 126: TxtBuf[1] = 'r';
   833                           
   834                           ;main.c: 127: TxtBuf[2] = 'e';
   835                           
   836                           ;main.c: 128: TxtBuf[3] = 's';
   837                           
   838                           ;main.c: 129: TxtBuf[4] = 's';
   839                           
   840                           ;main.c: 130: TxtBuf[5] = ':';
   841  0003B2  D840               	call	PL2	;call to abstracted procedure
   842                           
   843                           ;main.c: 131: TxtBuf[6] = 'B';
   844  0003B4  0E42               	movlw	66
   845  0003B6  6E2B               	movwf	(_TxtBuf+6)^0,c
   846                           
   847                           ;main.c: 132: TxtBuf[7] = 'T';
   848  0003B8  0E54               	movlw	84
   849                           
   850                           ;main.c: 133: TxtBuf[8] = 0;
   851                           
   852                           ;main.c: 134: lcdPrint(TxtBuf);
   853  0003BA  D868               	call	PL14	;call to abstracted procedure
   854  0003BC  EC50  F003         	call	_lcdPrint	;wreg free
   855  0003C0  D76A               	goto	l2231
   856  0003C2                     l2387:
   857                           
   858                           ;main.c: 139: lcd_gotoxy(1, 2);
   859  0003C2  D877               	call	PL20	;call to abstracted procedure
   860  0003C4  ECE7  F005         	call	_lcd_gotoxy
   861                           
   862                           ;main.c: 140: TxtBuf[0] = 'D';
   863  0003C8  0E44               	movlw	68
   864  0003CA  6E25               	movwf	_TxtBuf^0,c
   865                           
   866                           ;main.c: 141: TxtBuf[1] = 'Q';
   867  0003CC  0E51               	movlw	81
   868  0003CE  6E26               	movwf	(_TxtBuf+1)^0,c
   869                           
   870                           ;main.c: 142: TxtBuf[2] = ':';
   871  0003D0  0E3A               	movlw	58
   872  0003D2  6E27               	movwf	(_TxtBuf+2)^0,c
   873                           
   874                           ;main.c: 143: TxtBuf[3] = ' ';
   875  0003D4  0E20               	movlw	32
   876  0003D6  6E28               	movwf	(_TxtBuf+3)^0,c
   877                           
   878                           ;main.c: 144: TxtBuf[4] = dq_num + 48;
   879  0003D8  504A               	movf	_dq_num^0,w,c
   880  0003DA  0F30               	addlw	48
   881  0003DC  6E29               	movwf	(_TxtBuf+4)^0,c
   882                           
   883                           ;main.c: 145: TxtBuf[5] = ' ';
   884  0003DE  0E20               	movlw	32
   885  0003E0  6E2A               	movwf	(_TxtBuf+5)^0,c
   886                           
   887                           ;main.c: 146: TxtBuf[6] = ' ';
   888  0003E2  6E2B               	movwf	(_TxtBuf+6)^0,c
   889                           
   890                           ;main.c: 147: TxtBuf[7] = 0;
   891  0003E4  6A2C               	clrf	(_TxtBuf+7)^0,c
   892                           
   893                           ;main.c: 148: lcdPrint(TxtBuf);
   894  0003E6  0E25               	movlw	low _TxtBuf
   895  0003E8  6E40               	movwf	lcdPrint@t^0,c
   896  0003EA  6A41               	clrf	(lcdPrint@t+1)^0,c
   897  0003EC  EC50  F003         	call	_lcdPrint	;wreg free
   898                           
   899                           ;main.c: 150: if (pressed_key == 1) {
   900  0003F0  0424               	decf	_pressed_key^0,w,c
   901  0003F2  E106               	bnz	l2415
   902                           
   903                           ;main.c: 151: dq_num++;
   904  0003F4  2A4A               	incf	_dq_num^0,f,c
   905                           
   906                           ;main.c: 152: if (dq_num == 3)
   907  0003F6  0E03               	movlw	3
   908  0003F8  184A               	xorwf	_dq_num^0,w,c
   909  0003FA  E102               	bnz	l2415
   910                           
   911                           ;main.c: 153: dq_num = 1;
   912  0003FC  0E01               	movlw	1
   913  0003FE  6E4A               	movwf	_dq_num^0,c
   914  000400                     l2415:
   915                           
   916                           ;main.c: 154: };main.c: 155: if (pressed_key == 2) {
   917  000400  0E02               	movlw	2
   918  000402  1824               	xorwf	_pressed_key^0,w,c
   919  000404  E105               	bnz	l2423
   920                           
   921                           ;main.c: 156: dq_num--;
   922  000406  064A               	decf	_dq_num^0,f,c
   923                           
   924                           ;main.c: 157: if (dq_num == 0)
   925  000408  504A               	movf	_dq_num^0,w,c
   926  00040A  E102               	bnz	l2423
   927                           
   928                           ;main.c: 158: dq_num = 2;
   929  00040C  0E02               	movlw	2
   930  00040E  6E4A               	movwf	_dq_num^0,c
   931  000410                     l2423:
   932                           
   933                           ;main.c: 159: };main.c: 160: if (pressed_key == 3) {
   934  000410  0E03               	movlw	3
   935  000412  1824               	xorwf	_pressed_key^0,w,c
   936  000414  E001 D73F          	bnz	l2231
   937                           
   938                           ;main.c: 161: ds18b20_readrom(dq_num);
   939  000418  504A               	movf	_dq_num^0,w,c
   940  00041A  EC55  F004         	call	_ds18b20_readrom
   941                           
   942                           ;main.c: 162: select = 3;
   943  00041E  0E03               	movlw	3
   944  000420  6E4B               	movwf	_select^0,c
   945  000422  D739               	goto	l2231
   946  000424                     l2431:
   947  000424  504B               	movf	_select^0,w,c
   948                           
   949                           ; Switch size 1, requested type "space"
   950                           ; Number of cases is 3, Range of values is 1 to 3
   951                           ; switch strategies available:
   952                           ; Name         Instructions Cycles
   953                           ; simple_byte           10     6 (average)
   954                           ;	Chosen strategy is simple_byte
   955  000426  0A01               	xorlw	1	; case 1
   956  000428  E101 D73E          	bz	l2239
   957  00042C  0A03               	xorlw	3	; case 2
   958  00042E  E0C9               	bz	l2387
   959  000430  0A01               	xorlw	1	; case 3
   960  000432  D731               	goto	l2231
   961  000434                     __end_of_main:
   962                           	callstack 0
   963  000434                     PL2:
   964                           	callstack 26
   965  000434  0E50               	movlw	80
   966  000436  6E25               	movwf	_TxtBuf^0,c
   967  000438  0E72               	movlw	114
   968  00043A  6E26               	movwf	(_TxtBuf+1)^0,c
   969  00043C  0E65               	movlw	101
   970  00043E  6E27               	movwf	(_TxtBuf+2)^0,c
   971  000440  0E73               	movlw	115
   972  000442  6E28               	movwf	(_TxtBuf+3)^0,c
   973  000444  6E29               	movwf	(_TxtBuf+4)^0,c
   974  000446  0E3A               	movlw	58
   975  000448  6E2A               	movwf	(_TxtBuf+5)^0,c
   976  00044A  0C3A               	retlw	58
   977  00044C                     __end_ofPL2:
   978                           	callstack 0
   979  00044C                     PL4:
   980                           	callstack 26
   981  00044C  C039  F040         	movff	?___lwdiv,___lwmod@dividend
   982  000450  C03A  F041         	movff	?___lwdiv+1,___lwmod@dividend+1
   983  000454  6A43               	clrf	(___lwmod@divisor+1)^0,c
   984  000456  0E0A               	movlw	10
   985  000458  6E42               	movwf	___lwmod@divisor^0,c
   986  00045A  0C0A               	retlw	10
   987  00045C                     __end_ofPL4:
   988                           	callstack 0
   989  00045C                     PL6:
   990                           	callstack 26
   991  00045C  5040               	movf	?___lwmod^0,w,c
   992  00045E  0F30               	addlw	48
   993  000460  6E2F               	movwf	(_TxtBuf+10)^0,c
   994  000462  0EEF               	movlw	239
   995  000464  6E30               	movwf	(_TxtBuf+11)^0,c
   996  000466  0E43               	movlw	67
   997  000468  6E31               	movwf	(_TxtBuf+12)^0,c
   998  00046A  0E20               	movlw	32
   999  00046C  6E32               	movwf	(_TxtBuf+13)^0,c
  1000  00046E  6E33               	movwf	(_TxtBuf+14)^0,c
  1001  000470  6A34               	clrf	(_TxtBuf+15)^0,c
  1002  000472  0E25               	movlw	low _TxtBuf
  1003  000474  6E40               	movwf	lcdPrint@t^0,c
  1004  000476  6A41               	clrf	(lcdPrint@t+1)^0,c
  1005  000478  0012               	return	
  1006  00047A                     __end_ofPL6:
  1007                           	callstack 0
  1008  00047A                     PL10:
  1009                           	callstack 26
  1010  00047A  0E54               	movlw	84
  1011  00047C  6E25               	movwf	_TxtBuf^0,c
  1012  00047E  0E65               	movlw	101
  1013  000480  6E26               	movwf	(_TxtBuf+1)^0,c
  1014  000482  0E6D               	movlw	109
  1015  000484  6E27               	movwf	(_TxtBuf+2)^0,c
  1016  000486  0E70               	movlw	112
  1017  000488  6E28               	movwf	(_TxtBuf+3)^0,c
  1018  00048A  0C70               	retlw	112
  1019  00048C                     __end_ofPL10:
  1020                           	callstack 0
  1021  00048C                     PL14:
  1022                           	callstack 26
  1023  00048C  6E2C               	movwf	(_TxtBuf+7)^0,c
  1024  00048E  6A2D               	clrf	(_TxtBuf+8)^0,c
  1025  000490  0E25               	movlw	low _TxtBuf
  1026  000492  6E40               	movwf	lcdPrint@t^0,c
  1027  000494  6A41               	clrf	(lcdPrint@t+1)^0,c
  1028  000496  0012               	return	
  1029  000498                     __end_ofPL14:
  1030                           	callstack 0
  1031  000498                     PL16:
  1032                           	callstack 26
  1033  000498  6E40               	movwf	lcdPrint@t^0,c
  1034  00049A  5040               	movf	lcdPrint@t^0,w,c
  1035  00049C  A4D8               	btfss	status,2,c
  1036  00049E  0E02               	movlw	high __smallconst
  1037  0004A0  6E41               	movwf	(lcdPrint@t+1)^0,c
  1038  0004A2  0012               	return	
  1039  0004A4                     __end_ofPL16:
  1040                           	callstack 0
  1041  0004A4                     PL18:
  1042                           	callstack 26
  1043  0004A4  5040               	movf	?___lwmod^0,w,c
  1044  0004A6  0F30               	addlw	48
  1045  0004A8  6E2C               	movwf	(_TxtBuf+7)^0,c
  1046  0004AA  6A3C               	clrf	(___lwdiv@divisor+1)^0,c
  1047  0004AC  0E0A               	movlw	10
  1048  0004AE  6E3B               	movwf	___lwdiv@divisor^0,c
  1049  0004B0  0C0A               	retlw	10
  1050  0004B2                     __end_ofPL18:
  1051                           	callstack 0
  1052  0004B2                     PL20:
  1053                           	callstack 26
  1054  0004B2  0E02               	movlw	2
  1055  0004B4  6E3D               	movwf	lcd_gotoxy@y^0,c
  1056  0004B6  0C01               	retlw	1
  1057  0004B8                     __end_ofPL20:
  1058                           	callstack 0
  1059  0004B8                     PL22:
  1060                           	callstack 26
  1061  0004B8  6A43               	clrf	(___lwmod@divisor+1)^0,c
  1062  0004BA  0E0A               	movlw	10
  1063  0004BC  6E42               	movwf	___lwmod@divisor^0,c
  1064  0004BE  0C0A               	retlw	10
  1065  0004C0                     __end_ofPL22:
  1066                           	callstack 0
  1067  0004C0                     PL24:
  1068                           	callstack 26
  1069  0004C0  5040               	movf	?___lwmod^0,w,c
  1070  0004C2  0F30               	addlw	48
  1071  0004C4  6E2D               	movwf	(_TxtBuf+8)^0,c
  1072  0004C6  0E2E               	movlw	46
  1073  0004C8  6E2E               	movwf	(_TxtBuf+9)^0,c
  1074  0004CA  0C2E               	retlw	46
  1075  0004CC                     __end_ofPL24:
  1076                           	callstack 0
  1077  0004CC                     PL26:
  1078                           	callstack 26
  1079  0004CC  C01E  F039         	movff	_temperature_2,___lwdiv@dividend
  1080  0004D0  C01F  F03A         	movff	_temperature_2+1,___lwdiv@dividend+1
  1081  0004D4  0012               	return	
  1082  0004D6                     __end_ofPL26:
  1083                           	callstack 0
  1084  0004D6                     PL28:
  1085                           	callstack 26
  1086  0004D6  C020  F039         	movff	_temperature_1,___lwdiv@dividend
  1087  0004DA  C021  F03A         	movff	_temperature_1+1,___lwdiv@dividend+1
  1088  0004DE  0012               	return	
  1089  0004E0                     __end_ofPL28:
  1090                           	callstack 0
  1091  0004E0                     PL30:
  1092                           	callstack 26
  1093  0004E0  0E07               	movlw	7
  1094  0004E2  6E3A               	movwf	(Delay_ms@delay+1)^0,c
  1095  0004E4  0ED0               	movlw	208
  1096  0004E6  6E39               	movwf	Delay_ms@delay^0,c
  1097  0004E8  0CD0               	retlw	208
  1098  0004EA                     __end_ofPL30:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _lcdPrint *****************
  1102 ;; Defined at:
  1103 ;;		line 96 in file "hd44780.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  t               2    7[COMRAM] PTR const unsigned char 
  1106 ;;		 -> TxtBuf(16), STR_3(16), STR_2(16), STR_1(17), 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1
  1118 ;;      Params:         2       0       0
  1119 ;;      Locals:         0       0       0
  1120 ;;      Temps:          1       0       0
  1121 ;;      Totals:         3       0       0
  1122 ;;Total ram usage:        3 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    4
  1125 ;; This function calls:
  1126 ;;		_lcdWrite
  1127 ;;		_lcd_gotoxy
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text1
  1134  0006A0                     __ptext1:
  1135                           	callstack 0
  1136  0006A0                     _lcdPrint:
  1137                           	callstack 26
  1138                           
  1139                           ;hd44780.c: 97: while(*t != '\0'){
  1140                           
  1141                           ;incstack = 0
  1142  0006A0  D033               	goto	l2029
  1143  0006A2                     l2013:
  1144                           
  1145                           ;hd44780.c: 100: lcdWrite(1, COMMAND);
  1146  0006A2  D849               	call	PL36	;call to abstracted procedure
  1147  0006A4  ECA2  F005         	call	_lcdWrite
  1148                           
  1149                           ;hd44780.c: 101: _delay((unsigned long)((2)*(8000000/4000.0)));
  1150  0006A8  0E06               	movlw	6
  1151  0006AA  6E42               	movwf	??_lcdPrint^0,c
  1152  0006AC  0E30               	movlw	48
  1153  0006AE                     u1107:
  1154  0006AE  2EE8               	decfsz	wreg,f,c
  1155  0006B0  D7FE               	bra	u1107
  1156  0006B2  2E42               	decfsz	??_lcdPrint^0,f,c
  1157  0006B4  D7FC               	bra	u1107
  1158  0006B6  D000               	nop2	
  1159                           
  1160                           ;hd44780.c: 102: break;
  1161  0006B8  D025               	goto	l2027
  1162  0006BA                     l2017:
  1163                           
  1164                           ;hd44780.c: 105: lcd_gotoxy(1, 2);
  1165  0006BA  EC59  F002         	call	PL20	;call to abstracted procedure
  1166  0006BE  ECE7  F005         	call	_lcd_gotoxy
  1167                           
  1168                           ;hd44780.c: 106: break;
  1169  0006C2  D020               	goto	l2027
  1170  0006C4                     l2019:
  1171                           
  1172                           ;hd44780.c: 109: lcdWrite(0x10, COMMAND);
  1173  0006C4  0E00               	movlw	0
  1174  0006C6  6E3B               	movwf	lcdWrite@type^0,c
  1175  0006C8  0E10               	movlw	16
  1176  0006CA  ECA2  F005         	call	_lcdWrite
  1177                           
  1178                           ;hd44780.c: 110: break;
  1179  0006CE  D01A               	goto	l2027
  1180  0006D0                     l2021:
  1181                           
  1182                           ;hd44780.c: 113: lcdWrite(*t, DATA);
  1183  0006D0  0E01               	movlw	1
  1184  0006D2  6E3B               	movwf	lcdWrite@type^0,c
  1185  0006D4  D823               	call	PL8	;call to abstracted procedure
  1186  0006D6  64F7               	cpfsgt	tblptrh,c
  1187  0006D8  D003               	bra	u807
  1188  0006DA  0008               	tblrd		*
  1189  0006DC  50F5               	movf	tablat,w,c
  1190  0006DE  D001               	bra	u800
  1191  0006E0                     u807:
  1192  0006E0  D824               	call	PL12	;call to abstracted procedure
  1193  0006E2                     u800:
  1194  0006E2  ECA2  F005         	call	_lcdWrite
  1195                           
  1196                           ;hd44780.c: 114: break;
  1197  0006E6  D00E               	goto	l2027
  1198  0006E8                     l2025:
  1199  0006E8  D819               	call	PL8	;call to abstracted procedure
  1200  0006EA  64F7               	cpfsgt	tblptrh,c
  1201  0006EC  D003               	bra	u817
  1202  0006EE  0008               	tblrd		*
  1203  0006F0  50F5               	movf	tablat,w,c
  1204  0006F2  D001               	bra	u810
  1205  0006F4                     u817:
  1206  0006F4  D81A               	call	PL12	;call to abstracted procedure
  1207  0006F6                     u810:
  1208                           
  1209                           ; Switch size 1, requested type "space"
  1210                           ; Number of cases is 3, Range of values is 8 to 12
  1211                           ; switch strategies available:
  1212                           ; Name         Instructions Cycles
  1213                           ; simple_byte           10     6 (average)
  1214                           ;	Chosen strategy is simple_byte
  1215  0006F6  0A08               	xorlw	8	; case 8
  1216  0006F8  E0E5               	bz	l2019
  1217  0006FA  0A02               	xorlw	2	; case 10
  1218  0006FC  E0DE               	bz	l2017
  1219  0006FE  0A06               	xorlw	6	; case 12
  1220  000700  E0D0               	bz	l2013
  1221  000702  D7E6               	goto	l2021
  1222  000704                     l2027:
  1223                           
  1224                           ;hd44780.c: 116: *t++;
  1225  000704  4A40               	infsnz	lcdPrint@t^0,f,c
  1226  000706  2A41               	incf	(lcdPrint@t+1)^0,f,c
  1227  000708                     l2029:
  1228  000708  D809               	call	PL8	;call to abstracted procedure
  1229  00070A  64F7               	cpfsgt	tblptrh,c
  1230  00070C  D003               	bra	u827
  1231  00070E  0008               	tblrd		*
  1232  000710  50F5               	movf	tablat,w,c
  1233  000712  D001               	bra	u820
  1234  000714                     u827:
  1235  000714  D80A               	call	PL12	;call to abstracted procedure
  1236  000716                     u820:
  1237  000716  0900               	iorlw	0
  1238  000718  E1E7               	bnz	l2025
  1239  00071A  0012               	return		;funcret
  1240  00071C                     __end_of_lcdPrint:
  1241                           	callstack 0
  1242  00071C                     PL8:
  1243                           	callstack 26
  1244  00071C  C040  FFF6         	movff	lcdPrint@t,tblptrl
  1245  000720  C041  FFF7         	movff	lcdPrint@t+1,tblptrh
  1246  000724  6AF8               	clrf	tblptru,c
  1247  000726  0E01               	movlw	(high __ramtop+-1)
  1248  000728  0012               	return	
  1249  00072A                     __end_ofPL8:
  1250                           	callstack 0
  1251  00072A                     PL12:
  1252                           	callstack 26
  1253  00072A  CFF6 FFD9          	movff	tblptrl,fsr2l
  1254  00072E  CFF7 FFDA          	movff	tblptrh,fsr2h
  1255  000732  50DF               	movf	indf2,w,c
  1256  000734  0012               	return	
  1257  000736                     __end_ofPL12:
  1258                           	callstack 0
  1259  000736                     PL36:
  1260                           	callstack 26
  1261  000736  0E00               	movlw	0
  1262  000738  6E3B               	movwf	lcdWrite@type^0,c
  1263  00073A  0C01               	retlw	1
  1264  00073C                     __end_ofPL36:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _lcd_gotoxy *****************
  1268 ;; Defined at:
  1269 ;;		line 76 in file "hd44780.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  x               1    wreg     unsigned char 
  1272 ;;  y               1    4[COMRAM] unsigned char 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  x               1    5[COMRAM] unsigned char 
  1275 ;;  address         1    6[COMRAM] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1
  1285 ;;      Params:         1       0       0
  1286 ;;      Locals:         2       0       0
  1287 ;;      Temps:          0       0       0
  1288 ;;      Totals:         3       0       0
  1289 ;;Total ram usage:        3 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    3
  1292 ;; This function calls:
  1293 ;;		_lcdWrite
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;;		_lcdPrint
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text2
  1301  000BCE                     __ptext2:
  1302                           	callstack 0
  1303  000BCE                     _lcd_gotoxy:
  1304                           	callstack 27
  1305                           
  1306                           ;incstack = 0
  1307                           ;lcd_gotoxy@x stored from wreg
  1308  000BCE  6E3E               	movwf	lcd_gotoxy@x^0,c
  1309                           
  1310                           ;hd44780.c: 77: uint8_t address;;hd44780.c: 79: if (y != 1)
  1311  000BD0  043D               	decf	lcd_gotoxy@y^0,w,c
  1312  000BD2  E003               	bz	l238
  1313                           
  1314                           ;hd44780.c: 80: address = 0x40;
  1315  000BD4  0E40               	movlw	64
  1316  000BD6  6E3F               	movwf	lcd_gotoxy@address^0,c
  1317  000BD8  D001               	goto	l1845
  1318  000BDA                     l238:
  1319                           
  1320                           ;hd44780.c: 81: else;hd44780.c: 82: address = 0;
  1321  000BDA  6A3F               	clrf	lcd_gotoxy@address^0,c
  1322  000BDC                     l1845:
  1323                           
  1324                           ;hd44780.c: 84: address += x - 1;
  1325  000BDC  043E               	decf	lcd_gotoxy@x^0,w,c
  1326  000BDE  263F               	addwf	lcd_gotoxy@address^0,f,c
  1327                           
  1328                           ;hd44780.c: 85: lcdWrite(0x80 | address, COMMAND);
  1329  000BE0  6A3B               	clrf	lcdWrite@type^0,c
  1330  000BE2  503F               	movf	lcd_gotoxy@address^0,w,c
  1331  000BE4  0980               	iorlw	128
  1332  000BE6  EFA2  F005         	goto	_lcdWrite
  1333  000BEA                     __end_of_lcd_gotoxy:
  1334                           	callstack 0
  1335                           
  1336 ;; *************** function _key_press *****************
  1337 ;; Defined at:
  1338 ;;		line 5 in file "key.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  key             1    0[COMRAM] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1
  1352 ;;      Params:         0       0       0
  1353 ;;      Locals:         1       0       0
  1354 ;;      Temps:          0       0       0
  1355 ;;      Totals:         1       0       0
  1356 ;;Total ram usage:        1 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           	psect	text3
  1367  0009F6                     __ptext3:
  1368                           	callstack 0
  1369  0009F6                     _key_press:
  1370                           	callstack 29
  1371                           
  1372                           ;key.c: 7: static uint8_t count = 0;;key.c: 8: uint8_t key;;key.c: 9: if (((PORTB & (1 <
      +                          < 1)) == 0) && ((PORTB & (1 << 2)) == 0))
  1373                           
  1374                           ;incstack = 0
  1375  0009F6  A281               	btfss	129,1,c	;volatile
  1376  0009F8  B481               	btfsc	129,2,c	;volatile
  1377  0009FA  D002               	goto	l325
  1378                           
  1379                           ;key.c: 10: key = 3;
  1380  0009FC  0E03               	movlw	3
  1381  0009FE  D007               	goto	L2
  1382  000A00                     l325:
  1383                           
  1384                           ;key.c: 11: else if ((PORTB & (1 << 1)) == 0)
  1385  000A00  B281               	btfsc	129,1,c	;volatile
  1386  000A02  D002               	goto	l327
  1387                           
  1388                           ;key.c: 12: key = 1;
  1389  000A04  0E01               	movlw	1
  1390  000A06  D003               	goto	L2
  1391  000A08                     l327:
  1392                           
  1393                           ;key.c: 13: else if ((PORTB & (1 << 2)) == 0)
  1394  000A08  B481               	btfsc	129,2,c	;volatile
  1395  000A0A  D003               	goto	l329
  1396                           
  1397                           ;key.c: 14: key = 2;
  1398  000A0C  0E02               	movlw	2
  1399  000A0E                     L2:
  1400  000A0E  6E39               	movwf	key_press@key^0,c
  1401  000A10  D001               	goto	l1377
  1402  000A12                     l329:
  1403                           
  1404                           ;key.c: 15: else;key.c: 16: key = 0;
  1405  000A12  6A39               	clrf	key_press@key^0,c
  1406  000A14                     l1377:
  1407                           
  1408                           ;key.c: 19: if (key) {
  1409  000A14  5039               	movf	key_press@key^0,w,c
  1410  000A16  E00D               	bz	l331
  1411                           
  1412                           ;key.c: 22: if (count == 20) {
  1413  000A18  0E14               	movlw	20
  1414  000A1A  1822               	xorwf	key_press@count^0,w,c
  1415  000A1C  E105               	bnz	l1389
  1416                           
  1417                           ;key.c: 23: count = 20 + 10;
  1418  000A1E  0E1E               	movlw	30
  1419  000A20  6E22               	movwf	key_press@count^0,c
  1420                           
  1421                           ;key.c: 24: key_pressed = key;
  1422  000A22  C039  F023         	movff	key_press@key,_key_pressed	;volatile
  1423  000A26  0C1E               	retlw	30
  1424  000A28                     l1389:
  1425                           
  1426                           ;key.c: 28: if (count < (20 + 5))
  1427  000A28  0E19               	movlw	25
  1428  000A2A  6022               	cpfslt	key_press@count^0,c
  1429  000A2C  0C19               	retlw	25
  1430                           
  1431                           ;key.c: 29: count++;
  1432  000A2E  2A22               	incf	key_press@count^0,f,c
  1433  000A30  0C19               	retlw	25
  1434  000A32                     l331:
  1435                           
  1436                           ;key.c: 32: else count = 0;
  1437  000A32  6A22               	clrf	key_press@count^0,c
  1438  000A34  0012               	return		;funcret
  1439  000A36                     __end_of_key_press:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _key_GetKey *****************
  1443 ;; Defined at:
  1444 ;;		line 37 in file "key.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  key             1    0[COMRAM] unsigned char 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      unsigned char 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1
  1458 ;;      Params:         0       0       0
  1459 ;;      Locals:         1       0       0
  1460 ;;      Temps:          0       0       0
  1461 ;;      Totals:         1       0       0
  1462 ;;Total ram usage:        1 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text4
  1473  000C2C                     __ptext4:
  1474                           	callstack 0
  1475  000C2C                     _key_GetKey:
  1476                           	callstack 29
  1477                           
  1478                           ;key.c: 39: uint8_t key = key_pressed;
  1479                           
  1480                           ;incstack = 0
  1481  000C2C  C023  F039         	movff	_key_pressed,key_GetKey@key	;volatile
  1482                           
  1483                           ;key.c: 41: key_pressed = 0;
  1484  000C30  6A23               	clrf	_key_pressed^0,c	;volatile
  1485                           
  1486                           ;key.c: 42: return key;
  1487  000C32  5039               	movf	key_GetKey@key^0,w,c
  1488  000C34  0012               	return		;funcret
  1489  000C36                     __end_of_key_GetKey:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function _initLCD *****************
  1493 ;; Defined at:
  1494 ;;		line 10 in file "hd44780.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1
  1508 ;;      Params:         0       0       0
  1509 ;;      Locals:         0       0       0
  1510 ;;      Temps:          1       0       0
  1511 ;;      Totals:         1       0       0
  1512 ;;Total ram usage:        1 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    4
  1515 ;; This function calls:
  1516 ;;		_clearLCD
  1517 ;;		_lcdNibble
  1518 ;;		_lcdWrite
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text5
  1525  0004EA                     __ptext5:
  1526                           	callstack 0
  1527  0004EA                     _initLCD:
  1528                           	callstack 26
  1529                           
  1530                           ;hd44780.c: 11: PORTAbits.RA2 = 0;
  1531                           
  1532                           ;incstack = 0
  1533  0004EA  9480               	bcf	128,2,c	;volatile
  1534                           
  1535                           ;hd44780.c: 12: PORTAbits.RA1 = 0;
  1536  0004EC  9280               	bcf	128,1,c	;volatile
  1537                           
  1538                           ;hd44780.c: 14: _delay((unsigned long)((10)*(8000000/4000.0)));
  1539  0004EE  0E1A               	movlw	26
  1540  0004F0  6E3E               	movwf	??_initLCD^0,c
  1541  0004F2  0EF8               	movlw	248
  1542  0004F4                     u1117:
  1543  0004F4  2EE8               	decfsz	wreg,f,c
  1544  0004F6  D7FE               	bra	u1117
  1545  0004F8  2E3E               	decfsz	??_initLCD^0,f,c
  1546  0004FA  D7FC               	bra	u1117
  1547  0004FC  D000               	nop2	
  1548                           
  1549                           ;hd44780.c: 15: _delay((unsigned long)((10)*(8000000/4000.0)));
  1550  0004FE  0E1A               	movlw	26
  1551  000500  6E3E               	movwf	??_initLCD^0,c
  1552  000502  0EF8               	movlw	248
  1553  000504                     u1127:
  1554  000504  2EE8               	decfsz	wreg,f,c
  1555  000506  D7FE               	bra	u1127
  1556  000508  2E3E               	decfsz	??_initLCD^0,f,c
  1557  00050A  D7FC               	bra	u1127
  1558  00050C  D000               	nop2	
  1559                           
  1560                           ;hd44780.c: 16: _delay((unsigned long)((10)*(8000000/4000.0)));
  1561  00050E  0E1A               	movlw	26
  1562  000510  6E3E               	movwf	??_initLCD^0,c
  1563  000512  0EF8               	movlw	248
  1564  000514                     u1137:
  1565  000514  2EE8               	decfsz	wreg,f,c
  1566  000516  D7FE               	bra	u1137
  1567  000518  2E3E               	decfsz	??_initLCD^0,f,c
  1568  00051A  D7FC               	bra	u1137
  1569  00051C  D000               	nop2	
  1570                           
  1571                           ;hd44780.c: 17: _delay((unsigned long)((10)*(8000000/4000.0)));
  1572  00051E  0E1A               	movlw	26
  1573  000520  6E3E               	movwf	??_initLCD^0,c
  1574  000522  0EF8               	movlw	248
  1575  000524                     u1147:
  1576  000524  2EE8               	decfsz	wreg,f,c
  1577  000526  D7FE               	bra	u1147
  1578  000528  2E3E               	decfsz	??_initLCD^0,f,c
  1579  00052A  D7FC               	bra	u1147
  1580  00052C  D000               	nop2	
  1581                           
  1582                           ;hd44780.c: 21: lcdNibble(0b0011);
  1583  00052E  0E03               	movlw	3
  1584  000530  ECDE  F003         	call	_lcdNibble
  1585                           
  1586                           ;hd44780.c: 22: _delay((unsigned long)((5)*(8000000/4000.0)));
  1587  000534  0E0D               	movlw	13
  1588  000536  6E3E               	movwf	??_initLCD^0,c
  1589  000538  0EFC               	movlw	252
  1590  00053A                     u1157:
  1591  00053A  2EE8               	decfsz	wreg,f,c
  1592  00053C  D7FE               	bra	u1157
  1593  00053E  2E3E               	decfsz	??_initLCD^0,f,c
  1594  000540  D7FC               	bra	u1157
  1595                           
  1596                           ;hd44780.c: 23: lcdNibble(0b0011);
  1597  000542  0E03               	movlw	3
  1598  000544  ECDE  F003         	call	_lcdNibble
  1599                           
  1600                           ;hd44780.c: 24: _delay((unsigned long)((5)*(8000000/4000.0)));
  1601  000548  0E0D               	movlw	13
  1602  00054A  6E3E               	movwf	??_initLCD^0,c
  1603  00054C  0EFC               	movlw	252
  1604  00054E                     u1167:
  1605  00054E  2EE8               	decfsz	wreg,f,c
  1606  000550  D7FE               	bra	u1167
  1607  000552  2E3E               	decfsz	??_initLCD^0,f,c
  1608  000554  D7FC               	bra	u1167
  1609                           
  1610                           ;hd44780.c: 25: lcdNibble(0b0011);
  1611  000556  0E03               	movlw	3
  1612  000558  ECDE  F003         	call	_lcdNibble
  1613                           
  1614                           ;hd44780.c: 26: _delay((unsigned long)((5)*(8000000/4000.0)));
  1615  00055C  0E0D               	movlw	13
  1616  00055E  6E3E               	movwf	??_initLCD^0,c
  1617  000560  0EFC               	movlw	252
  1618  000562                     u1177:
  1619  000562  2EE8               	decfsz	wreg,f,c
  1620  000564  D7FE               	bra	u1177
  1621  000566  2E3E               	decfsz	??_initLCD^0,f,c
  1622  000568  D7FC               	bra	u1177
  1623                           
  1624                           ;hd44780.c: 27: lcdNibble(0b0010);
  1625  00056A  0E02               	movlw	2
  1626  00056C  ECDE  F003         	call	_lcdNibble
  1627                           
  1628                           ;hd44780.c: 28: _delay((unsigned long)((5)*(8000000/4000.0)));
  1629  000570  0E0D               	movlw	13
  1630  000572  6E3E               	movwf	??_initLCD^0,c
  1631  000574  0EFC               	movlw	252
  1632  000576                     u1187:
  1633  000576  2EE8               	decfsz	wreg,f,c
  1634  000578  D7FE               	bra	u1187
  1635  00057A  2E3E               	decfsz	??_initLCD^0,f,c
  1636  00057C  D7FC               	bra	u1187
  1637                           
  1638                           ;hd44780.c: 31: lcdWrite(((0b0010 << 4) | (1 << 3)), COMMAND);
  1639  00057E  0E00               	movlw	0
  1640  000580  6E3B               	movwf	lcdWrite@type^0,c
  1641  000582  0E28               	movlw	40
  1642  000584  ECA2  F005         	call	_lcdWrite
  1643                           
  1644                           ;hd44780.c: 32: _delay((unsigned long)((5)*(8000000/4000.0)));
  1645  000588  0E0D               	movlw	13
  1646  00058A  6E3E               	movwf	??_initLCD^0,c
  1647  00058C  0EFC               	movlw	252
  1648  00058E                     u1197:
  1649  00058E  2EE8               	decfsz	wreg,f,c
  1650  000590  D7FE               	bra	u1197
  1651  000592  2E3E               	decfsz	??_initLCD^0,f,c
  1652  000594  D7FC               	bra	u1197
  1653                           
  1654                           ;hd44780.c: 33: lcdWrite(((0b1100) | (0 << 1) | (0 << 0)), COMMAND);
  1655  000596  0E00               	movlw	0
  1656  000598  6E3B               	movwf	lcdWrite@type^0,c
  1657  00059A  0E0C               	movlw	12
  1658  00059C  ECA2  F005         	call	_lcdWrite
  1659                           
  1660                           ;hd44780.c: 34: _delay((unsigned long)((8)*(8000000/4000.0)));
  1661  0005A0  0E15               	movlw	21
  1662  0005A2  6E3E               	movwf	??_initLCD^0,c
  1663  0005A4  0EC6               	movlw	198
  1664  0005A6                     u1207:
  1665  0005A6  2EE8               	decfsz	wreg,f,c
  1666  0005A8  D7FE               	bra	u1207
  1667  0005AA  2E3E               	decfsz	??_initLCD^0,f,c
  1668  0005AC  D7FC               	bra	u1207
  1669  0005AE  D000               	nop2	
  1670                           
  1671                           ;hd44780.c: 35: clearLCD();
  1672  0005B0  ECF5  F005         	call	_clearLCD	;wreg free
  1673                           
  1674                           ;hd44780.c: 36: _delay((unsigned long)((5)*(8000000/4000.0)));
  1675  0005B4  0E0D               	movlw	13
  1676  0005B6  6E3E               	movwf	??_initLCD^0,c
  1677  0005B8  0EFC               	movlw	252
  1678  0005BA                     u1217:
  1679  0005BA  2EE8               	decfsz	wreg,f,c
  1680  0005BC  D7FE               	bra	u1217
  1681  0005BE  2E3E               	decfsz	??_initLCD^0,f,c
  1682  0005C0  D7FC               	bra	u1217
  1683                           
  1684                           ;hd44780.c: 37: lcdWrite(0x06, COMMAND);
  1685  0005C2  0E00               	movlw	0
  1686  0005C4  6E3B               	movwf	lcdWrite@type^0,c
  1687  0005C6  0E06               	movlw	6
  1688  0005C8  ECA2  F005         	call	_lcdWrite
  1689                           
  1690                           ;hd44780.c: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
  1691  0005CC  0E0D               	movlw	13
  1692  0005CE  6E3E               	movwf	??_initLCD^0,c
  1693  0005D0  0EFC               	movlw	252
  1694  0005D2                     u1227:
  1695  0005D2  2EE8               	decfsz	wreg,f,c
  1696  0005D4  D7FE               	bra	u1227
  1697  0005D6  2E3E               	decfsz	??_initLCD^0,f,c
  1698  0005D8  D7FC               	bra	u1227
  1699                           
  1700                           ;hd44780.c: 39: clearLCD();
  1701  0005DA  ECF5  F005         	call	_clearLCD	;wreg free
  1702                           
  1703                           ;hd44780.c: 41: PORTAbits.RA2 = 1;
  1704  0005DE  8480               	bsf	128,2,c	;volatile
  1705  0005E0  0012               	return		;funcret
  1706  0005E2                     __end_of_initLCD:
  1707                           	callstack 0
  1708                           
  1709 ;; *************** function _clearLCD *****************
  1710 ;; Defined at:
  1711 ;;		line 45 in file "hd44780.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1
  1725 ;;      Params:         0       0       0
  1726 ;;      Locals:         0       0       0
  1727 ;;      Temps:          1       0       0
  1728 ;;      Totals:         1       0       0
  1729 ;;Total ram usage:        1 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    3
  1732 ;; This function calls:
  1733 ;;		_lcdWrite
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;;		_initLCD
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text6
  1741  000BEA                     __ptext6:
  1742                           	callstack 0
  1743  000BEA                     _clearLCD:
  1744                           	callstack 0
  1745                           
  1746                           ;hd44780.c: 46: lcdWrite(0x01, COMMAND);
  1747                           
  1748                           ;incstack = 0
  1749  000BEA  EC9B  F003         	call	PL36	;call to abstracted procedure
  1750  000BEE  ECA2  F005         	call	_lcdWrite
  1751                           
  1752                           ;hd44780.c: 47: _delay((unsigned long)((2)*(8000000/4000.0)));
  1753  000BF2  0E06               	movlw	6
  1754  000BF4  6E3D               	movwf	??_clearLCD^0,c
  1755  000BF6  0E30               	movlw	48
  1756  000BF8                     u1237:
  1757  000BF8  2EE8               	decfsz	wreg,f,c
  1758  000BFA  D7FE               	bra	u1237
  1759  000BFC  2E3D               	decfsz	??_clearLCD^0,f,c
  1760  000BFE  D7FC               	bra	u1237
  1761  000C00  D000               	nop2	
  1762  000C02  0012               	return		;funcret
  1763  000C04                     __end_of_clearLCD:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _lcdWrite *****************
  1767 ;; Defined at:
  1768 ;;		line 50 in file "hd44780.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  byte            1    wreg     unsigned char 
  1771 ;;  type            1    2[COMRAM] enum E2011
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  byte            1    3[COMRAM] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1
  1783 ;;      Params:         1       0       0
  1784 ;;      Locals:         1       0       0
  1785 ;;      Temps:          0       0       0
  1786 ;;      Totals:         2       0       0
  1787 ;;Total ram usage:        2 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    2
  1790 ;; This function calls:
  1791 ;;		_lcdNibble
  1792 ;; This function is called by:
  1793 ;;		_initLCD
  1794 ;;		_clearLCD
  1795 ;;		_lcd_gotoxy
  1796 ;;		_lcdPrint
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text7
  1801  000B44                     __ptext7:
  1802                           	callstack 0
  1803  000B44                     _lcdWrite:
  1804                           	callstack 27
  1805                           
  1806                           ;incstack = 0
  1807                           ;lcdWrite@byte stored from wreg
  1808  000B44  6E3C               	movwf	lcdWrite@byte^0,c
  1809                           
  1810                           ;hd44780.c: 51: if (type == COMMAND)
  1811  000B46  503B               	movf	lcdWrite@type^0,w,c
  1812  000B48  E102               	bnz	l230
  1813                           
  1814                           ;hd44780.c: 52: PORTAbits.RA2 = 0;
  1815  000B4A  9480               	bcf	128,2,c	;volatile
  1816  000B4C  D001               	goto	l1835
  1817  000B4E                     l230:
  1818                           
  1819                           ;hd44780.c: 53: else;hd44780.c: 54: PORTAbits.RA2 = 1;
  1820  000B4E  8480               	bsf	128,2,c	;volatile
  1821  000B50                     l1835:
  1822                           
  1823                           ;hd44780.c: 56: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1824  000B50  0E42               	movlw	66
  1825  000B52                     u1247:
  1826  000B52  2EE8               	decfsz	wreg,f,c
  1827  000B54  D7FE               	bra	u1247
  1828  000B56  D000               	nop2	
  1829                           
  1830                           ;hd44780.c: 58: lcdNibble(byte >> 4);
  1831  000B58  383C               	swapf	lcdWrite@byte^0,w,c
  1832  000B5A  0B0F               	andlw	15
  1833  000B5C  ECDE  F003         	call	_lcdNibble
  1834                           
  1835                           ;hd44780.c: 59: lcdNibble(byte & 0x0F);
  1836  000B60  503C               	movf	lcdWrite@byte^0,w,c
  1837  000B62  0B0F               	andlw	15
  1838  000B64  EFDE  F003         	goto	_lcdNibble
  1839  000B68                     __end_of_lcdWrite:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _lcdNibble *****************
  1843 ;; Defined at:
  1844 ;;		line 63 in file "hd44780.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  nibble          1    wreg     unsigned char 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  nibble          1    1[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1
  1858 ;;      Params:         0       0       0
  1859 ;;      Locals:         1       0       0
  1860 ;;      Temps:          1       0       0
  1861 ;;      Totals:         2       0       0
  1862 ;;Total ram usage:        2 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_initLCD
  1869 ;;		_lcdWrite
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text8
  1874  0007BC                     __ptext8:
  1875                           	callstack 0
  1876  0007BC                     _lcdNibble:
  1877                           	callstack 27
  1878                           
  1879                           ;incstack = 0
  1880                           ;lcdNibble@nibble stored from wreg
  1881  0007BC  6E3A               	movwf	lcdNibble@nibble^0,c
  1882                           
  1883                           ;hd44780.c: 64: PORTCbits.RC0 = (nibble & 0x01) ? 1 : 0;
  1884  0007BE  A03A               	btfss	lcdNibble@nibble^0,0,c
  1885  0007C0  D003               	goto	u10
  1886  0007C2  6A39               	clrf	??_lcdNibble^0,c
  1887  0007C4  2A39               	incf	??_lcdNibble^0,f,c
  1888  0007C6  D001               	goto	u28
  1889  0007C8                     u10:
  1890  0007C8  6A39               	clrf	??_lcdNibble^0,c
  1891  0007CA                     u28:
  1892  0007CA  5082               	movf	130,w,c	;volatile
  1893  0007CC  1839               	xorwf	??_lcdNibble^0,w,c
  1894  0007CE  0BFE               	andlw	-2
  1895  0007D0  1839               	xorwf	??_lcdNibble^0,w,c
  1896  0007D2  6E82               	movwf	130,c	;volatile
  1897                           
  1898                           ;hd44780.c: 65: PORTCbits.RC1 = (nibble & 0x02) ? 1 : 0;
  1899  0007D4  A23A               	btfss	lcdNibble@nibble^0,1,c
  1900  0007D6  D003               	goto	u30
  1901  0007D8  6A39               	clrf	??_lcdNibble^0,c
  1902  0007DA  2A39               	incf	??_lcdNibble^0,f,c
  1903  0007DC  D001               	goto	u48
  1904  0007DE                     u30:
  1905  0007DE  6A39               	clrf	??_lcdNibble^0,c
  1906  0007E0                     u48:
  1907  0007E0  4639               	rlncf	??_lcdNibble^0,f,c
  1908  0007E2  5082               	movf	130,w,c	;volatile
  1909  0007E4  1839               	xorwf	??_lcdNibble^0,w,c
  1910  0007E6  0BFD               	andlw	-3
  1911  0007E8  1839               	xorwf	??_lcdNibble^0,w,c
  1912  0007EA  6E82               	movwf	130,c	;volatile
  1913                           
  1914                           ;hd44780.c: 66: PORTCbits.RC2 = (nibble & 0x04) ? 1 : 0;
  1915  0007EC  A43A               	btfss	lcdNibble@nibble^0,2,c
  1916  0007EE  D003               	goto	u50
  1917  0007F0  6A39               	clrf	??_lcdNibble^0,c
  1918  0007F2  2A39               	incf	??_lcdNibble^0,f,c
  1919  0007F4  D001               	goto	u68
  1920  0007F6                     u50:
  1921  0007F6  6A39               	clrf	??_lcdNibble^0,c
  1922  0007F8                     u68:
  1923  0007F8  D819               	call	PL32	;call to abstracted procedure
  1924  0007FA  0BFB               	andlw	-5
  1925  0007FC  1839               	xorwf	??_lcdNibble^0,w,c
  1926  0007FE  6E82               	movwf	130,c	;volatile
  1927                           
  1928                           ;hd44780.c: 67: PORTCbits.RC3 = (nibble & 0x08) ? 1 : 0;
  1929  000800  A63A               	btfss	lcdNibble@nibble^0,3,c
  1930  000802  D003               	goto	u70
  1931  000804  6A39               	clrf	??_lcdNibble^0,c
  1932  000806  2A39               	incf	??_lcdNibble^0,f,c
  1933  000808  D001               	goto	u88
  1934  00080A                     u70:
  1935  00080A  6A39               	clrf	??_lcdNibble^0,c
  1936  00080C                     u88:
  1937  00080C  4639               	rlncf	??_lcdNibble^0,f,c
  1938  00080E  D80E               	call	PL32	;call to abstracted procedure
  1939  000810  0BF7               	andlw	-9
  1940  000812  1839               	xorwf	??_lcdNibble^0,w,c
  1941  000814  6E82               	movwf	130,c	;volatile
  1942                           
  1943                           ;hd44780.c: 70: PORTAbits.RA1 = 1;
  1944  000816  8280               	bsf	128,1,c	;volatile
  1945                           
  1946                           ;hd44780.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1947  000818  0E42               	movlw	66
  1948  00081A                     u1257:
  1949  00081A  2EE8               	decfsz	wreg,f,c
  1950  00081C  D7FE               	bra	u1257
  1951  00081E  D000               	nop2	
  1952                           
  1953                           ;hd44780.c: 72: PORTAbits.RA1 = 0;
  1954  000820  9280               	bcf	128,1,c	;volatile
  1955                           
  1956                           ;hd44780.c: 73: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1957  000822  0E42               	movlw	66
  1958  000824                     u1267:
  1959  000824  2EE8               	decfsz	wreg,f,c
  1960  000826  D7FE               	bra	u1267
  1961  000828  D000               	nop2	
  1962  00082A  0012               	return		;funcret
  1963  00082C                     __end_of_lcdNibble:
  1964                           	callstack 0
  1965  00082C                     PL32:
  1966                           	callstack 27
  1967  00082C  4639               	rlncf	??_lcdNibble^0,f,c
  1968  00082E  4639               	rlncf	??_lcdNibble^0,f,c
  1969  000830  5082               	movf	130,w,c	;volatile
  1970  000832  1839               	xorwf	??_lcdNibble^0,w,c
  1971  000834  0012               	return	
  1972  000836                     __end_ofPL32:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _ds18b20_readrom *****************
  1976 ;; Defined at:
  1977 ;;		line 166 in file "ds18b20.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  num_dq          1    wreg     unsigned char 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  num_dq          1   15[COMRAM] unsigned char 
  1982 ;;  temp_rom        8    7[COMRAM] unsigned char [8]
  1983 ;;  i               1   16[COMRAM] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1
  1993 ;;      Params:         0       0       0
  1994 ;;      Locals:        10       0       0
  1995 ;;      Temps:          0       0       0
  1996 ;;      Totals:        10       0       0
  1997 ;;Total ram usage:       10 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    3
  2000 ;; This function calls:
  2001 ;;		_Delay_ms
  2002 ;;		_ds18b20_crc8
  2003 ;;		_ow_reset
  2004 ;;		_read_byte
  2005 ;;		_write_byte
  2006 ;;		_write_eep
  2007 ;; This function is called by:
  2008 ;;		_main
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text9
  2013  0008AA                     __ptext9:
  2014                           	callstack 0
  2015  0008AA                     _ds18b20_readrom:
  2016                           	callstack 27
  2017                           
  2018                           ;incstack = 0
  2019                           ;ds18b20_readrom@num_dq stored from wreg
  2020  0008AA  6E48               	movwf	ds18b20_readrom@num_dq^0,c
  2021                           
  2022                           ;ds18b20.c: 167: uint8_t i;;ds18b20.c: 168: uint8_t temp_rom[8];;ds18b20.c: 170: if (!ow
      +                          _reset())
  2023  0008AC  EC8A  F005         	call	_ow_reset	;wreg free
  2024  0008B0  0900               	iorlw	0
  2025  0008B2  E10C               	bnz	u900
  2026                           
  2027                           ;ds18b20.c: 171: {;ds18b20.c: 172: write_byte(0x33);
  2028  0008B4  0E33               	movlw	51
  2029  0008B6  EC55  F005         	call	_write_byte
  2030                           
  2031                           ;ds18b20.c: 173: for (i = 0; i < 8; i++) {
  2032  0008BA  6A49               	clrf	ds18b20_readrom@i^0,c
  2033  0008BC                     l2141:
  2034                           
  2035                           ;ds18b20.c: 174: temp_rom[i] = read_byte();
  2036  0008BC  D824               	call	PL34	;call to abstracted procedure
  2037  0008BE  EC3A  F005         	call	_read_byte	;wreg free
  2038  0008C2  6EDF               	movwf	indf2,c
  2039  0008C4  2A49               	incf	ds18b20_readrom@i^0,f,c
  2040  0008C6  0E07               	movlw	7
  2041  0008C8  6449               	cpfsgt	ds18b20_readrom@i^0,c
  2042  0008CA  D7F8               	goto	l2141
  2043  0008CC                     u900:
  2044                           
  2045                           ;ds18b20.c: 175: };ds18b20.c: 176: };ds18b20.c: 177: if (!(ds18b20_crc8(temp_rom, 8))) {
  2046  0008CC  0E40               	movlw	low ds18b20_readrom@temp_rom
  2047  0008CE  6E39               	movwf	ds18b20_crc8@data_in^0,c
  2048  0008D0  0E08               	movlw	8
  2049  0008D2  6E3A               	movwf	ds18b20_crc8@num_bytes^0,c
  2050  0008D4  ECB1  F004         	call	_ds18b20_crc8	;wreg free
  2051  0008D8  0900               	iorlw	0
  2052  0008DA  A4D8               	btfss	status,2,c
  2053  0008DC  0012               	return	
  2054                           
  2055                           ;ds18b20.c: 178: for (i = 0; i < 8; i++) {
  2056  0008DE  6A49               	clrf	ds18b20_readrom@i^0,c
  2057  0008E0                     l2155:
  2058                           
  2059                           ;ds18b20.c: 179: write_eep(((num_dq - 1)*8) + i, temp_rom[i]);
  2060  0008E0  D812               	call	PL34	;call to abstracted procedure
  2061  0008E2  50DF               	movf	indf2,w,c
  2062  0008E4  6E39               	movwf	write_eep@data^0,c
  2063  0008E6  5048               	movf	ds18b20_readrom@num_dq^0,w,c
  2064  0008E8  0D08               	mullw	8
  2065  0008EA  50F3               	movf	243,w,c
  2066  0008EC  2449               	addwf	ds18b20_readrom@i^0,w,c
  2067  0008EE  0FF8               	addlw	248
  2068  0008F0  ECB4  F005         	call	_write_eep
  2069  0008F4  2A49               	incf	ds18b20_readrom@i^0,f,c
  2070  0008F6  0E07               	movlw	7
  2071  0008F8  6449               	cpfsgt	ds18b20_readrom@i^0,c
  2072  0008FA  D7F2               	goto	l2155
  2073                           
  2074                           ;ds18b20.c: 180: };ds18b20.c: 181: Delay_ms(10);
  2075  0008FC  6A3A               	clrf	(Delay_ms@delay+1)^0,c
  2076  0008FE  0E0A               	movlw	10
  2077  000900  6E39               	movwf	Delay_ms@delay^0,c
  2078  000902  EFC6  F005         	goto	_Delay_ms	;wreg free
  2079  000906                     __end_of_ds18b20_readrom:
  2080                           	callstack 0
  2081  000906                     PL34:
  2082                           	callstack 27
  2083  000906  5049               	movf	ds18b20_readrom@i^0,w,c
  2084  000908  0F40               	addlw	low ds18b20_readrom@temp_rom
  2085  00090A  6ED9               	movwf	fsr2l,c
  2086  00090C  6ADA               	clrf	fsr2h,c
  2087  00090E  0012               	return	
  2088  000910                     __end_ofPL34:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _write_eep *****************
  2092 ;; Defined at:
  2093 ;;		line 5 in file "eeprom.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  address         1    wreg     unsigned char 
  2096 ;;  data            1    0[COMRAM] unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  address         1    1[COMRAM] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1
  2108 ;;      Params:         1       0       0
  2109 ;;      Locals:         1       0       0
  2110 ;;      Temps:          0       0       0
  2111 ;;      Totals:         2       0       0
  2112 ;;Total ram usage:        2 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    1
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_ds18b20_readrom
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text10
  2123  000B68                     __ptext10:
  2124                           	callstack 0
  2125  000B68                     _write_eep:
  2126                           	callstack 28
  2127                           
  2128                           ;incstack = 0
  2129                           ;write_eep@address stored from wreg
  2130  000B68  6E3A               	movwf	write_eep@address^0,c
  2131  000B6A                     
  2132                           ;eeprom.c: 8: {}
  2133  000B6A  B2A6               	btfsc	166,1,c	;volsfr
  2134  000B6C  D7FE               	goto	l1911
  2135                           
  2136                           ;eeprom.c: 11: EEADR = address;
  2137  000B6E  C03A  FFA9         	movff	write_eep@address,4009	;volatile
  2138                           
  2139                           ;eeprom.c: 12: EEDATA = data;
  2140  000B72  C039  FFA8         	movff	write_eep@data,4008	;volatile
  2141                           
  2142                           ;eeprom.c: 13: EECON1bits.EEPGD = 0;
  2143  000B76  9EA6               	bcf	166,7,c	;volsfr
  2144                           
  2145                           ;eeprom.c: 14: EECON1bits.CFGS = 0;
  2146  000B78  9CA6               	bcf	166,6,c	;volsfr
  2147                           
  2148                           ;eeprom.c: 15: EECON1bits.WREN = 1;
  2149  000B7A  84A6               	bsf	166,2,c	;volsfr
  2150                           
  2151                           ;eeprom.c: 16: INTCONbits.GIE = 0;
  2152  000B7C  9EF2               	bcf	242,7,c	;volatile
  2153                           
  2154                           ;eeprom.c: 18: EECON2 = 0x55;
  2155  000B7E  0E55               	movlw	85
  2156  000B80  6EA7               	movwf	167,c	;volsfr
  2157                           
  2158                           ;eeprom.c: 19: EECON2 = 0xAA;
  2159  000B82  0EAA               	movlw	170
  2160  000B84  6EA7               	movwf	167,c	;volsfr
  2161                           
  2162                           ;eeprom.c: 20: EECON1bits.WR = 1;
  2163  000B86  82A6               	bsf	166,1,c	;volsfr
  2164                           
  2165                           ;eeprom.c: 22: INTCONbits.GIE = 1;
  2166  000B88  8EF2               	bsf	242,7,c	;volatile
  2167  000B8A  0CAA               	retlw	170	;funcret
  2168  000B8C                     __end_of_write_eep:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _ds18b20_crc8 *****************
  2172 ;; Defined at:
  2173 ;;		line 213 in file "ds18b20.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  data_in         1    0[COMRAM] PTR unsigned char 
  2176 ;;		 -> ds18b20_readrom@temp_rom(8), 
  2177 ;;  num_bytes       1    1[COMRAM] unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  crc             1    6[COMRAM] unsigned char 
  2180 ;;  loop_count      1    5[COMRAM] unsigned char 
  2181 ;;  feedback_bit    1    4[COMRAM] unsigned char 
  2182 ;;  data            1    3[COMRAM] unsigned char 
  2183 ;;  bit_counter     1    2[COMRAM] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      unsigned char 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1
  2193 ;;      Params:         2       0       0
  2194 ;;      Locals:         5       0       0
  2195 ;;      Temps:          0       0       0
  2196 ;;      Totals:         7       0       0
  2197 ;;Total ram usage:        7 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_ds18b20_readrom
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text11
  2208  000962                     __ptext11:
  2209                           	callstack 0
  2210  000962                     _ds18b20_crc8:
  2211                           	callstack 28
  2212                           
  2213                           ;ds18b20.c: 214: uint8_t crc;;ds18b20.c: 215: uint8_t loop_count;;ds18b20.c: 216: uint8_
      +                          t bit_counter;;ds18b20.c: 217: uint8_t data;;ds18b20.c: 218: uint8_t feedback_bit;;ds18b
      +                          20.c: 220: crc = 0x00;
  2214                           
  2215                           ;incstack = 0
  2216  000962  6A3F               	clrf	ds18b20_crc8@crc^0,c
  2217                           
  2218                           ;ds18b20.c: 222: for (loop_count = 0; loop_count != num_bytes; loop_count++) {
  2219  000964  6A3E               	clrf	ds18b20_crc8@loop_count^0,c
  2220  000966  D01D               	goto	l1905
  2221  000968                     l1885:
  2222                           
  2223                           ;ds18b20.c: 223: data = data_in[loop_count];
  2224  000968  5039               	movf	ds18b20_crc8@data_in^0,w,c
  2225  00096A  243E               	addwf	ds18b20_crc8@loop_count^0,w,c
  2226  00096C  6ED9               	movwf	fsr2l,c
  2227  00096E  6ADA               	clrf	fsr2h,c
  2228  000970  50DF               	movf	indf2,w,c
  2229  000972  6E3C               	movwf	ds18b20_crc8@data^0,c
  2230                           
  2231                           ;ds18b20.c: 225: bit_counter = 8;
  2232  000974  0E08               	movlw	8
  2233  000976  6E3B               	movwf	ds18b20_crc8@bit_counter^0,c
  2234  000978                     l1889:
  2235                           
  2236                           ;ds18b20.c: 227: feedback_bit = (crc ^ data) & 0x01;
  2237  000978  503F               	movf	ds18b20_crc8@crc^0,w,c
  2238  00097A  183C               	xorwf	ds18b20_crc8@data^0,w,c
  2239  00097C  0B01               	andlw	1
  2240  00097E  6E3D               	movwf	ds18b20_crc8@feedback_bit^0,c
  2241                           
  2242                           ;ds18b20.c: 229: if (feedback_bit == 0x01) {
  2243  000980  043D               	decf	ds18b20_crc8@feedback_bit^0,w,c
  2244  000982  E102               	bnz	l203
  2245                           
  2246                           ;ds18b20.c: 230: crc = crc ^ 0x18;
  2247  000984  0E18               	movlw	24
  2248  000986  1A3F               	xorwf	ds18b20_crc8@crc^0,f,c
  2249  000988                     l203:
  2250                           
  2251                           ;ds18b20.c: 231: };ds18b20.c: 232: crc = (crc >> 1) & 0x7F;
  2252  000988  90D8               	bcf	status,0,c
  2253  00098A  303F               	rrcf	ds18b20_crc8@crc^0,w,c
  2254  00098C  0B7F               	andlw	127
  2255  00098E  6E3F               	movwf	ds18b20_crc8@crc^0,c
  2256                           
  2257                           ;ds18b20.c: 233: if (feedback_bit == 0x01) {
  2258  000990  043D               	decf	ds18b20_crc8@feedback_bit^0,w,c
  2259  000992  E101               	bnz	l1897
  2260                           
  2261                           ;ds18b20.c: 234: crc = crc | 0x80;
  2262  000994  8E3F               	bsf	ds18b20_crc8@crc^0,7,c
  2263  000996                     l1897:
  2264                           
  2265                           ;ds18b20.c: 235: };ds18b20.c: 237: data = data >> 1;
  2266  000996  90D8               	bcf	status,0,c
  2267  000998  323C               	rrcf	ds18b20_crc8@data^0,f,c
  2268                           
  2269                           ;ds18b20.c: 238: bit_counter--;
  2270  00099A  063B               	decf	ds18b20_crc8@bit_counter^0,f,c
  2271                           
  2272                           ;ds18b20.c: 240: } while (bit_counter > 0);
  2273  00099C  503B               	movf	ds18b20_crc8@bit_counter^0,w,c
  2274  00099E  E1EC               	bnz	l1889
  2275  0009A0  2A3E               	incf	ds18b20_crc8@loop_count^0,f,c
  2276  0009A2                     l1905:
  2277  0009A2  503A               	movf	ds18b20_crc8@num_bytes^0,w,c
  2278  0009A4  183E               	xorwf	ds18b20_crc8@loop_count^0,w,c
  2279  0009A6  E1E0               	bnz	l1885
  2280                           
  2281                           ;ds18b20.c: 241: };ds18b20.c: 243: return crc;
  2282  0009A8  503F               	movf	ds18b20_crc8@crc^0,w,c
  2283  0009AA  0012               	return		;funcret
  2284  0009AC                     __end_of_ds18b20_crc8:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _Delay_ms *****************
  2288 ;; Defined at:
  2289 ;;		line 225 in file "main.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  delay           2    0[COMRAM] unsigned int 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  i               2    3[COMRAM] unsigned int 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1
  2303 ;;      Params:         2       0       0
  2304 ;;      Locals:         2       0       0
  2305 ;;      Temps:          1       0       0
  2306 ;;      Totals:         5       0       0
  2307 ;;Total ram usage:        5 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    1
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;;		_ds18b20_readrom
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text12
  2319  000B8C                     __ptext12:
  2320                           	callstack 0
  2321  000B8C                     _Delay_ms:
  2322                           	callstack 28
  2323                           
  2324                           ;main.c: 226: for (uint16_t i = 0; i <= delay; i++)
  2325                           
  2326                           ;incstack = 0
  2327  000B8C  6A3C               	clrf	Delay_ms@i^0,c
  2328  000B8E  6A3D               	clrf	(Delay_ms@i+1)^0,c
  2329  000B90  D009               	goto	l126
  2330  000B92                     l1851:
  2331                           
  2332                           ;main.c: 227: _delay((unsigned long)((1)*(8000000/4000.0)));
  2333  000B92  0E03               	movlw	3
  2334  000B94  6E3B               	movwf	??_Delay_ms^0,c
  2335  000B96  0E98               	movlw	152
  2336  000B98                     u1277:
  2337  000B98  2EE8               	decfsz	wreg,f,c
  2338  000B9A  D7FE               	bra	u1277
  2339  000B9C  2E3B               	decfsz	??_Delay_ms^0,f,c
  2340  000B9E  D7FC               	bra	u1277
  2341  000BA0  4A3C               	infsnz	Delay_ms@i^0,f,c
  2342  000BA2  2A3D               	incf	(Delay_ms@i+1)^0,f,c
  2343  000BA4                     l126:
  2344  000BA4  503C               	movf	Delay_ms@i^0,w,c
  2345  000BA6  5C39               	subwf	Delay_ms@delay^0,w,c
  2346  000BA8  503D               	movf	(Delay_ms@i+1)^0,w,c
  2347  000BAA  583A               	subwfb	(Delay_ms@delay+1)^0,w,c
  2348  000BAC  E2F2               	bc	l1851
  2349  000BAE  0012               	return		;funcret
  2350  000BB0                     __end_of_Delay_ms:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function _ds18b20_readTemp *****************
  2354 ;; Defined at:
  2355 ;;		line 117 in file "ds18b20.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  time_flag       1    6[COMRAM] PTR unsigned char 
  2358 ;;		 -> time_flag(1), 
  2359 ;;  timer_val       1    7[COMRAM] PTR unsigned char 
  2360 ;;		 -> timer_val(1), 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  j               1   12[COMRAM] unsigned char 
  2363 ;;  temp            2   10[COMRAM] unsigned int 
  2364 ;;  i               1   13[COMRAM] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      unsigned char 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1
  2374 ;;      Params:         2       0       0
  2375 ;;      Locals:         4       0       0
  2376 ;;      Temps:          2       0       0
  2377 ;;      Totals:         8       0       0
  2378 ;;Total ram usage:        8 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    3
  2381 ;; This function calls:
  2382 ;;		_ow_reset
  2383 ;;		_read_byte
  2384 ;;		_write_byte
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text13
  2391  0005E2                     __ptext13:
  2392                           	callstack 0
  2393  0005E2                     _ds18b20_readTemp:
  2394                           	callstack 27
  2395                           
  2396                           ;ds18b20.c: 120: uint8_t i;;ds18b20.c: 122: switch (*time_flag) {
  2397                           
  2398                           ;incstack = 0
  2399  0005E2  D053               	goto	l2105
  2400  0005E4                     l2033:
  2401                           
  2402                           ;ds18b20.c: 124: if (!ow_reset())
  2403  0005E4  EC8A  F005         	call	_ow_reset	;wreg free
  2404  0005E8  0900               	iorlw	0
  2405  0005EA  A4D8               	btfss	status,2,c
  2406  0005EC  0012               	return	
  2407                           
  2408                           ;ds18b20.c: 125: {;ds18b20.c: 126: write_byte(0xCC);
  2409  0005EE  0ECC               	movlw	204
  2410  0005F0  EC55  F005         	call	_write_byte
  2411                           
  2412                           ;ds18b20.c: 127: write_byte(0x44);
  2413  0005F4  0E44               	movlw	68
  2414  0005F6  EC55  F005         	call	_write_byte
  2415                           
  2416                           ;ds18b20.c: 128: *timer_val = 0;
  2417  0005FA  5040               	movf	ds18b20_readTemp@timer_val^0,w,c
  2418  0005FC  6ED9               	movwf	fsr2l,c
  2419  0005FE  6ADA               	clrf	fsr2h,c
  2420  000600  6ADF               	clrf	indf2,c
  2421                           
  2422                           ;ds18b20.c: 129: *time_flag = 2;
  2423  000602  503F               	movf	ds18b20_readTemp@time_flag^0,w,c
  2424  000604  6ED9               	movwf	fsr2l,c
  2425  000606  6ADA               	clrf	fsr2h,c
  2426  000608  0E02               	movlw	2
  2427  00060A  6EDF               	movwf	indf2,c
  2428                           
  2429                           ;ds18b20.c: 130: T1CONbits.TMR1ON = 1;
  2430  00060C  80CD               	bsf	205,0,c	;volatile
  2431                           
  2432                           ;ds18b20.c: 132: return 0;
  2433  00060E  0C00               	retlw	0
  2434  000610                     l177:
  2435                           
  2436                           ;ds18b20.c: 136: for (uint8_t j = 0; j < 2; j++) {
  2437  000610  6A45               	clrf	ds18b20_readTemp@j^0,c
  2438  000612                     l2051:
  2439                           
  2440                           ;ds18b20.c: 137: ow_reset();
  2441  000612  EC8A  F005         	call	_ow_reset	;wreg free
  2442                           
  2443                           ;ds18b20.c: 138: write_byte(0x55);
  2444  000616  0E55               	movlw	85
  2445  000618  EC55  F005         	call	_write_byte
  2446                           
  2447                           ;ds18b20.c: 139: for (i = 0; i < 8; i++) {
  2448  00061C  6A46               	clrf	ds18b20_readTemp@i^0,c
  2449  00061E                     l2061:
  2450                           
  2451                           ;ds18b20.c: 140: write_byte(rom_dq[j][i]);
  2452  00061E  5045               	movf	ds18b20_readTemp@j^0,w,c
  2453  000620  0D08               	mullw	8
  2454  000622  50F3               	movf	243,w,c
  2455  000624  0F01               	addlw	low _rom_dq
  2456  000626  2446               	addwf	ds18b20_readTemp@i^0,w,c
  2457  000628  6ED9               	movwf	fsr2l,c
  2458  00062A  6ADA               	clrf	fsr2h,c
  2459  00062C  50DF               	movf	indf2,w,c
  2460  00062E  EC55  F005         	call	_write_byte
  2461  000632  2A46               	incf	ds18b20_readTemp@i^0,f,c
  2462  000634  0E07               	movlw	7
  2463  000636  6446               	cpfsgt	ds18b20_readTemp@i^0,c
  2464  000638  D7F2               	goto	l2061
  2465                           
  2466                           ;ds18b20.c: 141: };ds18b20.c: 142: write_byte(0xBE);
  2467  00063A  0EBE               	movlw	190
  2468  00063C  EC55  F005         	call	_write_byte
  2469                           
  2470                           ;ds18b20.c: 143: for (i = 0; i < 2; i++)
  2471  000640  6A46               	clrf	ds18b20_readTemp@i^0,c
  2472  000642                     l2075:
  2473                           
  2474                           ;ds18b20.c: 144: {;ds18b20.c: 145: scratch[i] = read_byte();
  2475  000642  5046               	movf	ds18b20_readTemp@i^0,w,c
  2476  000644  0F11               	addlw	low _scratch
  2477  000646  6ED9               	movwf	fsr2l,c
  2478  000648  6ADA               	clrf	fsr2h,c
  2479  00064A  EC3A  F005         	call	_read_byte	;wreg free
  2480  00064E  6EDF               	movwf	indf2,c
  2481  000650  2A46               	incf	ds18b20_readTemp@i^0,f,c
  2482  000652  0E01               	movlw	1
  2483  000654  6446               	cpfsgt	ds18b20_readTemp@i^0,c
  2484  000656  D7F5               	goto	l2075
  2485                           
  2486                           ;ds18b20.c: 146: };ds18b20.c: 148: temp = (((uint16_t) scratch[1]) << 8) | ((uint16_t) s
      +                          cratch[0]);
  2487  000658  5012               	movf	(_scratch+1)^0,w,c
  2488  00065A  6E41               	movwf	??_ds18b20_readTemp^0,c
  2489  00065C  5011               	movf	_scratch^0,w,c
  2490  00065E  6E43               	movwf	ds18b20_readTemp@temp^0,c
  2491  000660  C041  F044         	movff	??_ds18b20_readTemp,ds18b20_readTemp@temp+1
  2492                           
  2493                           ;ds18b20.c: 149: temp_ready[j] = temp;
  2494  000664  5045               	movf	ds18b20_readTemp@j^0,w,c
  2495  000666  0D02               	mullw	2
  2496  000668  50F3               	movf	243,w,c
  2497  00066A  0F1A               	addlw	low _temp_ready
  2498  00066C  6ED9               	movwf	fsr2l,c
  2499  00066E  6ADA               	clrf	fsr2h,c
  2500  000670  C043  FFDE         	movff	ds18b20_readTemp@temp,postinc2
  2501  000674  C044  FFDD         	movff	ds18b20_readTemp@temp+1,postdec2
  2502  000678  2A45               	incf	ds18b20_readTemp@j^0,f,c
  2503  00067A  0E01               	movlw	1
  2504  00067C  6445               	cpfsgt	ds18b20_readTemp@j^0,c
  2505  00067E  D7C9               	goto	l2051
  2506                           
  2507                           ;ds18b20.c: 150: };ds18b20.c: 151: *time_flag = 0;
  2508  000680  503F               	movf	ds18b20_readTemp@time_flag^0,w,c
  2509  000682  6ED9               	movwf	fsr2l,c
  2510  000684  6ADA               	clrf	fsr2h,c
  2511  000686  6ADF               	clrf	indf2,c
  2512                           
  2513                           ;ds18b20.c: 152: return 1;
  2514  000688  0C01               	retlw	1
  2515  00068A                     l2105:
  2516  00068A  503F               	movf	ds18b20_readTemp@time_flag^0,w,c
  2517  00068C  6ED9               	movwf	fsr2l,c
  2518  00068E  6ADA               	clrf	fsr2h,c
  2519  000690  50DF               	movf	indf2,w,c
  2520                           
  2521                           ; Switch size 1, requested type "space"
  2522                           ; Number of cases is 3, Range of values is 0 to 2
  2523                           ; switch strategies available:
  2524                           ; Name         Instructions Cycles
  2525                           ; simple_byte           10     6 (average)
  2526                           ;	Chosen strategy is simple_byte
  2527  000692  E0A8               	bz	l2033
  2528  000694  0A01               	xorlw	1	; case 1
  2529  000696  E0BC               	bz	l177
  2530  000698  0A03               	xorlw	3	; case 2
  2531  00069A  B4D8               	btfsc	status,2,c
  2532  00069C  0C00               	retlw	0
  2533  00069E  0012               	return		;funcret
  2534  0006A0                     __end_of_ds18b20_readTemp:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _read_byte *****************
  2538 ;; Defined at:
  2539 ;;		line 50 in file "onewire.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  i               1    3[COMRAM] unsigned char 
  2544 ;;  val             1    2[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      unsigned char 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1
  2554 ;;      Params:         0       0       0
  2555 ;;      Locals:         2       0       0
  2556 ;;      Temps:          2       0       0
  2557 ;;      Totals:         4       0       0
  2558 ;;Total ram usage:        4 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    2
  2561 ;; This function calls:
  2562 ;;		_read_bit
  2563 ;; This function is called by:
  2564 ;;		_ds18b20_readTemp
  2565 ;;		_ds18b20_readrom
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text14
  2570  000A74                     __ptext14:
  2571                           	callstack 0
  2572  000A74                     _read_byte:
  2573                           	callstack 27
  2574                           
  2575                           ;onewire.c: 52: uint8_t i;;onewire.c: 53: uint8_t val = 0;
  2576                           
  2577                           ;incstack = 0
  2578  000A74  6A3B               	clrf	read_byte@val^0,c
  2579                           
  2580                           ;onewire.c: 55: for(i=0;i<8;i++)
  2581  000A76  6A3C               	clrf	read_byte@i^0,c
  2582  000A78                     l1207:
  2583                           
  2584                           ;onewire.c: 56: {;onewire.c: 57: if(read_bit()) val |= (0x01 << i);
  2585  000A78  EC02  F006         	call	_read_bit	;wreg free
  2586  000A7C  0900               	iorlw	0
  2587  000A7E  E00C               	bz	l1211
  2588  000A80  C03C  F039         	movff	read_byte@i,??_read_byte
  2589  000A84  0E01               	movlw	1
  2590  000A86  6E3A               	movwf	(??_read_byte+1)^0,c
  2591  000A88  2A39               	incf	??_read_byte^0,f,c
  2592  000A8A  D002               	goto	u214
  2593  000A8C                     u215:
  2594  000A8C  90D8               	bcf	status,0,c
  2595  000A8E  363A               	rlcf	(??_read_byte+1)^0,f,c
  2596  000A90                     u214:
  2597  000A90  2E39               	decfsz	??_read_byte^0,f,c
  2598  000A92  D7FC               	goto	u215
  2599  000A94  503A               	movf	(??_read_byte+1)^0,w,c
  2600  000A96  123B               	iorwf	read_byte@val^0,f,c
  2601  000A98                     l1211:
  2602                           
  2603                           ;onewire.c: 58: _delay((unsigned long)((120)*(8000000/4000000.0)));
  2604  000A98  0E50               	movlw	80
  2605  000A9A                     u1287:
  2606  000A9A  2EE8               	decfsz	wreg,f,c
  2607  000A9C  D7FE               	bra	u1287
  2608  000A9E  2A3C               	incf	read_byte@i^0,f,c
  2609  000AA0  0E07               	movlw	7
  2610  000AA2  643C               	cpfsgt	read_byte@i^0,c
  2611  000AA4  D7E9               	goto	l1207
  2612                           
  2613                           ;onewire.c: 59: };onewire.c: 61: return val;
  2614  000AA6  503B               	movf	read_byte@val^0,w,c
  2615  000AA8  0012               	return		;funcret
  2616  000AAA                     __end_of_read_byte:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _read_bit *****************
  2620 ;; Defined at:
  2621 ;;		line 22 in file "onewire.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      unsigned char 
  2628 ;; Registers used:
  2629 ;;		wreg
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1
  2635 ;;      Params:         0       0       0
  2636 ;;      Locals:         0       0       0
  2637 ;;      Temps:          0       0       0
  2638 ;;      Totals:         0       0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_read_byte
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text15
  2650  000C04                     __ptext15:
  2651                           	callstack 0
  2652  000C04                     _read_bit:
  2653                           	callstack 27
  2654                           
  2655                           ;onewire.c: 24: PORTAbits.RA6 = 0;
  2656                           
  2657                           ;incstack = 0
  2658  000C04  9C80               	bcf	128,6,c	;volatile
  2659                           
  2660                           ;onewire.c: 25: TRISAbits.TRISA6 = 0;
  2661  000C06  9C92               	bcf	146,6,c	;volatile
  2662                           
  2663                           ;onewire.c: 26: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2664  000C08  D000               	nop2		;2 cycle nop
  2665                           
  2666                           ;onewire.c: 27: PORTAbits.RA6 = 1;
  2667  000C0A  8C80               	bsf	128,6,c	;volatile
  2668                           
  2669                           ;onewire.c: 28: TRISAbits.TRISA6 = 1;
  2670  000C0C  8C92               	bsf	146,6,c	;volatile
  2671                           
  2672                           ;onewire.c: 29: _delay((unsigned long)((6)*(8000000/4000000.0)));
  2673  000C0E  0E04               	movlw	4
  2674  000C10                     u1297:
  2675  000C10  2EE8               	decfsz	wreg,f,c
  2676  000C12  D7FE               	bra	u1297
  2677                           
  2678                           ;onewire.c: 30: return(PORTAbits.RA6);
  2679  000C14  BC80               	btfsc	128,6,c	;volatile
  2680  000C16  0C01               	retlw	1
  2681  000C18  0C00               	retlw	0	;funcret
  2682  000C1A                     __end_of_read_bit:
  2683                           	callstack 0
  2684                           
  2685 ;; *************** function _ds18b20_get_temp *****************
  2686 ;; Defined at:
  2687 ;;		line 191 in file "ds18b20.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  num_dq          1    wreg     unsigned char 
  2690 ;;  minus           1    0[COMRAM] PTR unsigned char 
  2691 ;;		 -> minus_2(1), minus_1(1), 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  num_dq          1    3[COMRAM] unsigned char 
  2694 ;;  temp            2    5[COMRAM] unsigned int 
  2695 ;;  tmp             1    4[COMRAM] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  2    0[COMRAM] unsigned int 
  2698 ;; Registers used:
  2699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1
  2705 ;;      Params:         2       0       0
  2706 ;;      Locals:         4       0       0
  2707 ;;      Temps:          1       0       0
  2708 ;;      Totals:         7       0       0
  2709 ;;Total ram usage:        7 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text16
  2720  00073C                     __ptext16:
  2721                           	callstack 0
  2722  00073C                     _ds18b20_get_temp:
  2723                           	callstack 29
  2724                           
  2725                           ;incstack = 0
  2726                           ;ds18b20_get_temp@num_dq stored from wreg
  2727  00073C  6E3C               	movwf	ds18b20_get_temp@num_dq^0,c
  2728                           
  2729                           ;ds18b20.c: 192: uint16_t temp = temp_ready[num_dq-1];
  2730  00073E  503C               	movf	ds18b20_get_temp@num_dq^0,w,c
  2731  000740  0D02               	mullw	2
  2732  000742  50F3               	movf	243,w,c
  2733  000744  0F18               	addlw	low (_temp_ready+254)
  2734  000746  6ED9               	movwf	fsr2l,c
  2735  000748  6ADA               	clrf	fsr2h,c
  2736  00074A  CFDE F03E          	movff	postinc2,ds18b20_get_temp@temp
  2737  00074E  CFDD F03F          	movff	postdec2,ds18b20_get_temp@temp+1
  2738                           
  2739                           ;ds18b20.c: 193: uint8_t tmp;;ds18b20.c: 194: *minus = '+';
  2740  000752  5039               	movf	ds18b20_get_temp@minus^0,w,c
  2741  000754  6ED9               	movwf	fsr2l,c
  2742  000756  6ADA               	clrf	fsr2h,c
  2743  000758  0E2B               	movlw	43
  2744  00075A  6EDF               	movwf	indf2,c
  2745                           
  2746                           ;ds18b20.c: 196: if (temp & 0x8000) {
  2747  00075C  AE3F               	btfss	(ds18b20_get_temp@temp+1)^0,7,c
  2748  00075E  D009               	goto	l2117
  2749                           
  2750                           ;ds18b20.c: 197: temp = -temp;
  2751  000760  6C3E               	negf	ds18b20_get_temp@temp^0,c
  2752  000762  1E3F               	comf	(ds18b20_get_temp@temp+1)^0,f,c
  2753  000764  B0D8               	btfsc	status,0,c
  2754  000766  2A3F               	incf	(ds18b20_get_temp@temp+1)^0,f,c
  2755                           
  2756                           ;ds18b20.c: 198: *minus = '-';
  2757  000768  5039               	movf	ds18b20_get_temp@minus^0,w,c
  2758  00076A  6ED9               	movwf	fsr2l,c
  2759  00076C  6ADA               	clrf	fsr2h,c
  2760  00076E  0E2D               	movlw	45
  2761  000770  6EDF               	movwf	indf2,c
  2762  000772                     l2117:
  2763                           
  2764                           ;ds18b20.c: 199: };ds18b20.c: 201: tmp = temp & 0x0f;
  2765  000772  503E               	movf	ds18b20_get_temp@temp^0,w,c
  2766  000774  0B0F               	andlw	15
  2767  000776  6E3D               	movwf	ds18b20_get_temp@tmp^0,c
  2768                           
  2769                           ;ds18b20.c: 202: tmp = fract[tmp];
  2770  000778  503D               	movf	ds18b20_get_temp@tmp^0,w,c
  2771  00077A  0F01               	addlw	low _fract
  2772  00077C  6E3B               	movwf	??_ds18b20_get_temp^0,c
  2773  00077E  C03B  FFF6         	movff	??_ds18b20_get_temp,tblptrl
  2774  000782                     	if	1	;There is more than 1 active tblptr byte
  2775  000782  0E02               	movlw	high __smallconst
  2776  000784  6EF7               	movwf	tblptrh,c
  2777  000786                     	endif
  2778  000786                     	if	0	;tblptru may be non-zero
  2779  000786                     	endif
  2780  000786                     	if	0	;tblptru may be non-zero
  2781  000786                     	endif
  2782  000786  0008               	tblrd		*
  2783  000788  CFF5 F03D          	movff	tablat,ds18b20_get_temp@tmp
  2784                           
  2785                           ;ds18b20.c: 203: temp = temp >> 4;
  2786  00078C  3A3E               	swapf	ds18b20_get_temp@temp^0,f,c
  2787  00078E  3A3F               	swapf	(ds18b20_get_temp@temp+1)^0,f,c
  2788  000790  0E0F               	movlw	15
  2789  000792  163E               	andwf	ds18b20_get_temp@temp^0,f,c
  2790  000794  503F               	movf	(ds18b20_get_temp@temp+1)^0,w,c
  2791  000796  0BF0               	andlw	240
  2792  000798  123E               	iorwf	ds18b20_get_temp@temp^0,f,c
  2793  00079A  0E0F               	movlw	15
  2794  00079C  163F               	andwf	(ds18b20_get_temp@temp+1)^0,f,c
  2795                           
  2796                           ;ds18b20.c: 204: temp = (temp & 0x00ff) * 10;
  2797  00079E  503E               	movf	ds18b20_get_temp@temp^0,w,c
  2798  0007A0  0D0A               	mullw	10
  2799  0007A2  CFF3 F03E          	movff	prodl,ds18b20_get_temp@temp
  2800  0007A6  CFF4 F03F          	movff	prodh,ds18b20_get_temp@temp+1
  2801                           
  2802                           ;ds18b20.c: 205: temp = temp + tmp;
  2803  0007AA  503D               	movf	ds18b20_get_temp@tmp^0,w,c
  2804  0007AC  263E               	addwf	ds18b20_get_temp@temp^0,f,c
  2805  0007AE  0E00               	movlw	0
  2806  0007B0  223F               	addwfc	(ds18b20_get_temp@temp+1)^0,f,c
  2807                           
  2808                           ;ds18b20.c: 207: return temp;
  2809  0007B2  C03E  F039         	movff	ds18b20_get_temp@temp,?_ds18b20_get_temp
  2810  0007B6  C03F  F03A         	movff	ds18b20_get_temp@temp+1,?_ds18b20_get_temp+1
  2811  0007BA  0C00               	retlw	0	;funcret
  2812  0007BC                     __end_of_ds18b20_get_temp:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function ___lwmod *****************
  2816 ;; Defined at:
  2817 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  dividend        2    7[COMRAM] unsigned int 
  2820 ;;  divisor         2    9[COMRAM] unsigned int 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  counter         1   11[COMRAM] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  2    7[COMRAM] unsigned int 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1
  2832 ;;      Params:         4       0       0
  2833 ;;      Locals:         1       0       0
  2834 ;;      Temps:          0       0       0
  2835 ;;      Totals:         5       0       0
  2836 ;;Total ram usage:        5 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    1
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text17
  2847  000A36                     __ptext17:
  2848                           	callstack 0
  2849  000A36                     ___lwmod:
  2850                           	callstack 29
  2851                           
  2852                           ;incstack = 0
  2853  000A36  5042               	movf	___lwmod@divisor^0,w,c
  2854  000A38  1043               	iorwf	(___lwmod@divisor+1)^0,w,c
  2855  000A3A  E017               	bz	l831
  2856  000A3C  0E01               	movlw	1
  2857  000A3E  6E44               	movwf	___lwmod@counter^0,c
  2858  000A40  D004               	goto	l2193
  2859  000A42                     l2191:
  2860  000A42  90D8               	bcf	status,0,c
  2861  000A44  3642               	rlcf	___lwmod@divisor^0,f,c
  2862  000A46  3643               	rlcf	(___lwmod@divisor+1)^0,f,c
  2863  000A48  2A44               	incf	___lwmod@counter^0,f,c
  2864  000A4A                     l2193:
  2865  000A4A  AE43               	btfss	(___lwmod@divisor+1)^0,7,c
  2866  000A4C  D7FA               	goto	l2191
  2867  000A4E                     u970:
  2868  000A4E  5042               	movf	___lwmod@divisor^0,w,c
  2869  000A50  5C40               	subwf	___lwmod@dividend^0,w,c
  2870  000A52  5043               	movf	(___lwmod@divisor+1)^0,w,c
  2871  000A54  5841               	subwfb	(___lwmod@dividend+1)^0,w,c
  2872  000A56  E304               	bnc	l2199
  2873  000A58  5042               	movf	___lwmod@divisor^0,w,c
  2874  000A5A  5E40               	subwf	___lwmod@dividend^0,f,c
  2875  000A5C  5043               	movf	(___lwmod@divisor+1)^0,w,c
  2876  000A5E  5A41               	subwfb	(___lwmod@dividend+1)^0,f,c
  2877  000A60                     l2199:
  2878  000A60  90D8               	bcf	status,0,c
  2879  000A62  3243               	rrcf	(___lwmod@divisor+1)^0,f,c
  2880  000A64  3242               	rrcf	___lwmod@divisor^0,f,c
  2881  000A66  2E44               	decfsz	___lwmod@counter^0,f,c
  2882  000A68  D7F2               	goto	u970
  2883  000A6A                     l831:
  2884  000A6A  C040  F040         	movff	___lwmod@dividend,?___lwmod
  2885  000A6E  C041  F041         	movff	___lwmod@dividend+1,?___lwmod+1
  2886  000A72  0012               	return		;funcret
  2887  000A74                     __end_of___lwmod:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function ___lwdiv *****************
  2891 ;; Defined at:
  2892 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  dividend        2    0[COMRAM] unsigned int 
  2895 ;;  divisor         2    2[COMRAM] unsigned int 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  quotient        2    4[COMRAM] unsigned int 
  2898 ;;  counter         1    6[COMRAM] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  2    0[COMRAM] unsigned int 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1
  2908 ;;      Params:         4       0       0
  2909 ;;      Locals:         3       0       0
  2910 ;;      Temps:          0       0       0
  2911 ;;      Totals:         7       0       0
  2912 ;;Total ram usage:        7 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    1
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_main
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text18
  2923  0009AC                     __ptext18:
  2924                           	callstack 0
  2925  0009AC                     ___lwdiv:
  2926                           	callstack 29
  2927                           
  2928                           ;incstack = 0
  2929  0009AC  6A3D               	clrf	___lwdiv@quotient^0,c
  2930  0009AE  6A3E               	clrf	(___lwdiv@quotient+1)^0,c
  2931  0009B0  503B               	movf	___lwdiv@divisor^0,w,c
  2932  0009B2  103C               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2933  0009B4  E01B               	bz	l821
  2934  0009B6  0E01               	movlw	1
  2935  0009B8  6E3F               	movwf	___lwdiv@counter^0,c
  2936  0009BA  D004               	goto	l2173
  2937  0009BC                     l2171:
  2938  0009BC  90D8               	bcf	status,0,c
  2939  0009BE  363B               	rlcf	___lwdiv@divisor^0,f,c
  2940  0009C0  363C               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2941  0009C2  2A3F               	incf	___lwdiv@counter^0,f,c
  2942  0009C4                     l2173:
  2943  0009C4  AE3C               	btfss	(___lwdiv@divisor+1)^0,7,c
  2944  0009C6  D7FA               	goto	l2171
  2945  0009C8                     u940:
  2946  0009C8  90D8               	bcf	status,0,c
  2947  0009CA  363D               	rlcf	___lwdiv@quotient^0,f,c
  2948  0009CC  363E               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2949  0009CE  503B               	movf	___lwdiv@divisor^0,w,c
  2950  0009D0  5C39               	subwf	___lwdiv@dividend^0,w,c
  2951  0009D2  503C               	movf	(___lwdiv@divisor+1)^0,w,c
  2952  0009D4  583A               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2953  0009D6  E305               	bnc	l2183
  2954  0009D8  503B               	movf	___lwdiv@divisor^0,w,c
  2955  0009DA  5E39               	subwf	___lwdiv@dividend^0,f,c
  2956  0009DC  503C               	movf	(___lwdiv@divisor+1)^0,w,c
  2957  0009DE  5A3A               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2958  0009E0  803D               	bsf	___lwdiv@quotient^0,0,c
  2959  0009E2                     l2183:
  2960  0009E2  90D8               	bcf	status,0,c
  2961  0009E4  323C               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2962  0009E6  323B               	rrcf	___lwdiv@divisor^0,f,c
  2963  0009E8  2E3F               	decfsz	___lwdiv@counter^0,f,c
  2964  0009EA  D7EE               	goto	u940
  2965  0009EC                     l821:
  2966  0009EC  C03D  F039         	movff	___lwdiv@quotient,?___lwdiv
  2967  0009F0  C03E  F03A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2968  0009F4  0012               	return		;funcret
  2969  0009F6                     __end_of___lwdiv:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _Main_init *****************
  2973 ;; Defined at:
  2974 ;;		line 175 in file "main.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1
  2988 ;;      Params:         0       0       0
  2989 ;;      Locals:         0       0       0
  2990 ;;      Temps:          0       0       0
  2991 ;;      Totals:         0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    4
  2995 ;; This function calls:
  2996 ;;		_init_ds18b20
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text19
  3003  000910                     __ptext19:
  3004                           	callstack 0
  3005  000910                     _Main_init:
  3006                           	callstack 26
  3007                           
  3008                           ;main.c: 178: PORTA = 0;
  3009                           
  3010                           ;incstack = 0
  3011  000910  6A80               	clrf	128,c	;volatile
  3012                           
  3013                           ;main.c: 179: LATA = 0;
  3014  000912  6A89               	clrf	137,c	;volatile
  3015                           
  3016                           ;main.c: 180: TRISA = 0;
  3017  000914  6A92               	clrf	146,c	;volatile
  3018                           
  3019                           ;main.c: 181: PORTB = 0;
  3020  000916  6A81               	clrf	129,c	;volatile
  3021                           
  3022                           ;main.c: 182: LATB = 0;
  3023  000918  6A8A               	clrf	138,c	;volatile
  3024                           
  3025                           ;main.c: 183: TRISB = 0b00000110;
  3026  00091A  0E06               	movlw	6
  3027  00091C  6E93               	movwf	147,c	;volatile
  3028                           
  3029                           ;main.c: 184: PORTC = 0;
  3030  00091E  6A82               	clrf	130,c	;volatile
  3031                           
  3032                           ;main.c: 185: LATC = 0;
  3033  000920  6A8B               	clrf	139,c	;volatile
  3034                           
  3035                           ;main.c: 186: TRISC = 0;
  3036  000922  6A94               	clrf	148,c	;volatile
  3037                           
  3038                           ;main.c: 187: OSCCONbits.SCS0 = 0;
  3039  000924  90D3               	bcf	211,0,c	;volatile
  3040                           
  3041                           ;main.c: 188: OSCCONbits.SCS1 = 1;
  3042  000926  82D3               	bsf	211,1,c	;volatile
  3043                           
  3044                           ;main.c: 189: OSCCONbits.IRCF = 0b111;
  3045  000928  0E70               	movlw	112
  3046  00092A  12D3               	iorwf	211,f,c	;volatile
  3047                           
  3048                           ;main.c: 190: ADCON1bits.PCFG = 0b1111;
  3049  00092C  0E0F               	movlw	15
  3050  00092E  12C1               	iorwf	193,f,c	;volatile
  3051                           
  3052                           ;main.c: 192: PORTAbits.RA6 = 1;
  3053  000930  8C80               	bsf	128,6,c	;volatile
  3054                           
  3055                           ;main.c: 199: init_ds18b20();
  3056  000932  EC1B  F004         	call	_init_ds18b20	;wreg free
  3057                           
  3058                           ;main.c: 201: T1CON = 0b10000000;
  3059  000936  0E80               	movlw	128
  3060  000938  6ECD               	movwf	205,c	;volatile
  3061                           
  3062                           ;main.c: 203: TMR1H = ((unsigned char)(((15536)>>8)&0xFF));
  3063  00093A  0E3C               	movlw	60
  3064  00093C  6ECF               	movwf	207,c	;volatile
  3065                           
  3066                           ;main.c: 204: TMR1L = ((unsigned char)((15536)&0xFF));
  3067  00093E  0EB0               	movlw	176
  3068  000940  6ECE               	movwf	206,c	;volatile
  3069                           
  3070                           ;main.c: 206: T0CONbits.T0PS = 0b000;
  3071  000942  0EF8               	movlw	-8
  3072  000944  16D5               	andwf	213,f,c	;volatile
  3073                           
  3074                           ;main.c: 207: T0CONbits.PSA = 1;
  3075  000946  86D5               	bsf	213,3,c	;volatile
  3076                           
  3077                           ;main.c: 208: T0CONbits.T08BIT = 0;
  3078  000948  9CD5               	bcf	213,6,c	;volatile
  3079                           
  3080                           ;main.c: 209: T0CONbits.T0CS = 0;
  3081  00094A  9AD5               	bcf	213,5,c	;volatile
  3082                           
  3083                           ;main.c: 210: T0CONbits.TMR0ON = 1;
  3084  00094C  8ED5               	bsf	213,7,c	;volatile
  3085                           
  3086                           ;main.c: 211: TMR0H = ((unsigned char)(((45536)>>8)&0xFF));
  3087  00094E  0EB1               	movlw	177
  3088  000950  6ED7               	movwf	215,c	;volatile
  3089                           
  3090                           ;main.c: 212: TMR0L = ((unsigned char)((45536)&0xFF));
  3091  000952  0EE0               	movlw	224
  3092  000954  6ED6               	movwf	214,c	;volatile
  3093                           
  3094                           ;main.c: 213: INTCONbits.T0IE = 1;
  3095  000956  8AF2               	bsf	242,5,c	;volatile
  3096                           
  3097                           ;main.c: 214: INTCON2bits.RBPU = 0;
  3098  000958  9EF1               	bcf	241,7,c	;volatile
  3099                           
  3100                           ;main.c: 218: PIE1bits.TMR1IE = 1;
  3101  00095A  809D               	bsf	157,0,c	;volatile
  3102                           
  3103                           ;main.c: 219: INTCONbits.PEIE = 1;
  3104  00095C  8CF2               	bsf	242,6,c	;volatile
  3105                           
  3106                           ;main.c: 220: INTCONbits.GIE = 1;
  3107  00095E  8EF2               	bsf	242,7,c	;volatile
  3108  000960  0CE0               	retlw	224	;funcret
  3109  000962                     __end_of_Main_init:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _init_ds18b20 *****************
  3113 ;; Defined at:
  3114 ;;		line 18 in file "ds18b20.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  i               1    9[COMRAM] unsigned char 
  3119 ;;  q               1    8[COMRAM] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1
  3129 ;;      Params:         0       0       0
  3130 ;;      Locals:         2       0       0
  3131 ;;      Temps:          2       0       0
  3132 ;;      Totals:         4       0       0
  3133 ;;Total ram usage:        4 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    3
  3136 ;; This function calls:
  3137 ;;		_ow_reset
  3138 ;;		_read_eep
  3139 ;;		_write_byte
  3140 ;; This function is called by:
  3141 ;;		_Main_init
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text20
  3146  000836                     __ptext20:
  3147                           	callstack 0
  3148  000836                     _init_ds18b20:
  3149                           	callstack 26
  3150                           
  3151                           ;ds18b20.c: 20: if (!ow_reset())
  3152                           
  3153                           ;incstack = 0
  3154  000836  EC8A  F005         	call	_ow_reset	;wreg free
  3155  00083A  0900               	iorlw	0
  3156  00083C  E10F               	bnz	l1863
  3157                           
  3158                           ;ds18b20.c: 21: {;ds18b20.c: 23: write_byte(0xCC);
  3159  00083E  0ECC               	movlw	204
  3160  000840  EC55  F005         	call	_write_byte
  3161                           
  3162                           ;ds18b20.c: 24: write_byte(0x4E);
  3163  000844  0E4E               	movlw	78
  3164  000846  EC55  F005         	call	_write_byte
  3165                           
  3166                           ;ds18b20.c: 25: write_byte(0x00);
  3167  00084A  0E00               	movlw	0
  3168  00084C  EC55  F005         	call	_write_byte
  3169                           
  3170                           ;ds18b20.c: 26: write_byte(0x00);
  3171  000850  0E00               	movlw	0
  3172  000852  EC55  F005         	call	_write_byte
  3173                           
  3174                           ;ds18b20.c: 27: write_byte(0x7F);
  3175  000856  0E7F               	movlw	127
  3176  000858  EC55  F005         	call	_write_byte
  3177  00085C                     l1863:
  3178                           
  3179                           ;ds18b20.c: 28: };ds18b20.c: 30: for (uint8_t q = 0; q < 2; q++) {
  3180  00085C  6A41               	clrf	init_ds18b20@q^0,c
  3181  00085E                     l165:
  3182                           
  3183                           ;ds18b20.c: 31: for (uint8_t i = 0; i < 8; i++) {
  3184  00085E  6A42               	clrf	init_ds18b20@i^0,c
  3185  000860                     l1873:
  3186                           
  3187                           ;ds18b20.c: 32: rom_dq[q][i] = read_eep((q*8) + i);
  3188  000860  5041               	movf	init_ds18b20@q^0,w,c
  3189  000862  0D08               	mullw	8
  3190  000864  50F3               	movf	243,w,c
  3191  000866  0F01               	addlw	low _rom_dq
  3192  000868  2442               	addwf	init_ds18b20@i^0,w,c
  3193  00086A  6ED9               	movwf	fsr2l,c
  3194  00086C  6ADA               	clrf	fsr2h,c
  3195  00086E  5041               	movf	init_ds18b20@q^0,w,c
  3196  000870  6E3F               	movwf	??_init_ds18b20^0,c
  3197  000872  6A40               	clrf	(??_init_ds18b20+1)^0,c
  3198  000874  90D8               	bcf	status,0,c
  3199  000876  363F               	rlcf	??_init_ds18b20^0,f,c
  3200  000878  3640               	rlcf	(??_init_ds18b20+1)^0,f,c
  3201  00087A  90D8               	bcf	status,0,c
  3202  00087C  363F               	rlcf	??_init_ds18b20^0,f,c
  3203  00087E  3640               	rlcf	(??_init_ds18b20+1)^0,f,c
  3204  000880  90D8               	bcf	status,0,c
  3205  000882  363F               	rlcf	??_init_ds18b20^0,f,c
  3206  000884  3640               	rlcf	(??_init_ds18b20+1)^0,f,c
  3207  000886  5042               	movf	init_ds18b20@i^0,w,c
  3208  000888  243F               	addwf	??_init_ds18b20^0,w,c
  3209  00088A  6E39               	movwf	read_eep@address^0,c
  3210  00088C  0E00               	movlw	0
  3211  00088E  2040               	addwfc	(??_init_ds18b20+1)^0,w,c
  3212  000890  6E3A               	movwf	(read_eep@address+1)^0,c
  3213  000892  EC0D  F006         	call	_read_eep	;wreg free
  3214  000896  6EDF               	movwf	indf2,c
  3215  000898  2A42               	incf	init_ds18b20@i^0,f,c
  3216  00089A  0E07               	movlw	7
  3217  00089C  6442               	cpfsgt	init_ds18b20@i^0,c
  3218  00089E  D7E0               	goto	l1873
  3219  0008A0  2A41               	incf	init_ds18b20@q^0,f,c
  3220  0008A2  0E01               	movlw	1
  3221  0008A4  6441               	cpfsgt	init_ds18b20@q^0,c
  3222  0008A6  D7DB               	goto	l165
  3223  0008A8  0C01               	retlw	1
  3224  0008AA                     __end_of_init_ds18b20:
  3225                           	callstack 0
  3226                           
  3227 ;; *************** function _write_byte *****************
  3228 ;; Defined at:
  3229 ;;		line 66 in file "onewire.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  val             1    wreg     unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  val             1    3[COMRAM] unsigned char 
  3234 ;;  i               1    5[COMRAM] unsigned char 
  3235 ;;  temp            1    4[COMRAM] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1
  3245 ;;      Params:         0       0       0
  3246 ;;      Locals:         3       0       0
  3247 ;;      Temps:          2       0       0
  3248 ;;      Totals:         5       0       0
  3249 ;;Total ram usage:        5 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    2
  3252 ;; This function calls:
  3253 ;;		_write_bit
  3254 ;; This function is called by:
  3255 ;;		_init_ds18b20
  3256 ;;		_ds18b20_readTemp
  3257 ;;		_ds18b20_readrom
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text21
  3262  000AAA                     __ptext21:
  3263                           	callstack 0
  3264  000AAA                     _write_byte:
  3265                           	callstack 27
  3266                           
  3267                           ;incstack = 0
  3268                           ;write_byte@val stored from wreg
  3269  000AAA  6E3C               	movwf	write_byte@val^0,c
  3270                           
  3271                           ;onewire.c: 68: uint8_t i;;onewire.c: 69: uint8_t temp;;onewire.c: 71: for (i=0;i<8;i++)
  3272  000AAC  6A3E               	clrf	write_byte@i^0,c
  3273  000AAE                     l1127:
  3274                           
  3275                           ;onewire.c: 72: {;onewire.c: 73: temp = val >> i;
  3276  000AAE  C03E  F03A         	movff	write_byte@i,??_write_byte
  3277  000AB2  C03C  F03B         	movff	write_byte@val,??_write_byte+1
  3278  000AB6  2A3A               	incf	??_write_byte^0,f,c
  3279  000AB8  D002               	goto	u104
  3280  000ABA                     u105:
  3281  000ABA  90D8               	bcf	status,0,c
  3282  000ABC  323B               	rrcf	(??_write_byte+1)^0,f,c
  3283  000ABE                     u104:
  3284  000ABE  2E3A               	decfsz	??_write_byte^0,f,c
  3285  000AC0  D7FC               	goto	u105
  3286  000AC2  503B               	movf	(??_write_byte+1)^0,w,c
  3287  000AC4  6E3D               	movwf	write_byte@temp^0,c
  3288                           
  3289                           ;onewire.c: 74: temp &= 0x01;
  3290  000AC6  0E01               	movlw	1
  3291  000AC8  163D               	andwf	write_byte@temp^0,f,c
  3292                           
  3293                           ;onewire.c: 75: write_bit(temp);
  3294  000ACA  503D               	movf	write_byte@temp^0,w,c
  3295  000ACC  ECD8  F005         	call	_write_bit
  3296  000AD0  2A3E               	incf	write_byte@i^0,f,c
  3297  000AD2  0E07               	movlw	7
  3298  000AD4  643E               	cpfsgt	write_byte@i^0,c
  3299  000AD6  D7EB               	goto	l1127
  3300                           
  3301                           ;onewire.c: 76: };onewire.c: 78: _delay((unsigned long)((105)*(8000000/4000000.0)));
  3302  000AD8  0E46               	movlw	70
  3303  000ADA                     u1307:
  3304  000ADA  2EE8               	decfsz	wreg,f,c
  3305  000ADC  D7FE               	bra	u1307
  3306  000ADE  0012               	return		;funcret
  3307  000AE0                     __end_of_write_byte:
  3308                           	callstack 0
  3309                           
  3310 ;; *************** function _write_bit *****************
  3311 ;; Defined at:
  3312 ;;		line 34 in file "onewire.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  bitval          1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  bitval          1    0[COMRAM] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1
  3326 ;;      Params:         0       0       0
  3327 ;;      Locals:         1       0       0
  3328 ;;      Temps:          0       0       0
  3329 ;;      Totals:         1       0       0
  3330 ;;Total ram usage:        1 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    1
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_write_byte
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           	psect	text22
  3341  000BB0                     __ptext22:
  3342                           	callstack 0
  3343  000BB0                     _write_bit:
  3344                           	callstack 27
  3345                           
  3346                           ;incstack = 0
  3347                           ;write_bit@bitval stored from wreg
  3348  000BB0  6E39               	movwf	write_bit@bitval^0,c
  3349                           
  3350                           ;onewire.c: 36: PORTAbits.RA6 = 0;
  3351  000BB2  9C80               	bcf	128,6,c	;volatile
  3352                           
  3353                           ;onewire.c: 37: TRISAbits.TRISA6 = 0;
  3354  000BB4  9C92               	bcf	146,6,c	;volatile
  3355                           
  3356                           ;onewire.c: 38: if(bitval == 1) {
  3357  000BB6  0439               	decf	write_bit@bitval^0,w,c
  3358  000BB8  E104               	bnz	l1103
  3359                           
  3360                           ;onewire.c: 39: _delay((unsigned long)((2)*(8000000/4000000.0)));
  3361  000BBA  D000               	nop2		;2 cycle nop
  3362  000BBC  D000               	nop2		;2 cycle nop
  3363                           
  3364                           ;onewire.c: 40: PORTAbits.RA6 = 1;
  3365  000BBE  8C80               	bsf	128,6,c	;volatile
  3366                           
  3367                           ;onewire.c: 41: TRISAbits.TRISA6 = 1;
  3368  000BC0  8C92               	bsf	146,6,c	;volatile
  3369  000BC2                     l1103:
  3370                           
  3371                           ;onewire.c: 42: };onewire.c: 43: _delay((unsigned long)((105)*(8000000/4000000.0)));
  3372  000BC2  0E46               	movlw	70
  3373  000BC4                     u1317:
  3374  000BC4  2EE8               	decfsz	wreg,f,c
  3375  000BC6  D7FE               	bra	u1317
  3376                           
  3377                           ;onewire.c: 44: PORTAbits.RA6 = 1;
  3378  000BC8  8C80               	bsf	128,6,c	;volatile
  3379                           
  3380                           ;onewire.c: 45: TRISAbits.TRISA6 = 1;
  3381  000BCA  8C92               	bsf	146,6,c	;volatile
  3382  000BCC  0012               	return		;funcret
  3383  000BCE                     __end_of_write_bit:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function _read_eep *****************
  3387 ;; Defined at:
  3388 ;;		line 25 in file "eeprom.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  address         2    0[COMRAM] unsigned short 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      unsigned char 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1
  3402 ;;      Params:         2       0       0
  3403 ;;      Locals:         0       0       0
  3404 ;;      Temps:          0       0       0
  3405 ;;      Totals:         2       0       0
  3406 ;;Total ram usage:        2 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_init_ds18b20
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           	psect	text23
  3417  000C1A                     __ptext23:
  3418                           	callstack 0
  3419  000C1A                     _read_eep:
  3420                           	callstack 27
  3421                           
  3422                           ;eeprom.c: 28: {}
  3423                           
  3424                           ;incstack = 0
  3425  000C1A  B2A6               	btfsc	166,1,c	;volsfr
  3426  000C1C  D7FE               	goto	_read_eep
  3427                           
  3428                           ;eeprom.c: 30: EEADR = address;
  3429  000C1E  C039  FFA9         	movff	read_eep@address,4009	;volatile
  3430                           
  3431                           ;eeprom.c: 31: EECON1bits.EEPGD = 0;
  3432  000C22  9EA6               	bcf	166,7,c	;volsfr
  3433                           
  3434                           ;eeprom.c: 32: EECON1bits.CFGS = 0;
  3435  000C24  9CA6               	bcf	166,6,c	;volsfr
  3436                           
  3437                           ;eeprom.c: 33: EECON1bits.RD = 1;
  3438  000C26  80A6               	bsf	166,0,c	;volsfr
  3439                           
  3440                           ;eeprom.c: 34: return( EEDATA );
  3441  000C28  50A8               	movf	168,w,c	;volatile
  3442  000C2A  0012               	return		;funcret
  3443  000C2C                     __end_of_read_eep:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function _ow_reset *****************
  3447 ;; Defined at:
  3448 ;;		line 5 in file "onewire.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  presence        1    0[COMRAM] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      unsigned char 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1
  3462 ;;      Params:         0       0       0
  3463 ;;      Locals:         1       0       0
  3464 ;;      Temps:          0       0       0
  3465 ;;      Totals:         1       0       0
  3466 ;;Total ram usage:        1 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    1
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_init_ds18b20
  3473 ;;		_ds18b20_readTemp
  3474 ;;		_ds18b20_readrom
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text24
  3479  000B14                     __ptext24:
  3480                           	callstack 0
  3481  000B14                     _ow_reset:
  3482                           	callstack 28
  3483                           
  3484                           ;onewire.c: 7: uint8_t presence;;onewire.c: 8: PORTAbits.RA6 = 0;
  3485                           
  3486                           ;incstack = 0
  3487  000B14  9C80               	bcf	128,6,c	;volatile
  3488                           
  3489                           ;onewire.c: 9: TRISAbits.TRISA6 = 0;
  3490  000B16  9C92               	bcf	146,6,c	;volatile
  3491                           
  3492                           ;onewire.c: 10: _delay((unsigned long)((500)*(8000000/4000000.0)));
  3493  000B18  0EC8               	movlw	200
  3494  000B1A                     u1327:
  3495  000B1A  D000               	nop2	
  3496  000B1C  2EE8               	decfsz	wreg,f,c
  3497  000B1E  D7FD               	bra	u1327
  3498                           
  3499                           ;onewire.c: 11: PORTAbits.RA6 = 1;
  3500  000B20  8C80               	bsf	128,6,c	;volatile
  3501                           
  3502                           ;onewire.c: 12: TRISAbits.TRISA6 = 1;
  3503  000B22  8C92               	bsf	146,6,c	;volatile
  3504                           
  3505                           ;onewire.c: 13: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3506  000B24  0E42               	movlw	66
  3507  000B26                     u1337:
  3508  000B26  2EE8               	decfsz	wreg,f,c
  3509  000B28  D7FE               	bra	u1337
  3510  000B2A  D000               	nop2	
  3511                           
  3512                           ;onewire.c: 14: presence = PORTAbits.RA6;
  3513  000B2C  0E00               	movlw	0
  3514  000B2E  BC80               	btfsc	128,6,c	;volatile
  3515  000B30  0E01               	movlw	1
  3516  000B32  6E39               	movwf	ow_reset@presence^0,c
  3517                           
  3518                           ;onewire.c: 15: _delay((unsigned long)((424)*(8000000/4000000.0)));
  3519  000B34  0EA9               	movlw	169
  3520  000B36                     u1347:
  3521  000B36  D000               	nop2	
  3522  000B38  2EE8               	decfsz	wreg,f,c
  3523  000B3A  D7FD               	bra	u1347
  3524  000B3C  D000               	nop2	
  3525  000B3E  F000               	nop	
  3526                           
  3527                           ;onewire.c: 16: return(presence);
  3528  000B40  5039               	movf	ow_reset@presence^0,w,c
  3529  000B42  0012               	return		;funcret
  3530  000B44                     __end_of_ow_reset:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _myInt *****************
  3534 ;; Defined at:
  3535 ;;		line 229 in file "main.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;		None
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1
  3549 ;;      Params:         0       0       0
  3550 ;;      Locals:         0       0       0
  3551 ;;      Temps:          0       0       0
  3552 ;;      Totals:         0       0       0
  3553 ;;Total ram usage:        0 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		Interrupt level 2
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	intcode
  3563  000008                     __pintcode:
  3564                           	callstack 0
  3565  000008                     _myInt:
  3566                           	callstack 26
  3567                           
  3568                           ;incstack = 0
  3569  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3570                           
  3571                           ;main.c: 230: if (PIR1bits.TMR1IF == 1) {
  3572  00000A  A09E               	btfss	158,0,c	;volatile
  3573  00000C  D00D               	goto	i2l1815
  3574                           
  3575                           ;main.c: 231: PIR1bits.TMR1IF = 0;
  3576  00000E  909E               	bcf	158,0,c	;volatile
  3577                           
  3578                           ;main.c: 232: TMR1H = ((unsigned char)(((15536)>>8)&0xFF));
  3579  000010  0E3C               	movlw	60
  3580  000012  6ECF               	movwf	207,c	;volatile
  3581                           
  3582                           ;main.c: 233: TMR1L = ((unsigned char)((15536)&0xFF));
  3583  000014  0EB0               	movlw	176
  3584  000016  6ECE               	movwf	206,c	;volatile
  3585                           
  3586                           ;main.c: 234: if (++timer_val >= 30)
  3587  000018  2A38               	incf	_timer_val^0,f,c
  3588  00001A  0E1D               	movlw	29
  3589  00001C  6438               	cpfsgt	_timer_val^0,c
  3590  00001E  D004               	goto	i2l1815
  3591                           
  3592                           ;main.c: 235: {;main.c: 236: timer_val = 0;
  3593  000020  6A38               	clrf	_timer_val^0,c
  3594                           
  3595                           ;main.c: 237: time_flag = 1;
  3596  000022  0E01               	movlw	1
  3597  000024  6E37               	movwf	_time_flag^0,c
  3598                           
  3599                           ;main.c: 238: T1CONbits.TMR1ON = 0;
  3600  000026  90CD               	bcf	205,0,c	;volatile
  3601  000028                     i2l1815:
  3602                           
  3603                           ;main.c: 240: };main.c: 241: };main.c: 242: if (INTCONbits.T0IF == 1) {
  3604  000028  A4F2               	btfss	242,2,c	;volatile
  3605  00002A  D006               	goto	i2l137
  3606                           
  3607                           ;main.c: 243: INTCONbits.T0IF = 0;
  3608  00002C  94F2               	bcf	242,2,c	;volatile
  3609                           
  3610                           ;main.c: 244: TMR0H = ((unsigned char)(((45536)>>8)&0xFF));
  3611  00002E  0EB1               	movlw	177
  3612  000030  6ED7               	movwf	215,c	;volatile
  3613                           
  3614                           ;main.c: 245: TMR0L = ((unsigned char)((45536)&0xFF));
  3615  000032  0EE0               	movlw	224
  3616  000034  6ED6               	movwf	214,c	;volatile
  3617                           
  3618                           ;main.c: 246: read_key = 1;
  3619  000036  804C               	bsf	(_read_key/(0+8))^0,_read_key& (0+7),c
  3620  000038                     i2l137:
  3621  000038  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3622  00003A  0011               	retfie		f
  3623  00003C                     __end_of_myInt:
  3624                           	callstack 0
  3625                           
  3626                           	psect	rparam
  3627  0000                     
  3628                           	psect	temp
  3629  00004D                     btemp:
  3630                           	callstack 0
  3631  00004D                     	ds	1
  3632  0000                     int$flags	set	btemp
  3633  0000                     wtemp8	set	btemp+1
  3634  0000                     ttemp5	set	btemp+1
  3635  0000                     ttemp6	set	btemp+4
  3636  0000                     ttemp7	set	btemp+8
  3637                           
  3638                           	psect	idloc
  3639                           
  3640                           ;Config register IDLOC0 @ 0x200000
  3641                           ;	unspecified, using default values
  3642  200000                     	org	2097152
  3643  200000  FF                 	db	255
  3644                           
  3645                           ;Config register IDLOC1 @ 0x200001
  3646                           ;	unspecified, using default values
  3647  200001                     	org	2097153
  3648  200001  FF                 	db	255
  3649                           
  3650                           ;Config register IDLOC2 @ 0x200002
  3651                           ;	unspecified, using default values
  3652  200002                     	org	2097154
  3653  200002  FF                 	db	255
  3654                           
  3655                           ;Config register IDLOC3 @ 0x200003
  3656                           ;	unspecified, using default values
  3657  200003                     	org	2097155
  3658  200003  FF                 	db	255
  3659                           
  3660                           ;Config register IDLOC4 @ 0x200004
  3661                           ;	unspecified, using default values
  3662  200004                     	org	2097156
  3663  200004  FF                 	db	255
  3664                           
  3665                           ;Config register IDLOC5 @ 0x200005
  3666                           ;	unspecified, using default values
  3667  200005                     	org	2097157
  3668  200005  FF                 	db	255
  3669                           
  3670                           ;Config register IDLOC6 @ 0x200006
  3671                           ;	unspecified, using default values
  3672  200006                     	org	2097158
  3673  200006  FF                 	db	255
  3674                           
  3675                           ;Config register IDLOC7 @ 0x200007
  3676                           ;	unspecified, using default values
  3677  200007                     	org	2097159
  3678  200007  FF                 	db	255
  3679                           
  3680                           	psect	config
  3681                           
  3682                           ; Padding undefined space
  3683  300000                     	org	3145728
  3684  300000  FF                 	db	255
  3685                           
  3686                           ;Config register CONFIG1H @ 0x300001
  3687                           ;	Oscillator Selection bits
  3688                           ;	OSC = INTIO2, Internal RC oscillator, port function on RA6 and port function on RA7
  3689                           ;	Fail-Safe Clock Monitor Enable bit
  3690                           ;	FSCM = OFF, Fail-Safe Clock Monitor disabled
  3691                           ;	Internal/External Switchover bit
  3692                           ;	IESO = OFF, Internal/External Switchover mode disabled
  3693  300001                     	org	3145729
  3694  300001  08                 	db	8
  3695                           
  3696                           ;Config register CONFIG2L @ 0x300002
  3697                           ;	Power-up Timer enable bit
  3698                           ;	PWRT = ON, PWRT enabled
  3699                           ;	Brown-out Reset enable bit
  3700                           ;	BOR = ON, Brown-out Reset enabled
  3701                           ;	Brown-out Reset Voltage bits
  3702                           ;	BORV = 27, VBOR set to 2.7V
  3703  300002                     	org	3145730
  3704  300002  0A                 	db	10
  3705                           
  3706                           ;Config register CONFIG2H @ 0x300003
  3707                           ;	Watchdog Timer Enable bit
  3708                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3709                           ;	Watchdog Timer Postscale Select bits
  3710                           ;	WDTPS = 32768, 1:32768
  3711  300003                     	org	3145731
  3712  300003  1E                 	db	30
  3713                           
  3714                           ; Padding undefined space
  3715  300004                     	org	3145732
  3716  300004  FF                 	db	255
  3717                           
  3718                           ;Config register CONFIG3H @ 0x300005
  3719                           ;	CCP2 MUX bit
  3720                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3721                           ;	PORTB A/D Enable bit
  3722                           ;	PBAD = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  3723                           ;	MCLR Pin Enable bit
  3724                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3725  300005                     	org	3145733
  3726  300005  81                 	db	129
  3727                           
  3728                           ;Config register CONFIG4L @ 0x300006
  3729                           ;	Stack Full/Underflow Reset Enable bit
  3730                           ;	STVR = ON, Stack full/underflow will cause Reset
  3731                           ;	Single-Supply ICSP Enable bit
  3732                           ;	LVP = OFF, Single-Supply ICSP disabled
  3733                           ;	Background Debugger Enable bit
  3734                           ;	DEBUG = 0x1, unprogrammed default
  3735  300006                     	org	3145734
  3736  300006  81                 	db	129
  3737                           
  3738                           ; Padding undefined space
  3739  300007                     	org	3145735
  3740  300007  FF                 	db	255
  3741                           
  3742                           ;Config register CONFIG5L @ 0x300008
  3743                           ;	Code Protection bit
  3744                           ;	CP0 = OFF, Block 0 (000200-0007FFh) not code-protected
  3745                           ;	Code Protection bit
  3746                           ;	CP1 = OFF, Block 1 (000800-000FFFh) not code-protected
  3747                           ;	Code Protection bit
  3748                           ;	CP2 = OFF, Block 2 (001000-0017FFh) not code-protected
  3749                           ;	Code Protection bit
  3750                           ;	CP3 = OFF, Block 3 (001800-001FFFh) not code-protected
  3751  300008                     	org	3145736
  3752  300008  0F                 	db	15
  3753                           
  3754                           ;Config register CONFIG5H @ 0x300009
  3755                           ;	Boot Block Code Protection bit
  3756                           ;	CPB = OFF, Boot block (000000-0001FFh) is not code-protected
  3757                           ;	Data EEPROM Code Protection bit
  3758                           ;	CPD = OFF, Data EEPROM is not code-protected
  3759  300009                     	org	3145737
  3760  300009  C0                 	db	192
  3761                           
  3762                           ;Config register CONFIG6L @ 0x30000A
  3763                           ;	Write Protection bit
  3764                           ;	WRT0 = OFF, Block 0 (000200-0007FFh) not write-protected
  3765                           ;	Write Protection bit
  3766                           ;	WRT1 = OFF, Block 1 (000800-000FFFh) not write-protected
  3767                           ;	Write Protection bit
  3768                           ;	WRT2 = OFF, Block 2 (001000-0017FFh) not write-protected
  3769                           ;	Write Protection bit
  3770                           ;	WRT3 = OFF, Block 3 (001800-001FFFh) not write-protected
  3771  30000A                     	org	3145738
  3772  30000A  0F                 	db	15
  3773                           
  3774                           ;Config register CONFIG6H @ 0x30000B
  3775                           ;	Configuration Register Write Protection bit
  3776                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3777                           ;	Boot Block Write Protection bit
  3778                           ;	WRTB = OFF, Boot block (000000-0001FFh) is not write-protected
  3779                           ;	Data EEPROM Write Protection bit
  3780                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3781  30000B                     	org	3145739
  3782  30000B  E0                 	db	224
  3783                           
  3784                           ;Config register CONFIG7L @ 0x30000C
  3785                           ;	Table Read Protection bit
  3786                           ;	EBTR0 = OFF, Block 0 (000200-0007FFh) not protected from table reads executed in other
      +                           blocks
  3787                           ;	Table Read Protection bit
  3788                           ;	EBTR1 = OFF, Block 1 (000800-000FFFh) not protected from table reads executed in other
      +                           blocks
  3789                           ;	Table Read Protection bit
  3790                           ;	EBTR2 = OFF, Block 2 (001000-0017FFh) not protected from table reads executed in other
      +                           blocks
  3791                           ;	Table Read Protection bit
  3792                           ;	EBTR3 = OFF, Block 3 (001800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3793  30000C                     	org	3145740
  3794  30000C  0F                 	db	15
  3795                           
  3796                           ;Config register CONFIG7H @ 0x30000D
  3797                           ;	Boot Block Table Read Protection bit
  3798                           ;	EBTRB = OFF, Boot block (000000-0001FFh) is not protected from table reads executed in
      +                           other blocks
  3799  30000D                     	org	3145741
  3800  30000D  40                 	db	64
  3801                           tosu	equ	0xFFF
  3802                           tosh	equ	0xFFE
  3803                           tosl	equ	0xFFD
  3804                           stkptr	equ	0xFFC
  3805                           pclatu	equ	0xFFB
  3806                           pclath	equ	0xFFA
  3807                           pcl	equ	0xFF9
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           prodh	equ	0xFF4
  3813                           prodl	equ	0xFF3
  3814                           indf0	equ	0xFEF
  3815                           postinc0	equ	0xFEE
  3816                           postdec0	equ	0xFED
  3817                           preinc0	equ	0xFEC
  3818                           plusw0	equ	0xFEB
  3819                           fsr0h	equ	0xFEA
  3820                           fsr0l	equ	0xFE9
  3821                           wreg	equ	0xFE8
  3822                           indf1	equ	0xFE7
  3823                           postinc1	equ	0xFE6
  3824                           postdec1	equ	0xFE5
  3825                           preinc1	equ	0xFE4
  3826                           plusw1	equ	0xFE3
  3827                           fsr1h	equ	0xFE2
  3828                           fsr1l	equ	0xFE1
  3829                           bsr	equ	0xFE0
  3830                           indf2	equ	0xFDF
  3831                           postinc2	equ	0xFDE
  3832                           postdec2	equ	0xFDD
  3833                           preinc2	equ	0xFDC
  3834                           plusw2	equ	0xFDB
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8

Data Sizes:
    Strings     49
    Constant    16
    Data        2
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      76
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    lcdPrint@t	PTR const unsigned char  size(2) Largest target is 17
		 -> TxtBuf(COMRAM[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[17]), 

    ds18b20_crc8@data_in	PTR unsigned char  size(1) Largest target is 8
		 -> ds18b20_readrom@temp_rom(COMRAM[8]), 

    ds18b20_get_temp@minus	PTR unsigned char  size(1) Largest target is 1
		 -> minus_2(COMRAM[1]), minus_1(COMRAM[1]), 

    ds18b20_readTemp@time_flag	PTR unsigned char  size(1) Largest target is 1
		 -> time_flag(COMRAM[1]), 

    ds18b20_readTemp@timer_val	PTR unsigned char  size(1) Largest target is 1
		 -> timer_val(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_ds18b20_readrom
    _lcdPrint->_lcd_gotoxy
    _lcd_gotoxy->_lcdWrite
    _initLCD->_clearLCD
    _clearLCD->_lcdWrite
    _lcdWrite->_lcdNibble
    _ds18b20_readrom->_ds18b20_crc8
    _ds18b20_readTemp->_write_byte
    ___lwmod->___lwdiv
    _Main_init->_init_ds18b20
    _init_ds18b20->_write_byte
    _write_byte->_write_bit

Critical Paths under _myInt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInt in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12798
                           _Delay_ms
                          _Main_init
                            ___lwdiv
                            ___lwmod
                           _clearLCD
                   _ds18b20_get_temp
                   _ds18b20_readTemp
                    _ds18b20_readrom
                            _initLCD
                         _key_GetKey
                          _key_press
                           _lcdPrint
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             3     1      2    3426
                                              7 COMRAM     3     1      2
                           _lcdWrite
                         _lcd_gotoxy
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           3     2      1    1752
                                              4 COMRAM     3     2      1
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (1) _key_press                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _key_GetKey                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0    1906
                                              5 COMRAM     1     1      0
                           _clearLCD
                          _lcdNibble
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (2) _clearLCD                                             1     1      0     923
                                              4 COMRAM     1     1      0
                           _lcdWrite
 ---------------------------------------------------------------------------------
 (2) _lcdWrite                                             2     1      1     923
                                              2 COMRAM     2     1      1
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ds18b20_readrom                                     10    10      0    1214
                                              7 COMRAM    10    10      0
                           _Delay_ms
                       _ds18b20_crc8
                           _ow_reset
                          _read_byte
                         _write_byte
                          _write_eep
 ---------------------------------------------------------------------------------
 (2) _write_eep                                            2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ds18b20_crc8                                         7     5      2     405
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             5     3      2     274
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ds18b20_readTemp                                     8     6      2     655
                                              6 COMRAM     8     6      2
                           _ow_reset
                          _read_byte
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            4     4      0      60
                                              0 COMRAM     4     4      0
                           _read_bit
 ---------------------------------------------------------------------------------
 (3) _read_bit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ds18b20_get_temp                                     7     5      2     379
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    1071
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Main_init                                            0     0      0     383
                       _init_ds18b20
 ---------------------------------------------------------------------------------
 (2) _init_ds18b20                                         4     4      0     383
                                              6 COMRAM     4     4      0
                           _ow_reset
                           _read_eep
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0      90
                                              1 COMRAM     5     5      0
                          _write_bit
 ---------------------------------------------------------------------------------
 (3) _write_bit                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _read_eep                                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ow_reset                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myInt                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _Main_init
     _init_ds18b20
       _ow_reset
       _read_eep
       _write_byte
         _write_bit
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)
   _clearLCD
     _lcdWrite
       _lcdNibble
   _ds18b20_get_temp
   _ds18b20_readTemp
     _ow_reset
     _read_byte
       _read_bit
     _write_byte
       _write_bit
   _ds18b20_readrom
     _Delay_ms
     _ds18b20_crc8
     _ow_reset
     _read_byte
       _read_bit
     _write_byte
       _write_bit
     _write_eep
   _initLCD
     _clearLCD
       _lcdWrite
         _lcdNibble
     _lcdNibble
     _lcdWrite
       _lcdNibble
   _key_GetKey
   _key_press
   _lcdPrint
     _lcdWrite
       _lcdNibble
     _lcd_gotoxy
       _lcdWrite
         _lcdNibble
   _lcd_gotoxy
     _lcdWrite
       _lcdNibble

 _myInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E     11      4C       1       60.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C       7        0.0%
DATA                 0      0      4C       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Nov 30 16:49:46 2020

                       PL2 0434                         PL4 044C                         PL6 045C  
                       PL8 071C                         u10 07C8                         u30 07DE  
                       u50 07F6                         u28 07CA                         u70 080A  
                       u48 07E0                         u68 07F8                         u88 080C  
             lcdWrite@byte 003C                        PL10 047A                        PL20 04B2  
                      PL12 072A                        PL30 04E0                        PL22 04B8  
                      PL14 048C                        PL32 082C                        PL24 04C0  
                      PL16 0498                        PL34 0906                        PL26 04CC  
                      PL18 04A4                        PL36 0736                        PL28 04D6  
             lcdWrite@type 003B                        l203 0988                        l126 0BA4  
                      l230 0B4E                        l331 0A32                        l165 085E  
                      l325 0A00                        l238 0BDA                        l327 0A08  
                      l177 0610                        l329 0A12                        l821 09EC  
                      l831 0A6A                        u104 0ABE                        u105 0ABA  
                      u214 0A90                        u215 0A8C                        u800 06E2  
                      u810 06F6                        u900 08CC                        u820 0716  
                      u807 06E0                        u817 06F4                        u827 0714  
                      u940 09C8                        u970 0A4E                        wreg 000FE8  
          lcdNibble@nibble 003A              write_eep@data 0039                lcd_gotoxy@x 003E  
              lcd_gotoxy@y 003D                       l1103 0BC2                       l1211 0A98  
                     l2021 06D0                       l2013 06A2                       l1127 0AAE  
                     l1207 0A78                       l2033 05E4                       l2105 068A  
                     l2025 06E8                       l2017 06BA                       l2051 0612  
                     l2019 06C4                       l2027 0704                       l2117 0772  
                     l2061 061E                       l2141 08BC                       l2029 0708  
                     l2231 0296                       l2171 09BC                       l2075 0642  
                     l2155 08E0                       l2243 02DC                       l2173 09C4  
                     l2237 02A0                       l2183 09E2                       l2191 0A42  
                     l2423 0410                       l2415 0400                       l2239 02A8  
                     l2431 0424                       l2193 0A4A                       l1377 0A14  
                     l2363 03A4                       l2339 038A                       l1389 0A28  
                     l2199 0A60                       l1911 0B6A                       l1905 09A2  
                     l1851 0B92                       l1835 0B50                       l2387 03C2  
                     l1845 0BDC                       l1863 085C                       l1873 0860  
                     l1885 0968                       l1897 0996                       l1889 0978  
                     STR_1 0211                       STR_2 0232                       STR_3 0222  
         ow_reset@presence 0039                       u1107 06AE                       u1117 04F4  
          _ds18b20_readrom 08AA                       u1207 05A6                       u1127 0504  
                     u1217 05BA                       u1137 0514                       u1307 0ADA  
                     u1227 05D2                       u1147 0524                       u1317 0BC4  
                     u1237 0BF8                       u1157 053A                       _LATA 000F89  
                     _LATB 000F8A                       u1327 0B1A                       u1247 0B52  
                     u1167 054E                       _LATC 000F8B                       u1337 0B26  
                     u1257 081A                       u1177 0562                       u1347 0B36  
                     u1267 0824                       u1187 0576                       u1277 0B98  
                     u1197 058E                       u1287 0A9A                       u1297 0C10  
                     _main 0244                       fsr2h 000FDA                       indf2 000FDF  
                     fsr2l 000FD9                       btemp 004D              write_byte@val 003C  
                     prodh 000FF4                       prodl 000FF3                       start 003C  
             ___param_bank 000000           _ds18b20_get_temp 073C           _ds18b20_readTemp 05E2  
                    ?_main 0039                      _EEADR 000FA9                      _T1CON 000FCD  
          __end_of___lwdiv 09F6            __end_of___lwmod 0A74                      i2l137 0038  
                    _TMR0H 000FD7                      _TMR1H 000FCF                      _TMR0L 000FD6  
                    _TMR1L 000FCE                      _PORTA 000F80                      _PORTB 000F81  
                    _PORTC 000F82                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94            __end_of_initLCD 05E2                      _fract 0201  
                    _myInt 0008             write_byte@temp 003D             __pbitbssCOMRAM 0260  
                    tablat 000FF5                      ttemp5 004E                      ttemp6 0051  
                    ttemp7 0055                      status 000FD8                      wtemp8 004E  
         __end_of_Delay_ms 0BB0            write_bit@bitval 0039            __initialization 0AE0  
          ds18b20_crc8@crc 003F               __end_of_main 0434        ds18b20_crc8@data_in 0039  
                   ??_main 004A              __activetblptr 000002              ?_init_ds18b20 0039  
  __end_of_ds18b20_readrom 0906                     ?_myInt 0039                     _EEDATA 000FA8  
                   _EECON2 000FA7         __size_of_Main_init 0052                     i2l1815 0028  
         __end_of_clearLCD 0C04           __end_of_lcdPrint 071C           __end_of_lcdWrite 0B68  
                   _TxtBuf 0025                  ??___lwdiv 003D                  ??___lwmod 0044  
                   _dq_num 004A              Delay_ms@delay 0039           __end_of_read_eep 0C2C  
         __end_of_read_bit 0C1A                     clear_0 0B00                     _select 004B  
                   _rom_dq 0001             ??_init_ds18b20 003F                  ??_initLCD 003E  
             __pdataCOMRAM 004A               __mediumconst 0000           __end_of_ow_reset 0B44  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0080    __end_of__initialization 0B06              ___rparam_used 000001  
         write_eep@address 003A           ds18b20_crc8@data 003C             __pcstackCOMRAM 0039  
            __end_of_fract 0211              __end_of_myInt 003C          __end_of_Main_init 0962  
   ds18b20_crc8@loop_count 003E                 __end_ofPL2 044C                 __end_ofPL4 045C  
               __end_ofPL6 047A                 __end_ofPL8 072A              ?_ds18b20_crc8 0039  
       __size_of_lcdNibble 0070       ds18b20_readTemp@temp 0043           ?_ds18b20_readrom 0039  
                ?_Delay_ms 0039          lcd_gotoxy@address 003F                    ??_myInt 0039  
 __end_of_ds18b20_get_temp 07BC   __end_of_ds18b20_readTemp 06A0         __size_of_key_press 0040  
       __size_of_read_byte 0036    ds18b20_crc8@bit_counter 003B           ds18b20_readrom@i 0049  
           ??_ds18b20_crc8 003B                  ?_clearLCD 0039                 ??_Delay_ms 003B  
               _lcd_gotoxy 0BCE                  ?_lcdPrint 0040                  ?_lcdWrite 003B  
                ?_read_bit 0039                  ?_read_eep 0039                 _key_GetKey 0C2C  
     __end_of_init_ds18b20 08AA          __end_of_lcdNibble 082C         __size_of_write_bit 001E  
       __size_of_write_eep 0024                    __Hparam 0000                    __Lparam 0000  
                ?_ow_reset 0039                    ___lwdiv 09AC                    ___lwmod 0A36  
             __psmallconst 0200                    __pcinit 0AE0    ds18b20_readrom@temp_rom 0040  
                  __ramtop 0200                    __ptext0 0244                    __ptext1 06A0  
                  __ptext2 0BCE                    __ptext3 09F6                    __ptext4 0C2C  
                  __ptext5 04EA                    __ptext6 0BEA                    __ptext7 0B44  
                  __ptext8 07BC                    __ptext9 08AA                  _T0CONbits 000FD5  
                  _initLCD 04EA                  _T1CONbits 000FCD          __end_of_key_press 0A36  
        __end_of_read_byte 0AAA                 ??_clearLCD 003D                    _minus_1 0036  
                  _minus_2 0035                    _scratch 0011                 ??_lcdPrint 0042  
               ??_lcdWrite 003C       end_of_initialization 0B06                  Delay_ms@i 003C  
             key_press@key 0039              __Lmediumconst 0000                 ??_read_eep 003B  
               ??_read_bit 0039                 ??_ow_reset 0039                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE                 _temp_ready 001A  
             read_byte@val 003B        ds18b20_get_temp@tmp 003D                  _PORTAbits 000F80  
                _PORTCbits 000F82              key_GetKey@key 0039          __end_of_write_bit 0BCE  
        __end_of_write_eep 0B8C                  _TRISAbits 000F92                ?_lcd_gotoxy 003D  
     __end_of_ds18b20_crc8 09AC                ?_key_GetKey 0039              __pidataCOMRAM 0C36  
               _write_byte 0AAA                  _Main_init 0910                __end_ofPL10 048C  
              __end_ofPL20 04B8                __end_ofPL12 0736                __end_ofPL30 04EA  
              __end_ofPL22 04C0                __end_ofPL14 0498                __end_ofPL32 0836  
              __end_ofPL24 04CC                __end_ofPL16 04A4                __end_ofPL34 0910  
              __end_ofPL26 04D6                __end_ofPL18 04B2                __end_ofPL36 073C  
              __end_ofPL28 04E0        start_initialization 0AE0          __size_of_Delay_ms 0024  
    __size_of_init_ds18b20 0074          ?_ds18b20_get_temp 0039         ??_ds18b20_get_temp 003B  
        ?_ds18b20_readTemp 003F         ??_ds18b20_readTemp 0041   ds18b20_crc8@feedback_bit 003D  
      __size_of_lcd_gotoxy 001C            read_eep@address 0039                 read_byte@i 003C  
               ?_Main_init 0039        __size_of_key_GetKey 000A               _init_ds18b20 0836  
              __pbssCOMRAM 0001          __size_of_clearLCD 001A          __size_of_lcdPrint 007C  
        __size_of_lcdWrite 0024   __size_of_ds18b20_readrom 005C      ds18b20_crc8@num_bytes 003A  
        ds18b20_readTemp@i 0046          ds18b20_readTemp@j 0045          __size_of_read_eep 0012  
        __size_of_read_bit 0016           ___lwdiv@dividend 0039                  __pintcode 0008  
                _lcdNibble 07BC                   ?___lwdiv 0039                   ?___lwmod 0040  
        __size_of_ow_reset 0030                ?_write_byte 0039                   ?_initLCD 0039  
              __smallconst 0200      __size_of_ds18b20_crc8 004A           ___lwdiv@quotient 003D  
                _key_press 09F6             __size_of_myInt 0034                  _read_byte 0A74  
                 _PIE1bits 000F9D                   _PIR1bits 000F9E                 ?_lcdNibble 0039  
                _time_flag 0037                  _timer_val 0038                  lcdPrint@t 0040  
               _ADCON1bits 000FC1               _ds18b20_crc8 0962                ??_Main_init 0043  
              write_byte@i 003E                   _Delay_ms 0B8C               ??_lcd_gotoxy 003E  
               ?_key_press 0039                  _write_bit 0BB0                  _write_eep 0B68  
              _INTCON2bits 000FF1                 ?_read_byte 0039              init_ds18b20@i 0042  
            init_ds18b20@q 0041        __size_of_write_byte 0036               ??_key_GetKey 0039  
               _EECON1bits 000FA6                   __Hrparam 0000                   __Lrparam 0000  
        ??_ds18b20_readrom 0040         __end_of_lcd_gotoxy 0BEA             key_press@count 0022  
         __size_of___lwdiv 004A           __size_of___lwmod 003E              _temperature_1 0020  
            _temperature_2 001E           __size_of_initLCD 00F8                   _clearLCD 0BEA  
              _key_pressed 0023         __end_of_key_GetKey 0C36            ___lwdiv@divisor 003B  
          ___lwdiv@counter 003F                   __ptext10 0B68                   __ptext11 0962  
                 __ptext20 0836                   __ptext12 0B8C                   __ptext21 0AAA  
                 __ptext13 05E2                   __ptext22 0BB0                   __ptext14 0A74  
                 __ptext23 0C1A                   __ptext15 0C04                   __ptext24 0B14  
                 __ptext16 073C                   __ptext17 0A36                   __ptext18 09AC  
                 __ptext19 0910                   _lcdPrint 06A0                   _lcdWrite 0B44  
               ?_write_bit 0039                 ?_write_eep 0039     ds18b20_get_temp@num_dq 003C  
            __size_of_main 01F0                   _read_eep 0C1A                   _read_bit 0C04  
    ds18b20_readrom@num_dq 0048                   _read_key 0260                ??_lcdNibble 0039  
                 _ow_reset 0B14                   int$flags 004D  __size_of_ds18b20_get_temp 0080  
__size_of_ds18b20_readTemp 00BE                 _INTCONbits 000FF2                ??_key_press 0039  
              ??_read_byte 0039                   intlevel2 0000           ___lwmod@dividend 0040  
    ds18b20_get_temp@minus 0039                 _OSCCONbits 000FD3  ds18b20_readTemp@time_flag 003F  
ds18b20_readTemp@timer_val 0040               ??_write_byte 003A            ___lwmod@divisor 0042  
     ds18b20_get_temp@temp 003E            ___lwmod@counter 0044                ??_write_eep 003A  
              ??_write_bit 0039                _pressed_key 0024         __end_of_write_byte 0AE0  
